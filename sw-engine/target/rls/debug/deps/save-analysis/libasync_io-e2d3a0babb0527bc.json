{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10","program":"/home/ratnadeepb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_io","--edition=2018","/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e2d3a0babb0527bc","-C","extra-filename=-e2d3a0babb0527bc","--out-dir","/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps","-L","dependency=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps","--extern","concurrent_queue=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libconcurrent_queue-834679cce77b6d82.rmeta","--extern","fastrand=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libfastrand-e23e0450165c63f0.rmeta","--extern","futures_lite=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libfutures_lite-3241cd61c96bc0c1.rmeta","--extern","libc=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/liblibc-0b0c480e4eba652c.rmeta","--extern","log=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/liblog-d1bc27e390c9f551.rmeta","--extern","nb_connect=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libnb_connect-92a21258b0ecdd51.rmeta","--extern","once_cell=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libonce_cell-d926fdf7c10f1bde.rmeta","--extern","parking=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libparking-d363c4aaec363b2c.rmeta","--extern","polling=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libpolling-9f4943353dde2806.rmeta","--extern","vec_arena=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libvec_arena-7cd8814f1ab72fc7.rmeta","--extern","waker_fn=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libwaker_fn-d0cc778dfdbd8541.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ratnadeepb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libasync_io-e2d3a0babb0527bc.rmeta"},"prelude":{"crate_id":{"name":"async_io","disambiguator":[336022659958950843,1116465169829736590]},"crate_root":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src","external_crates":[{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-lite-1.11.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":18,"id":{"name":"futures_lite","disambiguator":[6117714520599453772,8484097998357092825]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":19,"id":{"name":"pin_project_lite","disambiguator":[5607807057461339522,6725694708519707567]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","num":20,"id":{"name":"parking","disambiguator":[1912592282399810125,3469003789357319284]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","num":21,"id":{"name":"waker_fn","disambiguator":[14845554815936716627,8868179212949377743]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":22,"id":{"name":"futures_core","disambiguator":[17846188185908526815,16527903141768937787]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":23,"id":{"name":"futures_io","disambiguator":[9232900326019863265,568518148750711291]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":24,"id":{"name":"fastrand","disambiguator":[3408269325588900967,16728114439760272754]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":25,"id":{"name":"memchr","disambiguator":[12235781942138097695,15300030242497884672]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","num":26,"id":{"name":"once_cell","disambiguator":[12313906990279471851,9875858460806381181]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","num":27,"id":{"name":"concurrent_queue","disambiguator":[1114423713743579175,12979178171406951721]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","num":28,"id":{"name":"cache_padded","disambiguator":[11137113845731266122,3662112313025328365]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","num":29,"id":{"name":"polling","disambiguator":[8028430234324382448,1552899864992016756]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","num":30,"id":{"name":"cfg_if","disambiguator":[1190566754512566321,10025227971434305752]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","num":31,"id":{"name":"log","disambiguator":[12436556438384569570,6297599273872634763]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":32,"id":{"name":"libc","disambiguator":[5685806396558604199,18160522604763458062]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","num":33,"id":{"name":"vec_arena","disambiguator":[18333301199461354345,5842087333849402271]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","num":34,"id":{"name":"nb_connect","disambiguator":[18326083242682026400,4771674835336785177]}}],"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":0,"byte_end":49198,"line_start":1,"line_end":1512,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":2917,"byte_end":2925,"line_start":86,"line_end":86,"column_start":17,"column_end":25},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":0,"byte_end":49198,"line_start":1,"line_end":1512,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":90},{"krate":0,"index":186},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":187},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":397},{"krate":0,"index":401},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":248},{"krate":0,"index":254},{"krate":0,"index":261},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":365},{"krate":0,"index":368}],"decl_id":null,"docs":" Async I/O and timers.","sig":null,"attributes":[{"value":"/ Async I/O and timers.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides two tools:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30,"byte_end":64,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":65,"byte_end":68,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Async`], an adapter for standard networking types (and [many other] types) to use in","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":69,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/   async programs.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":162,"byte_end":183,"line_start":6,"line_end":6,"column_start":1,"column_end":22}},{"value":"/ * [`Timer`], a future that expires at a point in time.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":184,"byte_end":242,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":243,"byte_end":246,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For concrete async networking types built on top of this crate, see [`async-net`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":247,"byte_end":333,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":334,"byte_end":337,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [many other]: https://github.com/stjepang/async-io/tree/master/examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":338,"byte_end":413,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ [`async-net`]: https://docs.rs/async-net","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":414,"byte_end":458,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":459,"byte_end":462,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":463,"byte_end":483,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":484,"byte_end":487,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The first time [`Async`] or [`Timer`] is used, a thread named \"async-io\" will be spawned.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":488,"byte_end":581,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/ The purpose of this thread is to wait for I/O events reported by the operating system, and then","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":582,"byte_end":681,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ wake appropriate futures blocked on I/O or timers when they can be resumed.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":682,"byte_end":761,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":762,"byte_end":765,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ To wait for the next I/O event, the \"async-io\" thread uses [epoll] on Linux/Android/illumos,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":766,"byte_end":862,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ [kqueue] on macOS/iOS/BSD, [event ports] on illumos/Solaris, and [wepoll] on Windows. That","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":863,"byte_end":957,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ functionality is provided by the [`polling`] crate.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":958,"byte_end":1013,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1014,"byte_end":1017,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ However, note that you can also process I/O events and wake futures on any thread using the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1018,"byte_end":1113,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ [`block_on()`] function. The \"async-io\" thread is therefore just a fallback mechanism","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1114,"byte_end":1203,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ processing I/O events in case no other threads are.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1204,"byte_end":1259,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1260,"byte_end":1263,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1264,"byte_end":1312,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1313,"byte_end":1363,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1364,"byte_end":1418,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1419,"byte_end":1471,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/ [`polling`]: https://docs.rs/polling","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1472,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1517,"byte_end":1531,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1532,"byte_end":1535,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Connect to `example.com:80`, or time out after 10 seconds.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1536,"byte_end":1598,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1599,"byte_end":1602,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1603,"byte_end":1610,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_io::{Async, Timer};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1611,"byte_end":1644,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ use futures_lite::{future::FutureExt, io};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1645,"byte_end":1691,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1692,"byte_end":1695,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1696,"byte_end":1741,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1742,"byte_end":1770,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1771,"byte_end":1774,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1775,"byte_end":1819,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1820,"byte_end":1887,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1888,"byte_end":1891,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).or(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1892,"byte_end":1953,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":1954,"byte_end":2006,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/     Err(io::ErrorKind::TimedOut.into())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":2007,"byte_end":2050,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":2051,"byte_end":2057,"line_start":51,"line_end":51,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":2058,"byte_end":2070,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":2071,"byte_end":2104,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":2105,"byte_end":2112,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":2114,"byte_end":2185,"line_start":56,"line_end":56,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52377,"byte_end":52385,"line_start":103,"line_end":103,"column_start":8,"column_end":16},"name":"block_on","qualname":"::driver::block_on","value":"pub fn block_on<T, impl Future<Output = T>: Future<Output =\n                T>>(impl Future<Output = T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread on a future, processing I/O events when idle.","sig":null,"attributes":[{"value":"/ Blocks the current thread on a future, processing I/O events when idle.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":51980,"byte_end":52055,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52056,"byte_end":52059,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52060,"byte_end":52074,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52075,"byte_end":52078,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52079,"byte_end":52086,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52087,"byte_end":52111,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52112,"byte_end":52140,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52141,"byte_end":52144,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ async_io::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52145,"byte_end":52175,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/     // This timer will likely be processed by the current","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52176,"byte_end":52237,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/     // thread rather than the fallback \"async-io\" thread.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52238,"byte_end":52299,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_millis(1)).await;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52300,"byte_end":52353,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52354,"byte_end":52361,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":52362,"byte_end":52369,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3738,"byte_end":3743,"line_start":122,"line_end":122,"column_start":12,"column_end":17},"name":"Timer","qualname":"::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"decl_id":null,"docs":" A future that expires at a point in time.","sig":null,"attributes":[{"value":"/ A future that expires at a point in time.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":2928,"byte_end":2973,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":2974,"byte_end":2977,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Timers are futures that output the [`Instant`] at which they fired.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":2978,"byte_end":3049,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3050,"byte_end":3053,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3054,"byte_end":3068,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3069,"byte_end":3072,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Sleep for 1 second:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3073,"byte_end":3096,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3097,"byte_end":3100,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3101,"byte_end":3108,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3109,"byte_end":3133,"line_start":97,"line_end":97,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3134,"byte_end":3162,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3163,"byte_end":3166,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3167,"byte_end":3211,"line_start":100,"line_end":100,"column_start":1,"column_end":45}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3212,"byte_end":3259,"line_start":101,"line_end":101,"column_start":1,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3260,"byte_end":3269,"line_start":102,"line_end":102,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3270,"byte_end":3277,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3278,"byte_end":3281,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Timeout after 1 second:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3282,"byte_end":3309,"line_start":105,"line_end":105,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3310,"byte_end":3313,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3314,"byte_end":3321,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3322,"byte_end":3346,"line_start":108,"line_end":108,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::FutureExt;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3347,"byte_end":3379,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3380,"byte_end":3408,"line_start":110,"line_end":110,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3409,"byte_end":3412,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3413,"byte_end":3457,"line_start":112,"line_end":112,"column_start":1,"column_end":45}},{"value":"/ let addrs = async_net::resolve(\"google.com:80\")","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3458,"byte_end":3509,"line_start":113,"line_end":113,"column_start":1,"column_end":52}},{"value":"/     .or(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3510,"byte_end":3529,"line_start":114,"line_end":114,"column_start":1,"column_end":20}},{"value":"/         Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3530,"byte_end":3586,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/         Err(std::io::ErrorKind::TimedOut.into())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3587,"byte_end":3639,"line_start":116,"line_end":116,"column_start":1,"column_end":53}},{"value":"/     })","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3640,"byte_end":3650,"line_start":117,"line_end":117,"column_start":1,"column_end":11}},{"value":"/     .await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3651,"byte_end":3667,"line_start":118,"line_end":118,"column_start":1,"column_end":17}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3668,"byte_end":3701,"line_start":119,"line_end":119,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3702,"byte_end":3709,"line_start":120,"line_end":120,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4331,"byte_end":4336,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"after","qualname":"<Timer>::after","value":"pub fn after(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that expires after the given duration of time.","sig":null,"attributes":[{"value":"/ Creates a timer that expires after the given duration of time.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4009,"byte_end":4075,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4080,"byte_end":4083,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4088,"byte_end":4102,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4107,"byte_end":4110,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4115,"byte_end":4122,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4127,"byte_end":4151,"line_start":138,"line_end":138,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4156,"byte_end":4184,"line_start":139,"line_end":139,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4189,"byte_end":4192,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4197,"byte_end":4241,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4246,"byte_end":4293,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4298,"byte_end":4307,"line_start":143,"line_end":143,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4312,"byte_end":4319,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4812,"byte_end":4814,"line_start":163,"line_end":163,"column_start":12,"column_end":14},"name":"at","qualname":"<Timer>::at","value":"pub fn at(Instant) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that expires at the given time instant.","sig":null,"attributes":[{"value":"/ Creates a timer that expires at the given time instant.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4424,"byte_end":4483,"line_start":149,"line_end":149,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4488,"byte_end":4491,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4496,"byte_end":4510,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4515,"byte_end":4518,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4523,"byte_end":4530,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4535,"byte_end":4559,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4564,"byte_end":4603,"line_start":155,"line_end":155,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4608,"byte_end":4611,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4616,"byte_end":4660,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4665,"byte_end":4694,"line_start":158,"line_end":158,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4699,"byte_end":4743,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/ Timer::at(when).await;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4748,"byte_end":4774,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4779,"byte_end":4788,"line_start":161,"line_end":161,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4793,"byte_end":4800,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5534,"byte_end":5543,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"set_after","qualname":"<Timer>::set_after","value":"pub fn set_after(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to expire after the new duration of time.","sig":null,"attributes":[{"value":"/ Sets the timer to expire after the new duration of time.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":4940,"byte_end":5000,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5005,"byte_end":5008,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5013,"byte_end":5091,"line_start":172,"line_end":172,"column_start":5,"column_end":83}},{"value":"/ [`set_after()`][`Timer::set_after()`] does not remove the waker associated with the task","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5096,"byte_end":5188,"line_start":173,"line_end":173,"column_start":5,"column_end":97}},{"value":"/ that is polling the timer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5193,"byte_end":5223,"line_start":174,"line_end":174,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5228,"byte_end":5231,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5236,"byte_end":5250,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5255,"byte_end":5258,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5263,"byte_end":5270,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5275,"byte_end":5299,"line_start":179,"line_end":179,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5304,"byte_end":5332,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5337,"byte_end":5340,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5345,"byte_end":5389,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5394,"byte_end":5447,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ t.set_after(Duration::from_millis(100));","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5452,"byte_end":5496,"line_start":184,"line_end":184,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5501,"byte_end":5510,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5515,"byte_end":5522,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6300,"byte_end":6306,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"set_at","qualname":"<Timer>::set_at","value":"pub fn set_at(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to expire at the new time instant.","sig":null,"attributes":[{"value":"/ Sets the timer to expire at the new time instant.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5636,"byte_end":5689,"line_start":191,"line_end":191,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5694,"byte_end":5697,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5702,"byte_end":5780,"line_start":193,"line_end":193,"column_start":5,"column_end":83}},{"value":"/ [`set_after()`][`Timer::set_after()`] does not remove the waker associated with the task","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5785,"byte_end":5877,"line_start":194,"line_end":194,"column_start":5,"column_end":97}},{"value":"/ that is polling the timer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5882,"byte_end":5912,"line_start":195,"line_end":195,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5917,"byte_end":5920,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5925,"byte_end":5939,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5944,"byte_end":5947,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5952,"byte_end":5959,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5964,"byte_end":5988,"line_start":200,"line_end":200,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":5993,"byte_end":6032,"line_start":201,"line_end":201,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6037,"byte_end":6040,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6045,"byte_end":6089,"line_start":203,"line_end":203,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6094,"byte_end":6147,"line_start":204,"line_end":204,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6152,"byte_end":6155,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6160,"byte_end":6189,"line_start":206,"line_end":206,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6194,"byte_end":6238,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/ t.set_at(when);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6243,"byte_end":6262,"line_start":208,"line_end":208,"column_start":5,"column_end":24}},{"value":"/ # });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6267,"byte_end":6276,"line_start":209,"line_end":209,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6281,"byte_end":6288,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11949,"byte_end":11954,"line_start":358,"line_end":358,"column_start":12,"column_end":17},"name":"Async","qualname":"::Async","value":"Async {  }","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"decl_id":null,"docs":" Async adapter for I/O types.","sig":null,"attributes":[{"value":"/ Async adapter for I/O types.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8340,"byte_end":8372,"line_start":269,"line_end":269,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8373,"byte_end":8376,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ This type puts an I/O handle into non-blocking mode, registers it in","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8377,"byte_end":8449,"line_start":271,"line_end":271,"column_start":1,"column_end":73}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll], and then provides an async interface for it.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8450,"byte_end":8539,"line_start":272,"line_end":272,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8540,"byte_end":8543,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8544,"byte_end":8592,"line_start":274,"line_end":274,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8593,"byte_end":8643,"line_start":275,"line_end":275,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8644,"byte_end":8698,"line_start":276,"line_end":276,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8699,"byte_end":8751,"line_start":277,"line_end":277,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8752,"byte_end":8755,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8756,"byte_end":8769,"line_start":279,"line_end":279,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8770,"byte_end":8773,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ [`Async`] is a low-level primitive, and as such it comes with some caveats.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8774,"byte_end":8853,"line_start":281,"line_end":281,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8854,"byte_end":8857,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ For higher-level primitives built on top of [`Async`], look into [`async-net`] or","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8858,"byte_end":8943,"line_start":283,"line_end":283,"column_start":1,"column_end":86}},{"value":"/ [`async-process`] (on Unix).","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8944,"byte_end":8976,"line_start":284,"line_end":284,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8977,"byte_end":8980,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ [`async-net`]: https://github.com/stjepang/async-net","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":8981,"byte_end":9037,"line_start":286,"line_end":286,"column_start":1,"column_end":57}},{"value":"/ [`async-process`]: https://github.com/stjepang/async-process","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9038,"byte_end":9102,"line_start":287,"line_end":287,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9103,"byte_end":9106,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ ### Supported types","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9107,"byte_end":9130,"line_start":289,"line_end":289,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9131,"byte_end":9134,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ [`Async`] supports all networking types, as well as some OS-specific file descriptors like","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9135,"byte_end":9229,"line_start":291,"line_end":291,"column_start":1,"column_end":95}},{"value":"/ [timerfd] and [inotify].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9230,"byte_end":9258,"line_start":292,"line_end":292,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9259,"byte_end":9262,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ However, do not use [`Async`] with types like [`File`][`std::fs::File`],","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9263,"byte_end":9339,"line_start":294,"line_end":294,"column_start":1,"column_end":77}},{"value":"/ [`Stdin`][`std::io::Stdin`], [`Stdout`][`std::io::Stdout`], or [`Stderr`][`std::io::Stderr`]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9340,"byte_end":9436,"line_start":295,"line_end":295,"column_start":1,"column_end":97}},{"value":"/ because all operating systems have issues with them when put in non-blocking mode.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9437,"byte_end":9523,"line_start":296,"line_end":296,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9524,"byte_end":9527,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ [timerfd]: https://github.com/stjepang/async-io/blob/master/examples/linux-timerfd.rs","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9528,"byte_end":9617,"line_start":298,"line_end":298,"column_start":1,"column_end":90}},{"value":"/ [inotify]: https://github.com/stjepang/async-io/blob/master/examples/linux-inotify.rs","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9618,"byte_end":9707,"line_start":299,"line_end":299,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9708,"byte_end":9711,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ ### Concurrent I/O","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9712,"byte_end":9734,"line_start":301,"line_end":301,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9735,"byte_end":9738,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ Note that [`&Async<T>`][`Async`] implements [`AsyncRead`] and [`AsyncWrite`] if `&T`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9739,"byte_end":9827,"line_start":303,"line_end":303,"column_start":1,"column_end":89}},{"value":"/ implements those traits, which means tasks can concurrently read and write using shared","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9828,"byte_end":9919,"line_start":304,"line_end":304,"column_start":1,"column_end":92}},{"value":"/ references.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9920,"byte_end":9935,"line_start":305,"line_end":305,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9936,"byte_end":9939,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ But there is a catch: only one task can read a time, and only one task can write at a time. It","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":9940,"byte_end":10038,"line_start":307,"line_end":307,"column_start":1,"column_end":99}},{"value":"/ is okay to have two tasks where one is reading and the other is writing at the same time, but","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10039,"byte_end":10136,"line_start":308,"line_end":308,"column_start":1,"column_end":98}},{"value":"/ it is not okay to have two tasks reading at the same time or writing at the same time. If you","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10137,"byte_end":10234,"line_start":309,"line_end":309,"column_start":1,"column_end":98}},{"value":"/ try to do that, conflicting tasks will just keep waking each other in turn, thus wasting CPU","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10235,"byte_end":10331,"line_start":310,"line_end":310,"column_start":1,"column_end":97}},{"value":"/ time.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10332,"byte_end":10341,"line_start":311,"line_end":311,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10342,"byte_end":10345,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ This caveat only applies to [`AsyncRead`] and [`AsyncWrite`]. Any number of tasks can be","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10346,"byte_end":10438,"line_start":313,"line_end":313,"column_start":1,"column_end":93}},{"value":"/ concurrently calling other methods like [`readable()`][`Async::readable()`] or","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10439,"byte_end":10521,"line_start":314,"line_end":314,"column_start":1,"column_end":83}},{"value":"/ [`read_with()`][`Async::read_with()`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10522,"byte_end":10564,"line_start":315,"line_end":315,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10565,"byte_end":10568,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ ### Closing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10569,"byte_end":10584,"line_start":317,"line_end":317,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10585,"byte_end":10588,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ Closing the write side of [`Async`] with [`close()`][`futures_lite::AsyncWriteExt::close()`]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10589,"byte_end":10685,"line_start":319,"line_end":319,"column_start":1,"column_end":97}},{"value":"/ simply flushes. If you want to shutdown a TCP or Unix socket, use","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10686,"byte_end":10755,"line_start":320,"line_end":320,"column_start":1,"column_end":70}},{"value":"/ [`Shutdown`][`std::net::Shutdown`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10756,"byte_end":10795,"line_start":321,"line_end":321,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10796,"byte_end":10799,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10800,"byte_end":10814,"line_start":323,"line_end":323,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10815,"byte_end":10818,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Connect to a server and echo incoming messages back to the server:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10819,"byte_end":10889,"line_start":325,"line_end":325,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10890,"byte_end":10893,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10894,"byte_end":10907,"line_start":327,"line_end":327,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10908,"byte_end":10932,"line_start":328,"line_end":328,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::io;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10933,"byte_end":10958,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10959,"byte_end":10987,"line_start":330,"line_end":330,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10988,"byte_end":10991,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":10992,"byte_end":11036,"line_start":332,"line_end":332,"column_start":1,"column_end":45}},{"value":"/ // Connect to a local server.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11037,"byte_end":11070,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"/ let stream = Async::<TcpStream>::connect(([127, 0, 0, 1], 8000)).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11071,"byte_end":11147,"line_start":334,"line_end":334,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11148,"byte_end":11151,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ // Echo all messages from the read side of the stream into the write side.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11152,"byte_end":11230,"line_start":336,"line_end":336,"column_start":1,"column_end":79}},{"value":"/ io::copy(&stream, &stream).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11231,"byte_end":11269,"line_start":337,"line_end":337,"column_start":1,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11270,"byte_end":11303,"line_start":338,"line_end":338,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11304,"byte_end":11311,"line_start":339,"line_end":339,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11312,"byte_end":11315,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ You can use either predefined async methods or wrap blocking I/O operations in","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11316,"byte_end":11398,"line_start":341,"line_end":341,"column_start":1,"column_end":83}},{"value":"/ [`Async::read_with()`], [`Async::read_with_mut()`], [`Async::write_with()`], and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11399,"byte_end":11483,"line_start":342,"line_end":342,"column_start":1,"column_end":85}},{"value":"/ [`Async::write_with_mut()`]:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11484,"byte_end":11516,"line_start":343,"line_end":343,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11517,"byte_end":11520,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11521,"byte_end":11534,"line_start":345,"line_end":345,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11535,"byte_end":11559,"line_start":346,"line_end":346,"column_start":1,"column_end":25}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11560,"byte_end":11590,"line_start":347,"line_end":347,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11591,"byte_end":11594,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11595,"byte_end":11639,"line_start":349,"line_end":349,"column_start":1,"column_end":45}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11640,"byte_end":11708,"line_start":350,"line_end":350,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11709,"byte_end":11712,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ // These two lines are equivalent:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11713,"byte_end":11751,"line_start":352,"line_end":352,"column_start":1,"column_end":39}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11752,"byte_end":11802,"line_start":353,"line_end":353,"column_start":1,"column_end":51}},{"value":"/ let (stream, addr) = listener.read_with(|inner| inner.accept()).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11803,"byte_end":11878,"line_start":354,"line_end":354,"column_start":1,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11879,"byte_end":11912,"line_start":355,"line_end":355,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":11913,"byte_end":11920,"line_start":356,"line_end":356,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":13061,"byte_end":13064,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"new","qualname":"<Async<T>>::new","value":"pub fn new(T) -> io::Result<Async<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an async I/O handle.","sig":null,"attributes":[{"value":"/ Creates an async I/O handle.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12158,"byte_end":12190,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12195,"byte_end":12198,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This function will put the handle in non-blocking mode and register it in","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12203,"byte_end":12280,"line_start":372,"line_end":372,"column_start":5,"column_end":82}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12285,"byte_end":12329,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12334,"byte_end":12337,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ On Unix systems, the handle must implement `AsRawFd`, while on Windows it must implement","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12342,"byte_end":12434,"line_start":375,"line_end":375,"column_start":5,"column_end":97}},{"value":"/ `AsRawSocket`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12439,"byte_end":12457,"line_start":376,"line_end":376,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12462,"byte_end":12465,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12470,"byte_end":12518,"line_start":378,"line_end":378,"column_start":5,"column_end":53}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12523,"byte_end":12573,"line_start":379,"line_end":379,"column_start":5,"column_end":55}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12578,"byte_end":12632,"line_start":380,"line_end":380,"column_start":5,"column_end":59}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12637,"byte_end":12689,"line_start":381,"line_end":381,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12694,"byte_end":12697,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12702,"byte_end":12716,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12721,"byte_end":12724,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12729,"byte_end":12736,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12741,"byte_end":12765,"line_start":386,"line_end":386,"column_start":5,"column_end":29}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12770,"byte_end":12814,"line_start":387,"line_end":387,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12819,"byte_end":12822,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12827,"byte_end":12871,"line_start":389,"line_end":389,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(SocketAddr::from(([127, 0, 0, 1], 0)))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12876,"byte_end":12953,"line_start":390,"line_end":390,"column_start":5,"column_end":82}},{"value":"/ let listener = Async::new(listener)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12958,"byte_end":12999,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":13004,"byte_end":13037,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":13042,"byte_end":13049,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15902,"byte_end":15909,"line_start":495,"line_end":495,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Async<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a reference to the inner I/O handle.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15514,"byte_end":15559,"line_start":482,"line_end":482,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15564,"byte_end":15567,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15572,"byte_end":15586,"line_start":484,"line_end":484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15591,"byte_end":15594,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15599,"byte_end":15606,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15611,"byte_end":15635,"line_start":487,"line_end":487,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15640,"byte_end":15670,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15675,"byte_end":15678,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15683,"byte_end":15727,"line_start":490,"line_end":490,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15732,"byte_end":15800,"line_start":491,"line_end":491,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.get_ref();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15805,"byte_end":15840,"line_start":492,"line_end":492,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15845,"byte_end":15878,"line_start":493,"line_end":493,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15883,"byte_end":15890,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16370,"byte_end":16377,"line_start":512,"line_end":512,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Async<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the inner I/O handle.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15970,"byte_end":16023,"line_start":499,"line_end":499,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16028,"byte_end":16031,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16036,"byte_end":16050,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16055,"byte_end":16058,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16063,"byte_end":16070,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16075,"byte_end":16099,"line_start":504,"line_end":504,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16104,"byte_end":16134,"line_start":505,"line_end":505,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16139,"byte_end":16142,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16147,"byte_end":16191,"line_start":507,"line_end":507,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16196,"byte_end":16268,"line_start":508,"line_end":508,"column_start":5,"column_end":77}},{"value":"/ let inner = listener.get_mut();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16273,"byte_end":16308,"line_start":509,"line_end":509,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16313,"byte_end":16346,"line_start":510,"line_end":510,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16351,"byte_end":16358,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17011,"byte_end":17021,"line_start":534,"line_end":534,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Async<T>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the inner I/O handle.","sig":null,"attributes":[{"value":"/ Unwraps the inner I/O handle.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16446,"byte_end":16479,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16484,"byte_end":16487,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This method will **not** put the I/O handle back into blocking mode.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16492,"byte_end":16564,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16569,"byte_end":16572,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16577,"byte_end":16591,"line_start":520,"line_end":520,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16596,"byte_end":16599,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16604,"byte_end":16611,"line_start":522,"line_end":522,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16616,"byte_end":16640,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16645,"byte_end":16675,"line_start":524,"line_end":524,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16680,"byte_end":16683,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16688,"byte_end":16732,"line_start":526,"line_end":526,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16737,"byte_end":16805,"line_start":527,"line_end":527,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.into_inner()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16810,"byte_end":16849,"line_start":528,"line_end":528,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16854,"byte_end":16857,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ // Put the listener back into blocking mode.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16862,"byte_end":16910,"line_start":530,"line_end":530,"column_start":5,"column_end":53}},{"value":"/ inner.set_nonblocking(false)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16915,"byte_end":16949,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16954,"byte_end":16987,"line_start":532,"line_end":532,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":16992,"byte_end":16999,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17719,"byte_end":17727,"line_start":557,"line_end":557,"column_start":18,"column_end":26},"name":"readable","qualname":"<Async<T>>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is readable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is readable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17168,"byte_end":17211,"line_start":540,"line_end":540,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17216,"byte_end":17219,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This function completes when a read operation on this I/O handle wouldn't block.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17224,"byte_end":17308,"line_start":542,"line_end":542,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17313,"byte_end":17316,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17321,"byte_end":17335,"line_start":544,"line_end":544,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17340,"byte_end":17343,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17348,"byte_end":17361,"line_start":546,"line_end":546,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17366,"byte_end":17390,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17395,"byte_end":17425,"line_start":548,"line_end":548,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17430,"byte_end":17433,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17438,"byte_end":17482,"line_start":550,"line_end":550,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17487,"byte_end":17559,"line_start":551,"line_end":551,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17564,"byte_end":17567,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17572,"byte_end":17615,"line_start":553,"line_end":553,"column_start":5,"column_end":48}},{"value":"/ listener.readable().await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17620,"byte_end":17651,"line_start":554,"line_end":554,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17656,"byte_end":17689,"line_start":555,"line_end":555,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17694,"byte_end":17701,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18418,"byte_end":18426,"line_start":579,"line_end":579,"column_start":18,"column_end":26},"name":"writable","qualname":"<Async<T>>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is writable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is writable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17803,"byte_end":17846,"line_start":561,"line_end":561,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17851,"byte_end":17854,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function completes when a write operation on this I/O handle wouldn't block.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17859,"byte_end":17944,"line_start":563,"line_end":563,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17949,"byte_end":17952,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17957,"byte_end":17971,"line_start":565,"line_end":565,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17976,"byte_end":17979,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17984,"byte_end":17991,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":17996,"byte_end":18020,"line_start":568,"line_end":568,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18025,"byte_end":18070,"line_start":569,"line_end":569,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18075,"byte_end":18078,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18083,"byte_end":18127,"line_start":571,"line_end":571,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18132,"byte_end":18199,"line_start":572,"line_end":572,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18204,"byte_end":18262,"line_start":573,"line_end":573,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18267,"byte_end":18270,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18275,"byte_end":18316,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ stream.writable().await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18321,"byte_end":18350,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18355,"byte_end":18388,"line_start":577,"line_end":577,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18393,"byte_end":18400,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19418,"byte_end":19427,"line_start":605,"line_end":605,"column_start":18,"column_end":27},"name":"read_with","qualname":"<Async<T>>::read_with","value":"pub async fn read_with<R, '_, impl FnMut(&T) -> io::Result<R>: FnMut(&T) ->\n                       io::Result<R>>(&'_ Self,\n                                      impl FnMut(&T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18502,"byte_end":18547,"line_start":583,"line_end":583,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18552,"byte_end":18555,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This function","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18560,"byte_end":18651,"line_start":585,"line_end":585,"column_start":5,"column_end":96}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18656,"byte_end":18743,"line_start":586,"line_end":586,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18748,"byte_end":18839,"line_start":587,"line_end":587,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18844,"byte_end":18901,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18906,"byte_end":18909,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18914,"byte_end":18976,"line_start":590,"line_end":590,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18981,"byte_end":18984,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":18989,"byte_end":19003,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19008,"byte_end":19011,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19016,"byte_end":19029,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19034,"byte_end":19058,"line_start":595,"line_end":595,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19063,"byte_end":19093,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19098,"byte_end":19101,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19106,"byte_end":19150,"line_start":598,"line_end":598,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19155,"byte_end":19223,"line_start":599,"line_end":599,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19228,"byte_end":19231,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19236,"byte_end":19278,"line_start":601,"line_end":601,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with(|l| l.accept()).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19283,"byte_end":19350,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19355,"byte_end":19388,"line_start":603,"line_end":603,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19393,"byte_end":19400,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20690,"byte_end":20703,"line_start":638,"line_end":638,"column_start":18,"column_end":31},"name":"read_with_mut","qualname":"<Async<T>>::read_with_mut","value":"pub async fn read_with_mut<R, '_,\n                           impl FnMut(&mut T) -> io::Result<R>: FnMut(&mut T)\n                           ->\n                           io::Result<R>>(&'_ mut Self,\n                                          impl FnMut(&mut T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19765,"byte_end":19810,"line_start":616,"line_end":616,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19815,"byte_end":19818,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This function","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19823,"byte_end":19914,"line_start":618,"line_end":618,"column_start":5,"column_end":96}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":19919,"byte_end":20006,"line_start":619,"line_end":619,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20011,"byte_end":20102,"line_start":620,"line_end":620,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20107,"byte_end":20164,"line_start":621,"line_end":621,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20169,"byte_end":20172,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20177,"byte_end":20240,"line_start":623,"line_end":623,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20245,"byte_end":20248,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20253,"byte_end":20267,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20272,"byte_end":20275,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20280,"byte_end":20293,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20298,"byte_end":20322,"line_start":628,"line_end":628,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20327,"byte_end":20357,"line_start":629,"line_end":629,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20362,"byte_end":20365,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20370,"byte_end":20414,"line_start":631,"line_end":631,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20419,"byte_end":20491,"line_start":632,"line_end":632,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20496,"byte_end":20499,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20504,"byte_end":20546,"line_start":634,"line_end":634,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with_mut(|l| l.accept()).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20551,"byte_end":20622,"line_start":635,"line_end":635,"column_start":5,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20627,"byte_end":20660,"line_start":636,"line_end":636,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":20665,"byte_end":20672,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22009,"byte_end":22019,"line_start":675,"line_end":675,"column_start":18,"column_end":28},"name":"write_with","qualname":"<Async<T>>::write_with","value":"pub async fn write_with<R, '_, impl FnMut(&T) -> io::Result<R>: FnMut(&T) ->\n                        io::Result<R>>(&'_ Self,\n                                       impl FnMut(&T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21072,"byte_end":21118,"line_start":652,"line_end":652,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21123,"byte_end":21126,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This function","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21131,"byte_end":21222,"line_start":654,"line_end":654,"column_start":5,"column_end":96}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21227,"byte_end":21314,"line_start":655,"line_end":655,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21319,"byte_end":21410,"line_start":656,"line_end":656,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21415,"byte_end":21472,"line_start":657,"line_end":657,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21477,"byte_end":21480,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21485,"byte_end":21547,"line_start":659,"line_end":659,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21552,"byte_end":21555,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21560,"byte_end":21574,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21579,"byte_end":21582,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21587,"byte_end":21600,"line_start":663,"line_end":663,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21605,"byte_end":21629,"line_start":664,"line_end":664,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21634,"byte_end":21662,"line_start":665,"line_end":665,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21667,"byte_end":21670,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21675,"byte_end":21719,"line_start":667,"line_end":667,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21724,"byte_end":21791,"line_start":668,"line_end":668,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21796,"byte_end":21844,"line_start":669,"line_end":669,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21849,"byte_end":21852,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21857,"byte_end":21880,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with(|s| s.send(msg)).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21885,"byte_end":21941,"line_start":672,"line_end":672,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21946,"byte_end":21979,"line_start":673,"line_end":673,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":21984,"byte_end":21991,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":23303,"byte_end":23317,"line_start":709,"line_end":709,"column_start":18,"column_end":32},"name":"write_with_mut","qualname":"<Async<T>>::write_with_mut","value":"pub async fn write_with_mut<R, '_,\n                            impl FnMut(&mut T) -> io::Result<R>: FnMut(&mut T)\n                            ->\n                            io::Result<R>>(&'_ mut Self,\n                                           impl FnMut(&mut T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22357,"byte_end":22403,"line_start":686,"line_end":686,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22408,"byte_end":22411,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This function","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22416,"byte_end":22507,"line_start":688,"line_end":688,"column_start":5,"column_end":96}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22512,"byte_end":22599,"line_start":689,"line_end":689,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22604,"byte_end":22695,"line_start":690,"line_end":690,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22700,"byte_end":22757,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22762,"byte_end":22765,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22770,"byte_end":22833,"line_start":693,"line_end":693,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22838,"byte_end":22841,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22846,"byte_end":22860,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22865,"byte_end":22868,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22873,"byte_end":22886,"line_start":697,"line_end":697,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22891,"byte_end":22915,"line_start":698,"line_end":698,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22920,"byte_end":22948,"line_start":699,"line_end":699,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22953,"byte_end":22956,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":22961,"byte_end":23005,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ let mut socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":23010,"byte_end":23081,"line_start":702,"line_end":702,"column_start":5,"column_end":76}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":23086,"byte_end":23134,"line_start":703,"line_end":703,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":23139,"byte_end":23142,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":23147,"byte_end":23170,"line_start":705,"line_end":705,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with_mut(|s| s.send(msg)).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":23175,"byte_end":23235,"line_start":706,"line_end":706,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":23240,"byte_end":23273,"line_start":707,"line_end":707,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":23278,"byte_end":23285,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28920,"byte_end":28924,"line_start":896,"line_end":896,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<TcpListener>>::bind","value":"pub fn bind<A: Into<SocketAddr>>(A) -> io::Result<Async<TcpListener>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP listener bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP listener bound to the specified address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28401,"byte_end":28459,"line_start":881,"line_end":881,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28464,"byte_end":28467,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28472,"byte_end":28546,"line_start":883,"line_end":883,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28551,"byte_end":28554,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28559,"byte_end":28573,"line_start":885,"line_end":885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28578,"byte_end":28581,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28586,"byte_end":28593,"line_start":887,"line_end":887,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28598,"byte_end":28622,"line_start":888,"line_end":888,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28627,"byte_end":28657,"line_start":889,"line_end":889,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28662,"byte_end":28665,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28670,"byte_end":28714,"line_start":891,"line_end":891,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28719,"byte_end":28787,"line_start":892,"line_end":892,"column_start":5,"column_end":73}},{"value":"/ println!(\"Listening on {}\", listener.get_ref().local_addr()?);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28792,"byte_end":28858,"line_start":893,"line_end":893,"column_start":5,"column_end":71}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28863,"byte_end":28896,"line_start":894,"line_end":894,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28901,"byte_end":28908,"line_start":895,"line_end":895,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29674,"byte_end":29680,"line_start":918,"line_end":918,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<TcpListener>>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming TCP connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming TCP connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29084,"byte_end":29126,"line_start":901,"line_end":901,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29131,"byte_end":29134,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a TCP stream together with its","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29139,"byte_end":29230,"line_start":903,"line_end":903,"column_start":5,"column_end":96}},{"value":"/ remote address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29235,"byte_end":29254,"line_start":904,"line_end":904,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29259,"byte_end":29262,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29267,"byte_end":29281,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29286,"byte_end":29289,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29294,"byte_end":29307,"line_start":908,"line_end":908,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29312,"byte_end":29336,"line_start":909,"line_end":909,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29341,"byte_end":29371,"line_start":910,"line_end":910,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29376,"byte_end":29379,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29384,"byte_end":29428,"line_start":912,"line_end":912,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29433,"byte_end":29504,"line_start":913,"line_end":913,"column_start":5,"column_end":76}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29509,"byte_end":29559,"line_start":914,"line_end":914,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {}\", addr);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29564,"byte_end":29606,"line_start":915,"line_end":915,"column_start":5,"column_end":47}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29611,"byte_end":29644,"line_start":916,"line_end":916,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29649,"byte_end":29656,"line_start":917,"line_end":917,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30600,"byte_end":30608,"line_start":945,"line_end":945,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<TcpListener>>::incoming","value":"pub fn incoming(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming TCP connections.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29857,"byte_end":29906,"line_start":923,"line_end":923,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29911,"byte_end":29914,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29919,"byte_end":29983,"line_start":925,"line_end":925,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29988,"byte_end":29991,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":29996,"byte_end":30010,"line_start":927,"line_end":927,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30015,"byte_end":30018,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30023,"byte_end":30036,"line_start":929,"line_end":929,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30041,"byte_end":30065,"line_start":930,"line_end":930,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30070,"byte_end":30117,"line_start":931,"line_end":931,"column_start":5,"column_end":52}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30122,"byte_end":30152,"line_start":932,"line_end":932,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30157,"byte_end":30160,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30165,"byte_end":30209,"line_start":934,"line_end":934,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30214,"byte_end":30285,"line_start":935,"line_end":935,"column_start":5,"column_end":76}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30290,"byte_end":30329,"line_start":936,"line_end":936,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30334,"byte_end":30353,"line_start":937,"line_end":937,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30358,"byte_end":30361,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30366,"byte_end":30418,"line_start":939,"line_end":939,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30423,"byte_end":30452,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {}\", stream.get_ref().peer_addr()?);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30457,"byte_end":30528,"line_start":941,"line_end":941,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30533,"byte_end":30538,"line_start":942,"line_end":942,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30543,"byte_end":30576,"line_start":943,"line_end":943,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30581,"byte_end":30588,"line_start":944,"line_end":944,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31539,"byte_end":31546,"line_start":975,"line_end":975,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<TcpStream>>::connect","value":"pub async fn connect<A: Into<SocketAddr>>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP connection to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP connection to the specified address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31099,"byte_end":31153,"line_start":962,"line_end":962,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31158,"byte_end":31161,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31166,"byte_end":31180,"line_start":964,"line_end":964,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31185,"byte_end":31188,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31193,"byte_end":31200,"line_start":966,"line_end":966,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31205,"byte_end":31229,"line_start":967,"line_end":967,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31234,"byte_end":31279,"line_start":968,"line_end":968,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31284,"byte_end":31287,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31292,"byte_end":31336,"line_start":970,"line_end":970,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31341,"byte_end":31408,"line_start":971,"line_end":971,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31413,"byte_end":31471,"line_start":972,"line_end":972,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31476,"byte_end":31509,"line_start":973,"line_end":973,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31514,"byte_end":31521,"line_start":974,"line_end":974,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32815,"byte_end":32819,"line_start":1012,"line_end":1012,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<TcpStream>>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads data from the stream without removing it from the buffer.","sig":null,"attributes":[{"value":"/ Reads data from the stream without removing it from the buffer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31984,"byte_end":32051,"line_start":989,"line_end":989,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32056,"byte_end":32059,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read. Successive calls of this method read the same data.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32064,"byte_end":32153,"line_start":991,"line_end":991,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32158,"byte_end":32161,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32166,"byte_end":32180,"line_start":993,"line_end":993,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32185,"byte_end":32188,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32193,"byte_end":32200,"line_start":995,"line_end":995,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32205,"byte_end":32229,"line_start":996,"line_end":996,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{io::AsyncWriteExt, stream::StreamExt};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32234,"byte_end":32295,"line_start":997,"line_end":997,"column_start":5,"column_end":66}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32300,"byte_end":32345,"line_start":998,"line_end":998,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32350,"byte_end":32353,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32358,"byte_end":32402,"line_start":1000,"line_end":1000,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32407,"byte_end":32474,"line_start":1001,"line_end":1001,"column_start":5,"column_end":72}},{"value":"/ let mut stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32479,"byte_end":32541,"line_start":1002,"line_end":1002,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32546,"byte_end":32549,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ stream","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32554,"byte_end":32564,"line_start":1004,"line_end":1004,"column_start":5,"column_end":15}},{"value":"/     .write_all(b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\")","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32569,"byte_end":32635,"line_start":1005,"line_end":1005,"column_start":5,"column_end":71}},{"value":"/     .await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32640,"byte_end":32656,"line_start":1006,"line_end":1006,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32661,"byte_end":32664,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32669,"byte_end":32699,"line_start":1008,"line_end":1008,"column_start":5,"column_end":35}},{"value":"/ let len = stream.peek(&mut buf).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32704,"byte_end":32747,"line_start":1009,"line_end":1009,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32752,"byte_end":32785,"line_start":1010,"line_end":1010,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32790,"byte_end":32797,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33655,"byte_end":33659,"line_start":1041,"line_end":1041,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UdpSocket>>::bind","value":"pub fn bind<A: Into<SocketAddr>>(A) -> io::Result<Async<UdpSocket>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket bound to the specified address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33150,"byte_end":33206,"line_start":1026,"line_end":1026,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33211,"byte_end":33214,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33219,"byte_end":33293,"line_start":1028,"line_end":1028,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33298,"byte_end":33301,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33306,"byte_end":33320,"line_start":1030,"line_end":1030,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33325,"byte_end":33328,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33333,"byte_end":33340,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33345,"byte_end":33369,"line_start":1033,"line_end":1033,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33374,"byte_end":33402,"line_start":1034,"line_end":1034,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33407,"byte_end":33410,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33415,"byte_end":33459,"line_start":1036,"line_end":1036,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33464,"byte_end":33528,"line_start":1037,"line_end":1037,"column_start":5,"column_end":69}},{"value":"/ println!(\"Bound to {}\", socket.get_ref().local_addr()?);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33533,"byte_end":33593,"line_start":1038,"line_end":1038,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33598,"byte_end":33631,"line_start":1039,"line_end":1039,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33636,"byte_end":33643,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34540,"byte_end":34549,"line_start":1066,"line_end":1066,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UdpSocket>>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message.","sig":null,"attributes":[{"value":"/ Receives a single datagram message.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33815,"byte_end":33854,"line_start":1046,"line_end":1046,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33859,"byte_end":33862,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33867,"byte_end":33942,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33947,"byte_end":33950,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33955,"byte_end":34049,"line_start":1050,"line_end":1050,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34054,"byte_end":34124,"line_start":1051,"line_end":1051,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34129,"byte_end":34132,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34137,"byte_end":34151,"line_start":1053,"line_end":1053,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34156,"byte_end":34159,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34164,"byte_end":34177,"line_start":1055,"line_end":1055,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34182,"byte_end":34206,"line_start":1056,"line_end":1056,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34211,"byte_end":34239,"line_start":1057,"line_end":1057,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34244,"byte_end":34247,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34252,"byte_end":34296,"line_start":1059,"line_end":1059,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34301,"byte_end":34368,"line_start":1060,"line_end":1060,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34373,"byte_end":34376,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34381,"byte_end":34411,"line_start":1062,"line_end":1062,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34416,"byte_end":34472,"line_start":1063,"line_end":1063,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34477,"byte_end":34510,"line_start":1064,"line_end":1064,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34515,"byte_end":34522,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35434,"byte_end":35443,"line_start":1090,"line_end":1090,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<Async<UdpSocket>>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message without removing it from the queue.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34674,"byte_end":34748,"line_start":1070,"line_end":1070,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34753,"byte_end":34756,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34761,"byte_end":34836,"line_start":1072,"line_end":1072,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34841,"byte_end":34844,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34849,"byte_end":34943,"line_start":1074,"line_end":1074,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":34948,"byte_end":35018,"line_start":1075,"line_end":1075,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35023,"byte_end":35026,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35031,"byte_end":35045,"line_start":1077,"line_end":1077,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35050,"byte_end":35053,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35058,"byte_end":35071,"line_start":1079,"line_end":1079,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35076,"byte_end":35100,"line_start":1080,"line_end":1080,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35105,"byte_end":35133,"line_start":1081,"line_end":1081,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35138,"byte_end":35141,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35146,"byte_end":35190,"line_start":1083,"line_end":1083,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35195,"byte_end":35262,"line_start":1084,"line_end":1084,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35267,"byte_end":35270,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35275,"byte_end":35305,"line_start":1086,"line_end":1086,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35310,"byte_end":35366,"line_start":1087,"line_end":1087,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35371,"byte_end":35404,"line_start":1088,"line_end":1088,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35409,"byte_end":35416,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36108,"byte_end":36115,"line_start":1112,"line_end":1112,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UdpSocket>>::send_to","value":"pub async fn send_to<A: Into<SocketAddr>, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35568,"byte_end":35608,"line_start":1094,"line_end":1094,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35613,"byte_end":35616,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes writen.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35621,"byte_end":35660,"line_start":1096,"line_end":1096,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35665,"byte_end":35668,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35673,"byte_end":35687,"line_start":1098,"line_end":1098,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35692,"byte_end":35695,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35700,"byte_end":35713,"line_start":1100,"line_end":1100,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35718,"byte_end":35742,"line_start":1101,"line_end":1101,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35747,"byte_end":35775,"line_start":1102,"line_end":1102,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35780,"byte_end":35783,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35788,"byte_end":35832,"line_start":1104,"line_end":1104,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35837,"byte_end":35901,"line_start":1105,"line_end":1105,"column_start":5,"column_end":69}},{"value":"/ let addr = socket.get_ref().local_addr()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35906,"byte_end":35952,"line_start":1106,"line_end":1106,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35957,"byte_end":35960,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35965,"byte_end":35988,"line_start":1108,"line_end":1108,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":35993,"byte_end":36040,"line_start":1109,"line_end":1109,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36045,"byte_end":36078,"line_start":1110,"line_end":1110,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36083,"byte_end":36090,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37207,"byte_end":37211,"line_start":1141,"line_end":1141,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UdpSocket>>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36289,"byte_end":36352,"line_start":1117,"line_end":1117,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36357,"byte_end":36360,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36365,"byte_end":36402,"line_start":1119,"line_end":1119,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36407,"byte_end":36410,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36415,"byte_end":36509,"line_start":1121,"line_end":1121,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36514,"byte_end":36584,"line_start":1122,"line_end":1122,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36589,"byte_end":36592,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36597,"byte_end":36689,"line_start":1124,"line_end":1124,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36694,"byte_end":36751,"line_start":1125,"line_end":1125,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36756,"byte_end":36759,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36764,"byte_end":36778,"line_start":1127,"line_end":1127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36783,"byte_end":36786,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36791,"byte_end":36804,"line_start":1129,"line_end":1129,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36809,"byte_end":36833,"line_start":1130,"line_end":1130,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36838,"byte_end":36866,"line_start":1131,"line_end":1131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36871,"byte_end":36874,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36879,"byte_end":36923,"line_start":1133,"line_end":1133,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":36928,"byte_end":36995,"line_start":1134,"line_end":1134,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37000,"byte_end":37048,"line_start":1135,"line_end":1135,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37053,"byte_end":37056,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37061,"byte_end":37091,"line_start":1137,"line_end":1137,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37096,"byte_end":37139,"line_start":1138,"line_end":1138,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37144,"byte_end":37177,"line_start":1139,"line_end":1139,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37182,"byte_end":37189,"line_start":1140,"line_end":1140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38316,"byte_end":38320,"line_start":1170,"line_end":1170,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<UdpSocket>>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer without removing it from the\n queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer without removing it from the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37317,"byte_end":37408,"line_start":1145,"line_end":1145,"column_start":5,"column_end":96}},{"value":"/ queue.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37413,"byte_end":37423,"line_start":1146,"line_end":1146,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37428,"byte_end":37431,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37436,"byte_end":37511,"line_start":1148,"line_end":1148,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37516,"byte_end":37519,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37524,"byte_end":37618,"line_start":1150,"line_end":1150,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37623,"byte_end":37693,"line_start":1151,"line_end":1151,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37698,"byte_end":37701,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37706,"byte_end":37798,"line_start":1153,"line_end":1153,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37803,"byte_end":37860,"line_start":1154,"line_end":1154,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37865,"byte_end":37868,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37873,"byte_end":37887,"line_start":1156,"line_end":1156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37892,"byte_end":37895,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37900,"byte_end":37913,"line_start":1158,"line_end":1158,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37918,"byte_end":37942,"line_start":1159,"line_end":1159,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37947,"byte_end":37975,"line_start":1160,"line_end":1160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37980,"byte_end":37983,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":37988,"byte_end":38032,"line_start":1162,"line_end":1162,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38037,"byte_end":38104,"line_start":1163,"line_end":1163,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38109,"byte_end":38157,"line_start":1164,"line_end":1164,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38162,"byte_end":38165,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38170,"byte_end":38200,"line_start":1166,"line_end":1166,"column_start":5,"column_end":35}},{"value":"/ let len = socket.peek(&mut buf).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38205,"byte_end":38248,"line_start":1167,"line_end":1167,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38253,"byte_end":38286,"line_start":1168,"line_end":1168,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38291,"byte_end":38298,"line_start":1169,"line_end":1169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39127,"byte_end":39131,"line_start":1195,"line_end":1195,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UdpSocket>>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38426,"byte_end":38463,"line_start":1174,"line_end":1174,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38468,"byte_end":38471,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38476,"byte_end":38516,"line_start":1176,"line_end":1176,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38521,"byte_end":38524,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38529,"byte_end":38621,"line_start":1178,"line_end":1178,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38626,"byte_end":38683,"line_start":1179,"line_end":1179,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38688,"byte_end":38691,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38696,"byte_end":38710,"line_start":1181,"line_end":1181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38715,"byte_end":38718,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38723,"byte_end":38736,"line_start":1183,"line_end":1183,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38741,"byte_end":38765,"line_start":1184,"line_end":1184,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38770,"byte_end":38798,"line_start":1185,"line_end":1185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38803,"byte_end":38806,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38811,"byte_end":38855,"line_start":1187,"line_end":1187,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38860,"byte_end":38927,"line_start":1188,"line_end":1188,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38932,"byte_end":38980,"line_start":1189,"line_end":1189,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38985,"byte_end":38988,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":38993,"byte_end":39016,"line_start":1191,"line_end":1191,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39021,"byte_end":39059,"line_start":1192,"line_end":1192,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39064,"byte_end":39097,"line_start":1193,"line_end":1193,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39102,"byte_end":39109,"line_start":1194,"line_end":1194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39918,"byte_end":39922,"line_start":1223,"line_end":1223,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UnixListener>>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<Async<UnixListener>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS listener bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS listener bound to the specified path.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39475,"byte_end":39530,"line_start":1210,"line_end":1210,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39535,"byte_end":39538,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39543,"byte_end":39557,"line_start":1212,"line_end":1212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39562,"byte_end":39565,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39570,"byte_end":39583,"line_start":1214,"line_end":1214,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39588,"byte_end":39612,"line_start":1215,"line_end":1215,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39617,"byte_end":39658,"line_start":1216,"line_end":1216,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39663,"byte_end":39666,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39671,"byte_end":39715,"line_start":1218,"line_end":1218,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39720,"byte_end":39783,"line_start":1219,"line_end":1219,"column_start":5,"column_end":68}},{"value":"/ println!(\"Listening on {:?}\", listener.get_ref().local_addr()?);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39788,"byte_end":39856,"line_start":1220,"line_end":1220,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39861,"byte_end":39894,"line_start":1221,"line_end":1221,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39899,"byte_end":39906,"line_start":1222,"line_end":1222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40690,"byte_end":40696,"line_start":1245,"line_end":1245,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<UnixListener>>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming UDS stream connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming UDS stream connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40092,"byte_end":40141,"line_start":1228,"line_end":1228,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40146,"byte_end":40149,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a stream together with its remote","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40154,"byte_end":40248,"line_start":1230,"line_end":1230,"column_start":5,"column_end":99}},{"value":"/ address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40253,"byte_end":40265,"line_start":1231,"line_end":1231,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40270,"byte_end":40273,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40278,"byte_end":40292,"line_start":1233,"line_end":1233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40297,"byte_end":40300,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40305,"byte_end":40318,"line_start":1235,"line_end":1235,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40323,"byte_end":40347,"line_start":1236,"line_end":1236,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40352,"byte_end":40393,"line_start":1237,"line_end":1237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40398,"byte_end":40401,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40406,"byte_end":40450,"line_start":1239,"line_end":1239,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40455,"byte_end":40518,"line_start":1240,"line_end":1240,"column_start":5,"column_end":68}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40523,"byte_end":40573,"line_start":1241,"line_end":1241,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {:?}\", addr);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40578,"byte_end":40622,"line_start":1242,"line_end":1242,"column_start":5,"column_end":49}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40627,"byte_end":40660,"line_start":1243,"line_end":1243,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40665,"byte_end":40672,"line_start":1244,"line_end":1244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41631,"byte_end":41639,"line_start":1272,"line_end":1272,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<UnixListener>>::incoming","value":"pub fn incoming(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming UDS connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming UDS connections.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40878,"byte_end":40927,"line_start":1250,"line_end":1250,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40932,"byte_end":40935,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`] item.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":40940,"byte_end":41009,"line_start":1252,"line_end":1252,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41014,"byte_end":41017,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41022,"byte_end":41036,"line_start":1254,"line_end":1254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41041,"byte_end":41044,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41049,"byte_end":41062,"line_start":1256,"line_end":1256,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41067,"byte_end":41091,"line_start":1257,"line_end":1257,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41096,"byte_end":41143,"line_start":1258,"line_end":1258,"column_start":5,"column_end":52}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41148,"byte_end":41189,"line_start":1259,"line_end":1259,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41194,"byte_end":41197,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41202,"byte_end":41246,"line_start":1261,"line_end":1261,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41251,"byte_end":41314,"line_start":1262,"line_end":1262,"column_start":5,"column_end":68}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41319,"byte_end":41358,"line_start":1263,"line_end":1263,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41363,"byte_end":41382,"line_start":1264,"line_end":1264,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41387,"byte_end":41390,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41395,"byte_end":41447,"line_start":1266,"line_end":1266,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41452,"byte_end":41481,"line_start":1267,"line_end":1267,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {:?}\", stream.get_ref().peer_addr()?);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41486,"byte_end":41559,"line_start":1268,"line_end":1268,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41564,"byte_end":41569,"line_start":1269,"line_end":1269,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41574,"byte_end":41607,"line_start":1270,"line_end":1270,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41612,"byte_end":41619,"line_start":1271,"line_end":1271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42572,"byte_end":42579,"line_start":1303,"line_end":1303,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<UnixStream>>::connect","value":"pub async fn connect<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS stream connected to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS stream connected to the specified path.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42191,"byte_end":42248,"line_start":1291,"line_end":1291,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42253,"byte_end":42256,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42261,"byte_end":42275,"line_start":1293,"line_end":1293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42280,"byte_end":42283,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42288,"byte_end":42301,"line_start":1295,"line_end":1295,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42306,"byte_end":42330,"line_start":1296,"line_end":1296,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42335,"byte_end":42374,"line_start":1297,"line_end":1297,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42379,"byte_end":42382,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42387,"byte_end":42431,"line_start":1299,"line_end":1299,"column_start":5,"column_end":49}},{"value":"/ let stream = Async::<UnixStream>::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42436,"byte_end":42504,"line_start":1300,"line_end":1300,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42509,"byte_end":42542,"line_start":1301,"line_end":1301,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42547,"byte_end":42554,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43439,"byte_end":43443,"line_start":1328,"line_end":1328,"column_start":12,"column_end":16},"name":"pair","qualname":"<Async<UnixStream>>::pair","value":"pub fn pair() -> io::Result<(Async<UnixStream>, Async<UnixStream>)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected UDS stream sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected UDS stream sockets.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43071,"byte_end":43131,"line_start":1316,"line_end":1316,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43136,"byte_end":43139,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43144,"byte_end":43158,"line_start":1318,"line_end":1318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43163,"byte_end":43166,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43171,"byte_end":43184,"line_start":1320,"line_end":1320,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43189,"byte_end":43213,"line_start":1321,"line_end":1321,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43218,"byte_end":43257,"line_start":1322,"line_end":1322,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43262,"byte_end":43265,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43270,"byte_end":43314,"line_start":1324,"line_end":1324,"column_start":5,"column_end":49}},{"value":"/ let (stream1, stream2) = Async::<UnixStream>::pair()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43319,"byte_end":43377,"line_start":1325,"line_end":1325,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43382,"byte_end":43415,"line_start":1326,"line_end":1326,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43420,"byte_end":43427,"line_start":1327,"line_end":1327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44286,"byte_end":44290,"line_start":1357,"line_end":1357,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UnixDatagram>>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<Async<UnixDatagram>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS datagram socket bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS datagram socket bound to the specified path.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43911,"byte_end":43973,"line_start":1345,"line_end":1345,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43978,"byte_end":43981,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43986,"byte_end":44000,"line_start":1347,"line_end":1347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44005,"byte_end":44008,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44013,"byte_end":44026,"line_start":1349,"line_end":1349,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44031,"byte_end":44055,"line_start":1350,"line_end":1350,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44060,"byte_end":44101,"line_start":1351,"line_end":1351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44106,"byte_end":44109,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44114,"byte_end":44158,"line_start":1353,"line_end":1353,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44163,"byte_end":44224,"line_start":1354,"line_end":1354,"column_start":5,"column_end":66}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44229,"byte_end":44262,"line_start":1355,"line_end":1355,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44267,"byte_end":44274,"line_start":1356,"line_end":1356,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44822,"byte_end":44829,"line_start":1374,"line_end":1374,"column_start":12,"column_end":19},"name":"unbound","qualname":"<Async<UnixDatagram>>::unbound","value":"pub fn unbound() -> io::Result<Async<UnixDatagram>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS datagram socket not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a UDS datagram socket not bound to any address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44460,"byte_end":44519,"line_start":1362,"line_end":1362,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44524,"byte_end":44527,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44532,"byte_end":44546,"line_start":1364,"line_end":1364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44551,"byte_end":44554,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44559,"byte_end":44572,"line_start":1366,"line_end":1366,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44577,"byte_end":44601,"line_start":1367,"line_end":1367,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44606,"byte_end":44647,"line_start":1368,"line_end":1368,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44652,"byte_end":44655,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44660,"byte_end":44704,"line_start":1370,"line_end":1370,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::unbound()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44709,"byte_end":44760,"line_start":1371,"line_end":1371,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44765,"byte_end":44798,"line_start":1372,"line_end":1372,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44803,"byte_end":44810,"line_start":1373,"line_end":1373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45305,"byte_end":45309,"line_start":1390,"line_end":1390,"column_start":12,"column_end":16},"name":"pair","qualname":"<Async<UnixDatagram>>::pair","value":"pub fn pair() -> io::Result<(Async<UnixDatagram>, Async<UnixDatagram>)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected Unix datagram sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected Unix datagram sockets.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44930,"byte_end":44993,"line_start":1378,"line_end":1378,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":44998,"byte_end":45001,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45006,"byte_end":45020,"line_start":1380,"line_end":1380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45025,"byte_end":45028,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45033,"byte_end":45046,"line_start":1382,"line_end":1382,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45051,"byte_end":45075,"line_start":1383,"line_end":1383,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45080,"byte_end":45121,"line_start":1384,"line_end":1384,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45126,"byte_end":45129,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45134,"byte_end":45178,"line_start":1386,"line_end":1386,"column_start":5,"column_end":49}},{"value":"/ let (socket1, socket2) = Async::<UnixDatagram>::pair()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45183,"byte_end":45243,"line_start":1387,"line_end":1387,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45248,"byte_end":45281,"line_start":1388,"line_end":1388,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45286,"byte_end":45293,"line_start":1389,"line_end":1389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46041,"byte_end":46050,"line_start":1412,"line_end":1412,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UnixDatagram>>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45496,"byte_end":45530,"line_start":1395,"line_end":1395,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45535,"byte_end":45538,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45543,"byte_end":45618,"line_start":1397,"line_end":1397,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45623,"byte_end":45626,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45631,"byte_end":45645,"line_start":1399,"line_end":1399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45650,"byte_end":45653,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45658,"byte_end":45671,"line_start":1401,"line_end":1401,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45676,"byte_end":45700,"line_start":1402,"line_end":1402,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45705,"byte_end":45746,"line_start":1403,"line_end":1403,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45751,"byte_end":45754,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45759,"byte_end":45803,"line_start":1405,"line_end":1405,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45808,"byte_end":45869,"line_start":1406,"line_end":1406,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45874,"byte_end":45877,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45882,"byte_end":45912,"line_start":1408,"line_end":1408,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45917,"byte_end":45973,"line_start":1409,"line_end":1409,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":45978,"byte_end":46011,"line_start":1410,"line_end":1410,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46016,"byte_end":46023,"line_start":1411,"line_end":1411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46703,"byte_end":46710,"line_start":1434,"line_end":1434,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UnixDatagram>>::send_to","value":"pub async fn send_to<P: AsRef<Path>, '_, '_>(&'_ Self, &'_ [u8], P)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46179,"byte_end":46219,"line_start":1416,"line_end":1416,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46224,"byte_end":46227,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46232,"byte_end":46272,"line_start":1418,"line_end":1418,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46277,"byte_end":46280,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46285,"byte_end":46299,"line_start":1420,"line_end":1420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46304,"byte_end":46307,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46312,"byte_end":46325,"line_start":1422,"line_end":1422,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46330,"byte_end":46354,"line_start":1423,"line_end":1423,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46359,"byte_end":46400,"line_start":1424,"line_end":1424,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46405,"byte_end":46408,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46413,"byte_end":46457,"line_start":1426,"line_end":1426,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::unbound()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46462,"byte_end":46513,"line_start":1427,"line_end":1427,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46518,"byte_end":46521,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46526,"byte_end":46549,"line_start":1429,"line_end":1429,"column_start":5,"column_end":28}},{"value":"/ let addr = \"/tmp/socket\";","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46554,"byte_end":46583,"line_start":1430,"line_end":1430,"column_start":5,"column_end":34}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46588,"byte_end":46635,"line_start":1431,"line_end":1431,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46640,"byte_end":46673,"line_start":1432,"line_end":1432,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46678,"byte_end":46685,"line_start":1433,"line_end":1433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47610,"byte_end":47614,"line_start":1459,"line_end":1459,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UnixDatagram>>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the connected peer.","sig":null,"attributes":[{"value":"/ Receives data from the connected peer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46848,"byte_end":46890,"line_start":1438,"line_end":1438,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46895,"byte_end":46898,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46903,"byte_end":46978,"line_start":1440,"line_end":1440,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46983,"byte_end":46986,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UnixDatagram::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":46991,"byte_end":47086,"line_start":1442,"line_end":1442,"column_start":5,"column_end":100}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47091,"byte_end":47148,"line_start":1443,"line_end":1443,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47153,"byte_end":47156,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47161,"byte_end":47175,"line_start":1445,"line_end":1445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47180,"byte_end":47183,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47188,"byte_end":47201,"line_start":1447,"line_end":1447,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47206,"byte_end":47230,"line_start":1448,"line_end":1448,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47235,"byte_end":47276,"line_start":1449,"line_end":1449,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47281,"byte_end":47284,"line_start":1450,"line_end":1450,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47289,"byte_end":47333,"line_start":1451,"line_end":1451,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47338,"byte_end":47400,"line_start":1452,"line_end":1452,"column_start":5,"column_end":67}},{"value":"/ socket.get_ref().connect(\"/tmp/socket2\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47405,"byte_end":47451,"line_start":1453,"line_end":1453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47456,"byte_end":47459,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47464,"byte_end":47494,"line_start":1455,"line_end":1455,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47499,"byte_end":47542,"line_start":1456,"line_end":1456,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47547,"byte_end":47580,"line_start":1457,"line_end":1457,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47585,"byte_end":47592,"line_start":1458,"line_end":1458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48430,"byte_end":48434,"line_start":1484,"line_end":1484,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UnixDatagram>>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47720,"byte_end":47757,"line_start":1463,"line_end":1463,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47762,"byte_end":47765,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47770,"byte_end":47810,"line_start":1465,"line_end":1465,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47815,"byte_end":47818,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UnixDatagram::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47823,"byte_end":47918,"line_start":1467,"line_end":1467,"column_start":5,"column_end":100}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47923,"byte_end":47980,"line_start":1468,"line_end":1468,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47985,"byte_end":47988,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":47993,"byte_end":48007,"line_start":1470,"line_end":1470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48012,"byte_end":48015,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48020,"byte_end":48033,"line_start":1472,"line_end":1472,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48038,"byte_end":48062,"line_start":1473,"line_end":1473,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48067,"byte_end":48108,"line_start":1474,"line_end":1474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48113,"byte_end":48116,"line_start":1475,"line_end":1475,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48121,"byte_end":48165,"line_start":1476,"line_end":1476,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48170,"byte_end":48232,"line_start":1477,"line_end":1477,"column_start":5,"column_end":67}},{"value":"/ socket.get_ref().connect(\"/tmp/socket2\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48237,"byte_end":48283,"line_start":1478,"line_end":1478,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48288,"byte_end":48291,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48296,"byte_end":48319,"line_start":1480,"line_end":1480,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48324,"byte_end":48362,"line_start":1481,"line_end":1481,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48367,"byte_end":48400,"line_start":1482,"line_end":1482,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48405,"byte_end":48412,"line_start":1483,"line_end":1483,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":57115,"byte_end":57125,"line_start":226,"line_end":226,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","byte_start":59293,"byte_end":59300,"line_start":62,"line_end":62,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","byte_start":65027,"byte_end":65038,"line_start":236,"line_end":236,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","byte_start":69283,"byte_end":69292,"line_start":363,"line_end":363,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","byte_start":69822,"byte_end":69828,"line_start":382,"line_end":382,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","byte_start":73727,"byte_end":73737,"line_start":500,"line_end":500,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3997,"byte_end":4002,"line_start":132,"line_end":132,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6802,"byte_end":6807,"line_start":227,"line_end":227,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":7038,"byte_end":7043,"line_start":236,"line_end":236,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12100,"byte_end":12105,"line_start":366,"line_end":366,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12143,"byte_end":12148,"line_start":369,"line_end":369,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":13649,"byte_end":13654,"line_start":416,"line_end":416,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15499,"byte_end":15504,"line_start":481,"line_end":481,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":221},{"krate":0,"index":226},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":23701,"byte_end":23706,"line_start":724,"line_end":724,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":24031,"byte_end":24036,"line_start":736,"line_end":736,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":25761,"byte_end":25766,"line_start":795,"line_end":795,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28376,"byte_end":28381,"line_start":880,"line_end":880,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30902,"byte_end":30907,"line_start":953,"line_end":953,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31076,"byte_end":31081,"line_start":961,"line_end":961,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32961,"byte_end":32966,"line_start":1017,"line_end":1017,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33127,"byte_end":33132,"line_start":1025,"line_end":1025,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39270,"byte_end":39275,"line_start":1200,"line_end":1200,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39449,"byte_end":39454,"line_start":1209,"line_end":1209,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41958,"byte_end":41963,"line_start":1281,"line_end":1281,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42167,"byte_end":42172,"line_start":1290,"line_end":1290,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43684,"byte_end":43689,"line_start":1335,"line_end":1335,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43885,"byte_end":43890,"line_start":1344,"line_end":1344,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":357},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48599,"byte_end":48604,"line_start":1490,"line_end":1490,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/driver.rs","byte_start":57115,"byte_end":57125,"line_start":226,"line_end":226,"column_start":24,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","byte_start":59293,"byte_end":59300,"line_start":62,"line_end":62,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","byte_start":65027,"byte_end":65038,"line_start":236,"line_end":236,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","byte_start":69283,"byte_end":69292,"line_start":363,"line_end":363,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","byte_start":69822,"byte_end":69828,"line_start":382,"line_end":382,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/reactor.rs","byte_start":73727,"byte_end":73737,"line_start":500,"line_end":500,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":179},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":3997,"byte_end":4002,"line_start":132,"line_end":132,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":6802,"byte_end":6807,"line_start":227,"line_end":227,"column_start":15,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":7038,"byte_end":7043,"line_start":236,"line_end":236,"column_start":17,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12100,"byte_end":12105,"line_start":366,"line_end":366,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":12143,"byte_end":12148,"line_start":369,"line_end":369,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":13649,"byte_end":13654,"line_start":416,"line_end":416,"column_start":30,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":397},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":15499,"byte_end":15504,"line_start":481,"line_end":481,"column_start":9,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":23701,"byte_end":23706,"line_start":724,"line_end":724,"column_start":18,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":24031,"byte_end":24036,"line_start":736,"line_end":736,"column_start":29,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":397},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":25761,"byte_end":25766,"line_start":795,"line_end":795,"column_start":31,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":397},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":28376,"byte_end":28381,"line_start":880,"line_end":880,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":30902,"byte_end":30907,"line_start":953,"line_end":953,"column_start":41,"column_end":46},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":31076,"byte_end":31081,"line_start":961,"line_end":961,"column_start":6,"column_end":11},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":32961,"byte_end":32966,"line_start":1017,"line_end":1017,"column_start":39,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":33127,"byte_end":33132,"line_start":1025,"line_end":1025,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39270,"byte_end":39275,"line_start":1200,"line_end":1200,"column_start":39,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":39449,"byte_end":39454,"line_start":1209,"line_end":1209,"column_start":6,"column_end":11},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":41958,"byte_end":41963,"line_start":1281,"line_end":1281,"column_start":52,"column_end":57},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":42167,"byte_end":42172,"line_start":1290,"line_end":1290,"column_start":6,"column_end":11},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43684,"byte_end":43689,"line_start":1335,"line_end":1335,"column_start":50,"column_end":55},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":43885,"byte_end":43890,"line_start":1344,"line_end":1344,"column_start":6,"column_end":11},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.10/src/lib.rs","byte_start":48599,"byte_end":48604,"line_start":1490,"line_end":1490,"column_start":52,"column_end":57},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":1896}}]}