{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4","program":"/home/ratnadeepb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","mio","--edition=2018","/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"os-poll\"","--cfg","feature=\"os-util\"","--cfg","feature=\"tcp\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","-C","metadata=14ef975cc0164f45","-C","extra-filename=-14ef975cc0164f45","--out-dir","/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps","-L","dependency=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps","--extern","libc=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/liblibc-0b0c480e4eba652c.rmeta","--extern","log=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/liblog-d1bc27e390c9f551.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ratnadeepb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libmio-14ef975cc0164f45.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[12767589698289748683,1658137852400101718]},"crate_root":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src","external_crates":[{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","num":18,"id":{"name":"log","disambiguator":[12436556438384569570,6297599273872634763]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","num":19,"id":{"name":"cfg_if","disambiguator":[1190566754512566321,10025227971434305752]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/selector/epoll.rs","num":20,"id":{"name":"libc","disambiguator":[5685806396558604199,18160522604763458062]}}],"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":0,"byte_end":10385,"line_start":1,"line_end":291,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/mod.rs","byte_start":7926903,"byte_end":7926911,"line_start":23,"line_end":23,"column_start":29,"column_end":37},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":196}},{"kind":"Use","ref_id":{"krate":0,"index":333},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/mod.rs","byte_start":7926903,"byte_end":7926911,"line_start":23,"line_end":23,"column_start":29,"column_end":37},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":297}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/mod.rs","byte_start":43581,"byte_end":43589,"line_start":57,"line_end":57,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":0,"index":333},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/mod.rs","byte_start":43581,"byte_end":43589,"line_start":57,"line_end":57,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/mod.rs","byte_start":52254,"byte_end":52259,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/mod.rs","byte_start":52284,"byte_end":52290,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/mod.rs","byte_start":52292,"byte_end":52296,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":148},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/mod.rs","byte_start":52321,"byte_end":52327,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977294,"byte_end":7977305,"line_start":12,"line_end":12,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":779},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977307,"byte_end":7977316,"line_start":12,"line_end":12,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977318,"byte_end":7977327,"line_start":12,"line_end":12,"column_start":49,"column_end":58},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":803},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977380,"byte_end":7977389,"line_start":17,"line_end":17,"column_start":24,"column_end":33},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977455,"byte_end":7977465,"line_start":23,"line_end":23,"column_start":25,"column_end":35},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":870},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977467,"byte_end":7977479,"line_start":23,"line_end":23,"column_start":37,"column_end":49},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":928},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977481,"byte_end":7977493,"line_start":23,"line_end":23,"column_start":51,"column_end":63},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977495,"byte_end":7977505,"line_start":23,"line_end":23,"column_start":65,"column_end":75},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1891,"byte_end":1897,"line_start":79,"line_end":79,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1917,"byte_end":1925,"line_start":80,"line_end":80,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1942,"byte_end":1946,"line_start":81,"line_end":81,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1948,"byte_end":1956,"line_start":81,"line_end":81,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1974,"byte_end":1979,"line_start":82,"line_end":82,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":522},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1974,"byte_end":1979,"line_start":82,"line_end":82,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1996,"byte_end":2001,"line_start":83,"line_end":83,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":2174,"byte_end":2182,"line_start":89,"line_end":89,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":169}},{"kind":"Use","ref_id":{"krate":0,"index":333},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":2174,"byte_end":2182,"line_start":89,"line_end":89,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":170}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":0,"byte_end":10385,"line_start":1,"line_end":291,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":11},{"krate":0,"index":35},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":88},{"krate":0,"index":561},{"krate":0,"index":614},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":1622},{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unused_imports, dead_code)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":53,"byte_end":173,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":360,"byte_end":439,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":440,"byte_end":520,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":521,"byte_end":571,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":572,"byte_end":575,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":576,"byte_end":587,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":588,"byte_end":591,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":592,"byte_end":671,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":672,"byte_end":749,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":750,"byte_end":753,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":754,"byte_end":788,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":789,"byte_end":792,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":793,"byte_end":830,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":831,"byte_end":878,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":879,"byte_end":882,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":883,"byte_end":898,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":899,"byte_end":902,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":903,"byte_end":980,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":981,"byte_end":993,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":994,"byte_end":997,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":998,"byte_end":1067,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1068,"byte_end":1071,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1072,"byte_end":1084,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1085,"byte_end":1088,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1089,"byte_end":1136,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1364,"byte_end":1367,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1368,"byte_end":1393,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1394,"byte_end":1397,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1398,"byte_end":1445,"line_start":50,"line_end":50,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":171},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13734,"byte_end":13742,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13093,"byte_end":13126,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13127,"byte_end":13130,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13131,"byte_end":13208,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13209,"byte_end":13288,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13289,"byte_end":13365,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13366,"byte_end":13417,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13418,"byte_end":13421,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.reregister","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13422,"byte_end":13479,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13480,"byte_end":13528,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13529,"byte_end":13559,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13560,"byte_end":13624,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":13625,"byte_end":13667,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":21},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":14275,"byte_end":14283,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":14199,"byte_end":14260,"line_start":37,"line_end":37,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":22},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":14434,"byte_end":14442,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":14358,"byte_end":14419,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15454,"byte_end":15457,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15003,"byte_end":15035,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15040,"byte_end":15043,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15048,"byte_end":15116,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15121,"byte_end":15143,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15148,"byte_end":15151,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15156,"byte_end":15163,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15168,"byte_end":15190,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15195,"byte_end":15198,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15203,"byte_end":15278,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15283,"byte_end":15333,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15338,"byte_end":15379,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15384,"byte_end":15391,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15396,"byte_end":15436,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15666,"byte_end":15677,"line_start":74,"line_end":74,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15590,"byte_end":15648,"line_start":73,"line_end":73,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15820,"byte_end":15831,"line_start":79,"line_end":79,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15744,"byte_end":15802,"line_start":78,"line_end":78,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15969,"byte_end":15975,"line_start":84,"line_end":84,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"pub const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":15898,"byte_end":15951,"line_start":83,"line_end":83,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":16108,"byte_end":16114,"line_start":89,"line_end":89,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"pub const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":16037,"byte_end":16090,"line_start":88,"line_end":88,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":50},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25825,"byte_end":25829,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":51}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":17813,"byte_end":17869,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":17870,"byte_end":17873,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":17874,"byte_end":17950,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":17951,"byte_end":18030,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18031,"byte_end":18109,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18110,"byte_end":18180,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18181,"byte_end":18195,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18196,"byte_end":18199,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18200,"byte_end":18278,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18279,"byte_end":18351,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18352,"byte_end":18427,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18428,"byte_end":18504,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18505,"byte_end":18582,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18583,"byte_end":18657,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18658,"byte_end":18700,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18701,"byte_end":18704,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18705,"byte_end":18753,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18754,"byte_end":18807,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18808,"byte_end":18863,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18864,"byte_end":18918,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18919,"byte_end":18922,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18923,"byte_end":18937,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18938,"byte_end":18941,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":18942,"byte_end":19003,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19004,"byte_end":19007,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19008,"byte_end":19015,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19016,"byte_end":19044,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19045,"byte_end":19092,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19093,"byte_end":19138,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19139,"byte_end":19167,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19168,"byte_end":19171,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19172,"byte_end":19209,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19210,"byte_end":19213,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19214,"byte_end":19256,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19257,"byte_end":19307,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19308,"byte_end":19355,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19356,"byte_end":19359,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19360,"byte_end":19437,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19438,"byte_end":19470,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19471,"byte_end":19520,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19521,"byte_end":19524,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19525,"byte_end":19550,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19551,"byte_end":19614,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19615,"byte_end":19618,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19619,"byte_end":19657,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19658,"byte_end":19752,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19753,"byte_end":19756,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19757,"byte_end":19833,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19834,"byte_end":19865,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19866,"byte_end":19876,"line_start":57,"line_end":57,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19877,"byte_end":19915,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19916,"byte_end":19919,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19920,"byte_end":19950,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":19951,"byte_end":20016,"line_start":61,"line_end":61,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20017,"byte_end":20096,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20097,"byte_end":20123,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20124,"byte_end":20154,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20155,"byte_end":20168,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20169,"byte_end":20178,"line_start":66,"line_end":66,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20179,"byte_end":20184,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20185,"byte_end":20192,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20193,"byte_end":20200,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20201,"byte_end":20204,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20205,"byte_end":20222,"line_start":71,"line_end":71,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20223,"byte_end":20226,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20227,"byte_end":20303,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20304,"byte_end":20366,"line_start":74,"line_end":74,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20367,"byte_end":20370,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20371,"byte_end":20394,"line_start":76,"line_end":76,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20395,"byte_end":20398,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20399,"byte_end":20468,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20469,"byte_end":20538,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20539,"byte_end":20617,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20618,"byte_end":20692,"line_start":81,"line_end":81,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20693,"byte_end":20728,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20729,"byte_end":20732,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20733,"byte_end":20809,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20810,"byte_end":20888,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20889,"byte_end":20902,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20903,"byte_end":20906,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20907,"byte_end":20933,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20934,"byte_end":20937,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":20938,"byte_end":21013,"line_start":90,"line_end":90,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21014,"byte_end":21092,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21093,"byte_end":21171,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21172,"byte_end":21225,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21226,"byte_end":21229,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21230,"byte_end":21280,"line_start":95,"line_end":95,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21281,"byte_end":21284,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21285,"byte_end":21313,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21314,"byte_end":21317,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21318,"byte_end":21392,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21393,"byte_end":21471,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21472,"byte_end":21544,"line_start":101,"line_end":101,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21545,"byte_end":21619,"line_start":102,"line_end":102,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21620,"byte_end":21697,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21698,"byte_end":21769,"line_start":104,"line_end":104,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21770,"byte_end":21841,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21842,"byte_end":21920,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21921,"byte_end":21995,"line_start":107,"line_end":107,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":21996,"byte_end":22029,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22030,"byte_end":22033,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22034,"byte_end":22114,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22115,"byte_end":22184,"line_start":111,"line_end":111,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22185,"byte_end":22262,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22263,"byte_end":22309,"line_start":113,"line_end":113,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22310,"byte_end":22313,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22314,"byte_end":22376,"line_start":115,"line_end":115,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22377,"byte_end":22439,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22440,"byte_end":22496,"line_start":117,"line_end":117,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22497,"byte_end":22565,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22566,"byte_end":22636,"line_start":119,"line_end":119,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22637,"byte_end":22640,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22641,"byte_end":22668,"line_start":121,"line_end":121,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22669,"byte_end":22672,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22673,"byte_end":22745,"line_start":123,"line_end":123,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22746,"byte_end":22823,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22824,"byte_end":22835,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22836,"byte_end":22839,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22840,"byte_end":22856,"line_start":127,"line_end":127,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22857,"byte_end":22860,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22861,"byte_end":22868,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22869,"byte_end":22897,"line_start":130,"line_end":130,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22898,"byte_end":22917,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22918,"byte_end":22965,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":22966,"byte_end":23003,"line_start":133,"line_end":133,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23004,"byte_end":23032,"line_start":134,"line_end":134,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23033,"byte_end":23062,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23063,"byte_end":23091,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23092,"byte_end":23112,"line_start":137,"line_end":137,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23113,"byte_end":23116,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23117,"byte_end":23170,"line_start":139,"line_end":139,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23171,"byte_end":23223,"line_start":140,"line_end":140,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23224,"byte_end":23287,"line_start":141,"line_end":141,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23288,"byte_end":23291,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23292,"byte_end":23334,"line_start":143,"line_end":143,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23335,"byte_end":23338,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23339,"byte_end":23367,"line_start":145,"line_end":145,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23368,"byte_end":23371,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23372,"byte_end":23450,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23451,"byte_end":23468,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23469,"byte_end":23561,"line_start":149,"line_end":149,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23562,"byte_end":23578,"line_start":150,"line_end":150,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23579,"byte_end":23586,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23587,"byte_end":23594,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23595,"byte_end":23598,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23599,"byte_end":23622,"line_start":154,"line_end":154,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23623,"byte_end":23626,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23627,"byte_end":23705,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23706,"byte_end":23785,"line_start":157,"line_end":157,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23786,"byte_end":23866,"line_start":158,"line_end":158,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23867,"byte_end":23944,"line_start":159,"line_end":159,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23945,"byte_end":23989,"line_start":160,"line_end":160,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23990,"byte_end":23993,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":23994,"byte_end":24040,"line_start":162,"line_end":162,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24041,"byte_end":24044,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24045,"byte_end":24071,"line_start":164,"line_end":164,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24072,"byte_end":24075,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24076,"byte_end":24146,"line_start":166,"line_end":166,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24147,"byte_end":24150,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24151,"byte_end":24184,"line_start":168,"line_end":168,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24185,"byte_end":24218,"line_start":169,"line_end":169,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24219,"byte_end":24252,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24253,"byte_end":24286,"line_start":171,"line_end":171,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24287,"byte_end":24320,"line_start":172,"line_end":172,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24321,"byte_end":24354,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24355,"byte_end":24388,"line_start":174,"line_end":174,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24389,"byte_end":24422,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/ | Solaris       | [epoll]   |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24423,"byte_end":24456,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24457,"byte_end":24490,"line_start":177,"line_end":177,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24491,"byte_end":24524,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24525,"byte_end":24558,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24559,"byte_end":24592,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24593,"byte_end":24596,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24597,"byte_end":24671,"line_start":182,"line_end":182,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24672,"byte_end":24747,"line_start":183,"line_end":183,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24748,"byte_end":24821,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24822,"byte_end":24902,"line_start":185,"line_end":185,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24903,"byte_end":24931,"line_start":186,"line_end":186,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24932,"byte_end":24935,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":24936,"byte_end":25014,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25015,"byte_end":25094,"line_start":189,"line_end":189,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25095,"byte_end":25175,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25176,"byte_end":25247,"line_start":191,"line_end":191,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25248,"byte_end":25328,"line_start":192,"line_end":192,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25329,"byte_end":25405,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25406,"byte_end":25417,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25418,"byte_end":25421,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25422,"byte_end":25484,"line_start":196,"line_end":196,"column_start":1,"column_end":63}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25485,"byte_end":25557,"line_start":197,"line_end":197,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365198(v=vs.85).aspx","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25558,"byte_end":25649,"line_start":198,"line_end":198,"column_start":1,"column_end":92}},{"value":"/ [`signalfd`]: http://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25650,"byte_end":25720,"line_start":199,"line_end":199,"column_start":1,"column_end":71}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25721,"byte_end":25764,"line_start":200,"line_end":200,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25765,"byte_end":25813,"line_start":201,"line_end":201,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25899,"byte_end":25907,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":53}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25859,"byte_end":25887,"line_start":206,"line_end":206,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26058,"byte_end":26066,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"pub fn registry(&Self) -> &Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25958,"byte_end":26020,"line_start":212,"line_end":212,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26025,"byte_end":26046,"line_start":213,"line_end":213,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29843,"byte_end":29847,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"pub fn poll(&mut Self, &mut Events, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26123,"byte_end":26152,"line_start":218,"line_end":218,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26157,"byte_end":26160,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26165,"byte_end":26240,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26245,"byte_end":26320,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26325,"byte_end":26398,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26403,"byte_end":26479,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26484,"byte_end":26548,"line_start":224,"line_end":224,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26553,"byte_end":26556,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26561,"byte_end":26638,"line_start":226,"line_end":226,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26643,"byte_end":26718,"line_start":227,"line_end":227,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26723,"byte_end":26796,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26801,"byte_end":26841,"line_start":229,"line_end":229,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26846,"byte_end":26849,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26854,"byte_end":26927,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":26932,"byte_end":27008,"line_start":232,"line_end":232,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27013,"byte_end":27086,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27091,"byte_end":27165,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27170,"byte_end":27243,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27248,"byte_end":27282,"line_start":236,"line_end":236,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27287,"byte_end":27290,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27295,"byte_end":27361,"line_start":238,"line_end":238,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27366,"byte_end":27435,"line_start":239,"line_end":239,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27440,"byte_end":27499,"line_start":240,"line_end":240,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27504,"byte_end":27507,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27512,"byte_end":27585,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27590,"byte_end":27602,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27607,"byte_end":27610,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27615,"byte_end":27663,"line_start":245,"line_end":245,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27668,"byte_end":27734,"line_start":246,"line_end":246,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27739,"byte_end":27805,"line_start":247,"line_end":247,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27810,"byte_end":27840,"line_start":248,"line_end":248,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27845,"byte_end":27897,"line_start":249,"line_end":249,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27902,"byte_end":27905,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27910,"byte_end":27921,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27926,"byte_end":27929,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":27934,"byte_end":28008,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28013,"byte_end":28085,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28090,"byte_end":28120,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28125,"byte_end":28128,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28133,"byte_end":28147,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28152,"byte_end":28155,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28160,"byte_end":28221,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28226,"byte_end":28229,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28234,"byte_end":28241,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28246,"byte_end":28274,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28279,"byte_end":28326,"line_start":263,"line_end":263,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28331,"byte_end":28376,"line_start":264,"line_end":264,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28381,"byte_end":28409,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28414,"byte_end":28417,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28422,"byte_end":28466,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28471,"byte_end":28491,"line_start":268,"line_end":268,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28496,"byte_end":28499,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28504,"byte_end":28546,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28551,"byte_end":28601,"line_start":271,"line_end":271,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28606,"byte_end":28648,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28653,"byte_end":28697,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28702,"byte_end":28705,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28710,"byte_end":28752,"line_start":275,"line_end":275,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28757,"byte_end":28784,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28789,"byte_end":28821,"line_start":277,"line_end":277,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28826,"byte_end":28833,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28838,"byte_end":28841,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28846,"byte_end":28923,"line_start":280,"line_end":280,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28928,"byte_end":28960,"line_start":281,"line_end":281,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":28965,"byte_end":29014,"line_start":282,"line_end":282,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29019,"byte_end":29022,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29027,"byte_end":29052,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29057,"byte_end":29104,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29109,"byte_end":29112,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29117,"byte_end":29155,"line_start":287,"line_end":287,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29160,"byte_end":29189,"line_start":288,"line_end":288,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29194,"byte_end":29214,"line_start":289,"line_end":289,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29219,"byte_end":29236,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29241,"byte_end":29291,"line_start":291,"line_end":291,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29296,"byte_end":29299,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29304,"byte_end":29380,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29385,"byte_end":29416,"line_start":294,"line_end":294,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29421,"byte_end":29431,"line_start":295,"line_end":295,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29436,"byte_end":29474,"line_start":296,"line_end":296,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29479,"byte_end":29482,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29487,"byte_end":29517,"line_start":298,"line_end":298,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29522,"byte_end":29587,"line_start":299,"line_end":299,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29592,"byte_end":29671,"line_start":300,"line_end":300,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29676,"byte_end":29702,"line_start":301,"line_end":301,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29707,"byte_end":29737,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29742,"byte_end":29755,"line_start":303,"line_end":303,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29760,"byte_end":29769,"line_start":304,"line_end":304,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29774,"byte_end":29779,"line_start":305,"line_end":305,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29784,"byte_end":29791,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29796,"byte_end":29803,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29808,"byte_end":29811,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":29816,"byte_end":29831,"line_start":309,"line_end":309,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31277,"byte_end":31280,"line_start":350,"line_end":350,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"pub fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35577,"byte_end":35585,"line_start":470,"line_end":470,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register<S: ?Sized>(&Self, &mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31730,"byte_end":31789,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31794,"byte_end":31797,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31802,"byte_end":31876,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31881,"byte_end":31956,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31961,"byte_end":32031,"line_start":376,"line_end":376,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32036,"byte_end":32039,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32044,"byte_end":32092,"line_start":378,"line_end":378,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32097,"byte_end":32100,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32105,"byte_end":32120,"line_start":380,"line_end":380,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32125,"byte_end":32128,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ `source: &S: event::Source`: This is the source of events that the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32133,"byte_end":32203,"line_start":382,"line_end":382,"column_start":5,"column_end":75}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32208,"byte_end":32271,"line_start":383,"line_end":383,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32276,"byte_end":32279,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32284,"byte_end":32358,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32363,"byte_end":32437,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32442,"byte_end":32510,"line_start":387,"line_end":387,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32515,"byte_end":32584,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32589,"byte_end":32616,"line_start":389,"line_end":389,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32621,"byte_end":32624,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32629,"byte_end":32698,"line_start":391,"line_end":391,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32703,"byte_end":32724,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32729,"byte_end":32732,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32737,"byte_end":32811,"line_start":394,"line_end":394,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32816,"byte_end":32890,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32895,"byte_end":32926,"line_start":396,"line_end":396,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32931,"byte_end":32934,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":32939,"byte_end":33014,"line_start":398,"line_end":398,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33019,"byte_end":33073,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33078,"byte_end":33081,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33086,"byte_end":33162,"line_start":401,"line_end":401,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33167,"byte_end":33197,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33202,"byte_end":33205,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33210,"byte_end":33221,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33226,"byte_end":33229,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33234,"byte_end":33305,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33310,"byte_end":33382,"line_start":407,"line_end":407,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33387,"byte_end":33456,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ `register` is undefined behavior.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33461,"byte_end":33498,"line_start":409,"line_end":409,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33503,"byte_end":33506,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33511,"byte_end":33586,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33591,"byte_end":33666,"line_start":412,"line_end":412,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33671,"byte_end":33744,"line_start":413,"line_end":413,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33749,"byte_end":33817,"line_start":414,"line_end":414,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33822,"byte_end":33841,"line_start":415,"line_end":415,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33846,"byte_end":33849,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33854,"byte_end":33902,"line_start":417,"line_end":417,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33907,"byte_end":33949,"line_start":418,"line_end":418,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":33954,"byte_end":34012,"line_start":419,"line_end":419,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34017,"byte_end":34075,"line_start":420,"line_end":420,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34080,"byte_end":34112,"line_start":421,"line_end":421,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34117,"byte_end":34120,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34125,"byte_end":34139,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34144,"byte_end":34147,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34152,"byte_end":34159,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34164,"byte_end":34192,"line_start":426,"line_end":426,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34197,"byte_end":34216,"line_start":427,"line_end":427,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34221,"byte_end":34268,"line_start":428,"line_end":428,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34273,"byte_end":34318,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34323,"byte_end":34351,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34356,"byte_end":34385,"line_start":431,"line_end":431,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34390,"byte_end":34429,"line_start":432,"line_end":432,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34434,"byte_end":34437,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34442,"byte_end":34474,"line_start":434,"line_end":434,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34479,"byte_end":34482,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34487,"byte_end":34540,"line_start":436,"line_end":436,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34545,"byte_end":34597,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34602,"byte_end":34667,"line_start":438,"line_end":438,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34672,"byte_end":34675,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34680,"byte_end":34718,"line_start":440,"line_end":440,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34723,"byte_end":34752,"line_start":441,"line_end":441,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34757,"byte_end":34777,"line_start":442,"line_end":442,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34782,"byte_end":34799,"line_start":443,"line_end":443,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34804,"byte_end":34854,"line_start":444,"line_end":444,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34859,"byte_end":34862,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34867,"byte_end":34916,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34921,"byte_end":34952,"line_start":447,"line_end":447,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":34957,"byte_end":35002,"line_start":448,"line_end":448,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35007,"byte_end":35010,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35015,"byte_end":35025,"line_start":450,"line_end":450,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35030,"byte_end":35068,"line_start":451,"line_end":451,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35073,"byte_end":35076,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35081,"byte_end":35112,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35117,"byte_end":35152,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35157,"byte_end":35183,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35188,"byte_end":35197,"line_start":456,"line_end":456,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35202,"byte_end":35205,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35210,"byte_end":35252,"line_start":458,"line_end":458,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35257,"byte_end":35306,"line_start":459,"line_end":459,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35311,"byte_end":35314,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35319,"byte_end":35349,"line_start":461,"line_end":461,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35354,"byte_end":35396,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35401,"byte_end":35464,"line_start":463,"line_end":463,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35469,"byte_end":35499,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35504,"byte_end":35517,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35522,"byte_end":35531,"line_start":466,"line_end":466,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35536,"byte_end":35541,"line_start":467,"line_end":467,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35546,"byte_end":35553,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35558,"byte_end":35565,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":38108,"byte_end":38118,"line_start":537,"line_end":537,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"pub fn reregister<S: ?Sized>(&Self, &mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35923,"byte_end":35985,"line_start":482,"line_end":482,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35990,"byte_end":35993,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":35998,"byte_end":36067,"line_start":484,"line_end":484,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36072,"byte_end":36145,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36150,"byte_end":36226,"line_start":486,"line_end":486,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36231,"byte_end":36234,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36239,"byte_end":36314,"line_start":488,"line_end":488,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36319,"byte_end":36395,"line_start":489,"line_end":489,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36400,"byte_end":36475,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36480,"byte_end":36509,"line_start":491,"line_end":491,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36514,"byte_end":36517,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36522,"byte_end":36598,"line_start":493,"line_end":493,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is undefined.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36603,"byte_end":36654,"line_start":494,"line_end":494,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36659,"byte_end":36662,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36667,"byte_end":36736,"line_start":496,"line_end":496,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36741,"byte_end":36811,"line_start":497,"line_end":497,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36816,"byte_end":36828,"line_start":498,"line_end":498,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36833,"byte_end":36836,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36841,"byte_end":36855,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36860,"byte_end":36863,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36868,"byte_end":36875,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36880,"byte_end":36908,"line_start":503,"line_end":503,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36913,"byte_end":36932,"line_start":504,"line_end":504,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36937,"byte_end":36984,"line_start":505,"line_end":505,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":36989,"byte_end":37026,"line_start":506,"line_end":506,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37031,"byte_end":37059,"line_start":507,"line_end":507,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37064,"byte_end":37093,"line_start":508,"line_end":508,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37098,"byte_end":37101,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37106,"byte_end":37134,"line_start":510,"line_end":510,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37139,"byte_end":37142,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37147,"byte_end":37200,"line_start":512,"line_end":512,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37205,"byte_end":37257,"line_start":513,"line_end":513,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37262,"byte_end":37327,"line_start":514,"line_end":514,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37332,"byte_end":37335,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37340,"byte_end":37399,"line_start":516,"line_end":516,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37404,"byte_end":37433,"line_start":517,"line_end":517,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37438,"byte_end":37458,"line_start":518,"line_end":518,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37463,"byte_end":37480,"line_start":519,"line_end":519,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37485,"byte_end":37514,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37519,"byte_end":37522,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37527,"byte_end":37602,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37607,"byte_end":37657,"line_start":523,"line_end":523,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37662,"byte_end":37693,"line_start":524,"line_end":524,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37698,"byte_end":37718,"line_start":525,"line_end":525,"column_start":5,"column_end":25}},{"value":"/     Token(2),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37723,"byte_end":37740,"line_start":526,"line_end":526,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37745,"byte_end":37774,"line_start":527,"line_end":527,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37779,"byte_end":37795,"line_start":528,"line_end":528,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37800,"byte_end":37807,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37812,"byte_end":37819,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37824,"byte_end":37827,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37832,"byte_end":37880,"line_start":532,"line_end":532,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37885,"byte_end":37917,"line_start":533,"line_end":533,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37922,"byte_end":37976,"line_start":534,"line_end":534,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":37981,"byte_end":38036,"line_start":535,"line_end":535,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":38041,"byte_end":38096,"line_start":536,"line_end":536,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40442,"byte_end":40452,"line_start":599,"line_end":599,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"pub fn deregister<S: ?Sized>(&Self, &mut S) -> io::Result<()> where\nS: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":38460,"byte_end":38521,"line_start":549,"line_end":549,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":38526,"byte_end":38529,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":38534,"byte_end":38610,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":38615,"byte_end":38686,"line_start":552,"line_end":552,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":38691,"byte_end":38765,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":38770,"byte_end":38842,"line_start":554,"line_end":554,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":38847,"byte_end":38923,"line_start":555,"line_end":555,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":38928,"byte_end":39001,"line_start":556,"line_end":556,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39006,"byte_end":39019,"line_start":557,"line_end":557,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39024,"byte_end":39027,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39032,"byte_end":39108,"line_start":559,"line_end":559,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is undefined.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39113,"byte_end":39164,"line_start":560,"line_end":560,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39169,"byte_end":39172,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39177,"byte_end":39240,"line_start":562,"line_end":562,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39245,"byte_end":39317,"line_start":563,"line_end":563,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is undefined.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39322,"byte_end":39372,"line_start":564,"line_end":564,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39377,"byte_end":39380,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39385,"byte_end":39399,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39404,"byte_end":39407,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39412,"byte_end":39419,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39424,"byte_end":39452,"line_start":569,"line_end":569,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39457,"byte_end":39476,"line_start":570,"line_end":570,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39481,"byte_end":39528,"line_start":571,"line_end":571,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39533,"byte_end":39578,"line_start":572,"line_end":572,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39583,"byte_end":39611,"line_start":573,"line_end":573,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39616,"byte_end":39645,"line_start":574,"line_end":574,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39650,"byte_end":39678,"line_start":575,"line_end":575,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39683,"byte_end":39686,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39691,"byte_end":39723,"line_start":577,"line_end":577,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39728,"byte_end":39731,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39736,"byte_end":39789,"line_start":579,"line_end":579,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39794,"byte_end":39846,"line_start":580,"line_end":580,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39851,"byte_end":39916,"line_start":581,"line_end":581,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39921,"byte_end":39924,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39929,"byte_end":39967,"line_start":583,"line_end":583,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":39972,"byte_end":40001,"line_start":584,"line_end":584,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40006,"byte_end":40026,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40031,"byte_end":40048,"line_start":586,"line_end":586,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40053,"byte_end":40082,"line_start":587,"line_end":587,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40087,"byte_end":40090,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40095,"byte_end":40140,"line_start":589,"line_end":589,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40145,"byte_end":40148,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40153,"byte_end":40202,"line_start":591,"line_end":591,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40207,"byte_end":40210,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40215,"byte_end":40286,"line_start":593,"line_end":593,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40291,"byte_end":40349,"line_start":594,"line_end":594,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40354,"byte_end":40385,"line_start":595,"line_end":595,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40390,"byte_end":40406,"line_start":596,"line_end":596,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40411,"byte_end":40418,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40423,"byte_end":40430,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40849,"byte_end":40858,"line_start":611,"line_end":611,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40649,"byte_end":40698,"line_start":607,"line_end":607,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40703,"byte_end":40706,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40711,"byte_end":40784,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":40789,"byte_end":40837,"line_start":610,"line_end":610,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941755,"byte_end":7941763,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"SourceFd","qualname":"::sys::unix::sourcefd::SourceFd","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter for [`RawFd`] providing an [`event::Source`] implementation.","sig":null,"attributes":[{"value":"/ Adapter for [`RawFd`] providing an [`event::Source`] implementation.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939375,"byte_end":7939447,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939448,"byte_end":7939451,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `SourceFd` enables registering any type with an FD with [`Poll`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939452,"byte_end":7939521,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939522,"byte_end":7939525,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While only implementations for TCP and UDP are provided, Mio supports","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939526,"byte_end":7939599,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ registering any FD that can be registered with the underlying OS selector.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939600,"byte_end":7939678,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ `SourceFd` provides the necessary bridge.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939679,"byte_end":7939724,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939725,"byte_end":7939728,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note that `SourceFd` takes a `&RawFd`. This is because `SourceFd` **does","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939729,"byte_end":7939805,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ not** take ownership of the FD. Specifically, it will not manage any","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939806,"byte_end":7939878,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ lifecycle related operations, such as closing the FD on drop. It is expected","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939879,"byte_end":7939959,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ that the `SourceFd` is constructed right before a call to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7939960,"byte_end":7940021,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ [`Registry::register`]. See the examples for more detail.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940022,"byte_end":7940083,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940084,"byte_end":7940087,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ../event/trait.Source.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940088,"byte_end":7940137,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940138,"byte_end":7940171,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940172,"byte_end":7940239,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940240,"byte_end":7940243,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940244,"byte_end":7940258,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940259,"byte_end":7940262,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940263,"byte_end":7940279,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940280,"byte_end":7940283,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940284,"byte_end":7940291,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940292,"byte_end":7940320,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940321,"byte_end":7940368,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ use mio::{Interest, Poll, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940369,"byte_end":7940406,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940407,"byte_end":7940435,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940436,"byte_end":7940439,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940440,"byte_end":7940475,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940476,"byte_end":7940506,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940507,"byte_end":7940510,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Bind a std listener","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940511,"byte_end":7940537,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940538,"byte_end":7940591,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940592,"byte_end":7940595,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940596,"byte_end":7940624,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940625,"byte_end":7940628,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940629,"byte_end":7940657,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940658,"byte_end":7940687,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/     &mut SourceFd(&listener.as_raw_fd()),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940688,"byte_end":7940733,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/     Token(0),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940734,"byte_end":7940751,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940752,"byte_end":7940781,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940782,"byte_end":7940798,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940799,"byte_end":7940806,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940807,"byte_end":7940814,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940815,"byte_end":7940818,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Implementing [`event::Source`] for a custom type backed by a [`RawFd`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940819,"byte_end":7940894,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940895,"byte_end":7940898,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940899,"byte_end":7940906,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use mio::{event, Interest, Registry, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940907,"byte_end":7940955,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940956,"byte_end":7940984,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940985,"byte_end":7940988,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::RawFd;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7940989,"byte_end":7941022,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ use std::io;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941023,"byte_end":7941039,"line_start":58,"line_end":58,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941040,"byte_end":7941043,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941044,"byte_end":7941069,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ pub struct MyIo {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941070,"byte_end":7941091,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     fd: RawFd,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941092,"byte_end":7941110,"line_start":62,"line_end":62,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941111,"byte_end":7941116,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941117,"byte_end":7941120,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ impl event::Source for MyIo {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941121,"byte_end":7941154,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941155,"byte_end":7941241,"line_start":66,"line_end":66,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941242,"byte_end":7941271,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941272,"byte_end":7941281,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).register(registry, token, interests)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941282,"byte_end":7941349,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941350,"byte_end":7941359,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941360,"byte_end":7941363,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941364,"byte_end":7941452,"line_start":72,"line_end":72,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941453,"byte_end":7941482,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941483,"byte_end":7941492,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).reregister(registry, token, interests)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941493,"byte_end":7941562,"line_start":75,"line_end":75,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941563,"byte_end":7941572,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941573,"byte_end":7941576,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941577,"byte_end":7941650,"line_start":78,"line_end":78,"column_start":1,"column_end":74}},{"value":"/         SourceFd(&self.fd).deregister(registry)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941651,"byte_end":7941702,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941703,"byte_end":7941712,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941713,"byte_end":7941718,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941719,"byte_end":7941726,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":335},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941768,"byte_end":7941781,"line_start":84,"line_end":84,"column_start":25,"column_end":38},"name":"0","qualname":"::sys::unix::sourcefd::SourceFd::0","value":"&'a i32","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959372,"byte_end":7959382,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::sys::unix::uds::socketaddr::SocketAddr","value":"SocketAddr {  }","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"decl_id":null,"docs":" An address associated with a `mio` specific Unix socket.","sig":null,"attributes":[{"value":"/ An address associated with a `mio` specific Unix socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959006,"byte_end":7959066,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959067,"byte_end":7959070,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is implemented instead of imported from [`net::SocketAddr`] because","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959071,"byte_end":7959147,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ there is no way to create a [`net::SocketAddr`]. One must be returned by","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959148,"byte_end":7959224,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ [`accept`], so this is returned instead.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959225,"byte_end":7959269,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959270,"byte_end":7959273,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`net::SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959274,"byte_end":7959329,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959330,"byte_end":7959360,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7961537,"byte_end":7961547,"line_start":79,"line_end":79,"column_start":16,"column_end":26},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7961479,"byte_end":7961521,"line_start":78,"line_end":78,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7961945,"byte_end":7961956,"line_start":92,"line_end":92,"column_start":16,"column_end":27},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":49111,"byte_end":49116,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44301,"byte_end":44357,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44358,"byte_end":44361,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44362,"byte_end":44431,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44432,"byte_end":44488,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44489,"byte_end":44492,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44493,"byte_end":44544,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44545,"byte_end":44548,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44549,"byte_end":44597,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44598,"byte_end":44628,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44629,"byte_end":44693,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44694,"byte_end":44762,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44763,"byte_end":44766,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44767,"byte_end":44780,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44781,"byte_end":44784,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44785,"byte_end":44862,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44863,"byte_end":44932,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44933,"byte_end":44936,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44937,"byte_end":44980,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44981,"byte_end":44984,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44985,"byte_end":44992,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":44993,"byte_end":45021,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45022,"byte_end":45069,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45070,"byte_end":45115,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45116,"byte_end":45146,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45147,"byte_end":45150,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45151,"byte_end":45171,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45172,"byte_end":45202,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45203,"byte_end":45237,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45238,"byte_end":45241,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45242,"byte_end":45316,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45317,"byte_end":45351,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45352,"byte_end":45355,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45356,"byte_end":45434,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45435,"byte_end":45459,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45460,"byte_end":45500,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45501,"byte_end":45504,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45505,"byte_end":45538,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45539,"byte_end":45576,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45577,"byte_end":45580,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45581,"byte_end":45640,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45641,"byte_end":45675,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45676,"byte_end":45679,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45680,"byte_end":45706,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45707,"byte_end":45739,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45740,"byte_end":45743,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45744,"byte_end":45763,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45764,"byte_end":45830,"line_start":47,"line_end":47,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45831,"byte_end":45834,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45835,"byte_end":45863,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45864,"byte_end":45939,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45940,"byte_end":45943,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":45944,"byte_end":46018,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46019,"byte_end":46057,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46058,"byte_end":46085,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46086,"byte_end":46118,"line_start":55,"line_end":55,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46119,"byte_end":46122,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46123,"byte_end":46201,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46202,"byte_end":46239,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46240,"byte_end":46283,"line_start":59,"line_end":59,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46284,"byte_end":46338,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46339,"byte_end":46348,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46349,"byte_end":46356,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46357,"byte_end":46360,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46361,"byte_end":46381,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46382,"byte_end":46431,"line_start":65,"line_end":65,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46432,"byte_end":46435,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46436,"byte_end":46491,"line_start":67,"line_end":67,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46492,"byte_end":46519,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46520,"byte_end":46523,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46524,"byte_end":46550,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46551,"byte_end":46561,"line_start":71,"line_end":71,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46562,"byte_end":46588,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46589,"byte_end":46627,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46628,"byte_end":46631,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46632,"byte_end":46662,"line_start":75,"line_end":75,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46663,"byte_end":46696,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46697,"byte_end":46726,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46727,"byte_end":46800,"line_start":78,"line_end":78,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46801,"byte_end":46836,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46837,"byte_end":46863,"line_start":80,"line_end":80,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46864,"byte_end":46913,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46914,"byte_end":46966,"line_start":82,"line_end":82,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":46967,"byte_end":47021,"line_start":83,"line_end":83,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47022,"byte_end":47091,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47092,"byte_end":47142,"line_start":85,"line_end":85,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47143,"byte_end":47176,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47177,"byte_end":47180,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47181,"byte_end":47244,"line_start":88,"line_end":88,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47245,"byte_end":47314,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47315,"byte_end":47370,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47371,"byte_end":47374,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47375,"byte_end":47441,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47442,"byte_end":47540,"line_start":93,"line_end":93,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47541,"byte_end":47544,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47545,"byte_end":47596,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47597,"byte_end":47659,"line_start":96,"line_end":96,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47660,"byte_end":47689,"line_start":97,"line_end":97,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47690,"byte_end":47774,"line_start":98,"line_end":98,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47775,"byte_end":47853,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47854,"byte_end":47892,"line_start":100,"line_end":100,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47893,"byte_end":47922,"line_start":101,"line_end":101,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47923,"byte_end":47998,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":47999,"byte_end":48024,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48025,"byte_end":48046,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48047,"byte_end":48064,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48065,"byte_end":48091,"line_start":106,"line_end":106,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48092,"byte_end":48139,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48140,"byte_end":48166,"line_start":108,"line_end":108,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48167,"byte_end":48246,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48247,"byte_end":48285,"line_start":110,"line_end":110,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48286,"byte_end":48361,"line_start":111,"line_end":111,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48362,"byte_end":48417,"line_start":112,"line_end":112,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48418,"byte_end":48456,"line_start":113,"line_end":113,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48457,"byte_end":48486,"line_start":114,"line_end":114,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48487,"byte_end":48559,"line_start":115,"line_end":115,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48560,"byte_end":48612,"line_start":116,"line_end":116,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48613,"byte_end":48697,"line_start":117,"line_end":117,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48698,"byte_end":48774,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48775,"byte_end":48813,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48814,"byte_end":48843,"line_start":120,"line_end":120,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48844,"byte_end":48919,"line_start":121,"line_end":121,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48920,"byte_end":48945,"line_start":122,"line_end":122,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48946,"byte_end":48967,"line_start":123,"line_end":123,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48968,"byte_end":48985,"line_start":124,"line_end":124,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":48986,"byte_end":48999,"line_start":125,"line_end":125,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":49000,"byte_end":49009,"line_start":126,"line_end":126,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":49010,"byte_end":49015,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":49016,"byte_end":49023,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":49024,"byte_end":49031,"line_start":129,"line_end":129,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":523},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/token.rs","byte_start":49117,"byte_end":49126,"line_start":131,"line_end":131,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51696,"byte_end":51701,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":548}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49273,"byte_end":49322,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49323,"byte_end":49326,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49327,"byte_end":49400,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49401,"byte_end":49474,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49475,"byte_end":49478,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49479,"byte_end":49509,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49510,"byte_end":49572,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49573,"byte_end":49616,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49617,"byte_end":49620,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49621,"byte_end":49632,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49633,"byte_end":49636,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49637,"byte_end":49715,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49716,"byte_end":49729,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49730,"byte_end":49733,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` should active per [`Poll`], if multiple threads need","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49734,"byte_end":49812,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49813,"byte_end":49886,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49887,"byte_end":49958,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ undefined.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49959,"byte_end":49973,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49974,"byte_end":49977,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":49978,"byte_end":50004,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50005,"byte_end":50008,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50009,"byte_end":50083,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50084,"byte_end":50162,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50163,"byte_end":50202,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50203,"byte_end":50206,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50207,"byte_end":50282,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: http://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50283,"byte_end":50349,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50350,"byte_end":50353,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50354,"byte_end":50368,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50369,"byte_end":50372,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50373,"byte_end":50422,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50423,"byte_end":50426,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50427,"byte_end":50434,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50435,"byte_end":50494,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50495,"byte_end":50515,"line_start":39,"line_end":39,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50516,"byte_end":50544,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50545,"byte_end":50568,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50569,"byte_end":50572,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50573,"byte_end":50615,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50616,"byte_end":50619,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50620,"byte_end":50660,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50661,"byte_end":50664,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50665,"byte_end":50697,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50698,"byte_end":50744,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50745,"byte_end":50748,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50749,"byte_end":50816,"line_start":50,"line_end":50,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50817,"byte_end":50820,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50821,"byte_end":50892,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50893,"byte_end":50923,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50924,"byte_end":50955,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50956,"byte_end":50996,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":50997,"byte_end":51040,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51041,"byte_end":51091,"line_start":57,"line_end":57,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51092,"byte_end":51095,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51096,"byte_end":51152,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51153,"byte_end":51200,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51201,"byte_end":51208,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51209,"byte_end":51212,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51213,"byte_end":51283,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51284,"byte_end":51318,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51319,"byte_end":51322,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51323,"byte_end":51402,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51403,"byte_end":51429,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51430,"byte_end":51462,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51463,"byte_end":51515,"line_start":69,"line_end":69,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51516,"byte_end":51555,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51556,"byte_end":51604,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51605,"byte_end":51634,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51635,"byte_end":51651,"line_start":73,"line_end":73,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51652,"byte_end":51659,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51660,"byte_end":51667,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51784,"byte_end":51787,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"pub fn new(&Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51747,"byte_end":51772,"line_start":82,"line_end":82,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":52053,"byte_end":52057,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"pub fn wake(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51944,"byte_end":51998,"line_start":87,"line_end":87,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":52003,"byte_end":52006,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":52011,"byte_end":52041,"line_start":89,"line_end":89,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":88},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/mod.rs","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":116},{"krate":0,"index":142},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/mod.rs","byte_start":52120,"byte_end":52160,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52720,"byte_end":52725,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":95}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52371,"byte_end":52393,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52394,"byte_end":52397,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52398,"byte_end":52473,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52474,"byte_end":52493,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52494,"byte_end":52497,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52498,"byte_end":52561,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52562,"byte_end":52565,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52566,"byte_end":52617,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52618,"byte_end":52651,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52652,"byte_end":52687,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52688,"byte_end":52708,"line_start":15,"line_end":15,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52813,"byte_end":52818,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"pub fn token(&Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52771,"byte_end":52801,"line_start":21,"line_end":21,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52957,"byte_end":52968,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"pub fn is_readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52887,"byte_end":52945,"line_start":26,"line_end":26,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53112,"byte_end":53123,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"pub fn is_writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53042,"byte_end":53100,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54125,"byte_end":54133,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53197,"byte_end":53252,"line_start":36,"line_end":36,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53257,"byte_end":53260,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53265,"byte_end":53340,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53345,"byte_end":53418,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53423,"byte_end":53473,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53478,"byte_end":53481,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53486,"byte_end":53497,"line_start":42,"line_end":42,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53502,"byte_end":53505,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53510,"byte_end":53585,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53590,"byte_end":53606,"line_start":45,"line_end":45,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53611,"byte_end":53614,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53619,"byte_end":53679,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53684,"byte_end":53687,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53692,"byte_end":53731,"line_start":49,"line_end":49,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53736,"byte_end":53775,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53780,"byte_end":53819,"line_start":51,"line_end":51,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53824,"byte_end":53897,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53902,"byte_end":53905,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53910,"byte_end":53969,"line_start":54,"line_end":54,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":53974,"byte_end":54036,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54041,"byte_end":54113,"line_start":56,"line_end":56,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55446,"byte_end":55460,"line_start":88,"line_end":88,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"pub fn is_read_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54204,"byte_end":54265,"line_start":61,"line_end":61,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54270,"byte_end":54273,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54278,"byte_end":54289,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54294,"byte_end":54297,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54302,"byte_end":54375,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54380,"byte_end":54393,"line_start":66,"line_end":66,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54398,"byte_end":54461,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shtudown both the read half and the write half","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54466,"byte_end":54539,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54544,"byte_end":54563,"line_start":69,"line_end":69,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shtudown the write half its socket; this sends a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54568,"byte_end":54642,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54647,"byte_end":54708,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54713,"byte_end":54716,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54721,"byte_end":54793,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54798,"byte_end":54866,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54871,"byte_end":54906,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54911,"byte_end":54914,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54919,"byte_end":54979,"line_start":77,"line_end":77,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54984,"byte_end":54987,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":54992,"byte_end":55031,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55036,"byte_end":55075,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55080,"byte_end":55119,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55124,"byte_end":55174,"line_start":82,"line_end":82,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55179,"byte_end":55218,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55223,"byte_end":55226,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55231,"byte_end":55290,"line_start":85,"line_end":85,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55295,"byte_end":55357,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55362,"byte_end":55434,"line_start":87,"line_end":87,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56691,"byte_end":56706,"line_start":118,"line_end":118,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"pub fn is_write_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55537,"byte_end":55599,"line_start":92,"line_end":92,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55604,"byte_end":55607,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55612,"byte_end":55623,"line_start":94,"line_end":94,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55628,"byte_end":55631,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55636,"byte_end":55705,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55710,"byte_end":55784,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55789,"byte_end":55792,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55797,"byte_end":55865,"line_start":99,"line_end":99,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55870,"byte_end":55905,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55910,"byte_end":55913,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55918,"byte_end":55990,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":55995,"byte_end":56064,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56069,"byte_end":56104,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56109,"byte_end":56112,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56117,"byte_end":56177,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56182,"byte_end":56185,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56190,"byte_end":56229,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56234,"byte_end":56273,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56278,"byte_end":56317,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56322,"byte_end":56365,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56370,"byte_end":56419,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56424,"byte_end":56463,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56468,"byte_end":56471,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56476,"byte_end":56535,"line_start":115,"line_end":115,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56540,"byte_end":56602,"line_start":116,"line_end":116,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56607,"byte_end":56679,"line_start":117,"line_end":117,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57477,"byte_end":57488,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56784,"byte_end":56842,"line_start":122,"line_end":122,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56847,"byte_end":56850,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56855,"byte_end":56866,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56871,"byte_end":56874,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56879,"byte_end":56954,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56959,"byte_end":56978,"line_start":127,"line_end":127,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56983,"byte_end":56986,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":56991,"byte_end":57051,"line_start":129,"line_end":129,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57056,"byte_end":57059,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57064,"byte_end":57103,"line_start":131,"line_end":131,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57108,"byte_end":57147,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57152,"byte_end":57191,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57196,"byte_end":57235,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57240,"byte_end":57243,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57248,"byte_end":57307,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57312,"byte_end":57374,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57379,"byte_end":57451,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57456,"byte_end":57465,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58293,"byte_end":58299,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"pub fn is_aio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57562,"byte_end":57615,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57620,"byte_end":57623,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57628,"byte_end":57639,"line_start":146,"line_end":146,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57644,"byte_end":57647,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57652,"byte_end":57728,"line_start":148,"line_end":148,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57733,"byte_end":57736,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57741,"byte_end":57801,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57806,"byte_end":57809,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57814,"byte_end":57853,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57858,"byte_end":57897,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57902,"byte_end":57941,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57946,"byte_end":57989,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":57994,"byte_end":57997,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58002,"byte_end":58065,"line_start":157,"line_end":157,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58070,"byte_end":58073,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58078,"byte_end":58137,"line_start":159,"line_end":159,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58142,"byte_end":58204,"line_start":160,"line_end":160,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58209,"byte_end":58281,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58603,"byte_end":58609,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"pub fn is_lio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58368,"byte_end":58421,"line_start":166,"line_end":166,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58426,"byte_end":58429,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58434,"byte_end":58445,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58450,"byte_end":58453,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58458,"byte_end":58533,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":58538,"byte_end":58591,"line_start":171,"line_end":171,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61511,"byte_end":61517,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":121}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60496,"byte_end":60533,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60534,"byte_end":60537,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60538,"byte_end":60613,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60614,"byte_end":60691,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60692,"byte_end":60766,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60767,"byte_end":60809,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60810,"byte_end":60813,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60814,"byte_end":60865,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60866,"byte_end":60869,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60870,"byte_end":60921,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60922,"byte_end":60955,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60956,"byte_end":60959,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60960,"byte_end":60974,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60975,"byte_end":60978,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60979,"byte_end":60986,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":60987,"byte_end":61015,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61016,"byte_end":61063,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61064,"byte_end":61092,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61093,"byte_end":61121,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61122,"byte_end":61125,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61126,"byte_end":61175,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61176,"byte_end":61208,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61209,"byte_end":61214,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61215,"byte_end":61248,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61249,"byte_end":61252,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61253,"byte_end":61298,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61299,"byte_end":61302,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61303,"byte_end":61365,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61366,"byte_end":61369,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61370,"byte_end":61402,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61403,"byte_end":61460,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61461,"byte_end":61466,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61467,"byte_end":61483,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61484,"byte_end":61491,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61492,"byte_end":61499,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":551},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62255,"byte_end":62259,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61547,"byte_end":61571,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61572,"byte_end":61575,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61576,"byte_end":61640,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61641,"byte_end":61644,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61645,"byte_end":61679,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61680,"byte_end":61724,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61725,"byte_end":61728,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61729,"byte_end":61743,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61744,"byte_end":61747,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61748,"byte_end":61755,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61756,"byte_end":61784,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61785,"byte_end":61832,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61833,"byte_end":61861,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61862,"byte_end":61890,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61891,"byte_end":61894,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61895,"byte_end":61944,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61945,"byte_end":61977,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61978,"byte_end":61981,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":61982,"byte_end":62018,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62019,"byte_end":62022,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62023,"byte_end":62085,"line_start":65,"line_end":65,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62086,"byte_end":62089,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62090,"byte_end":62122,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62123,"byte_end":62180,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62181,"byte_end":62186,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62187,"byte_end":62203,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62204,"byte_end":62211,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62212,"byte_end":62219,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62594,"byte_end":62607,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"pub fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62326,"byte_end":62395,"line_start":80,"line_end":80,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62400,"byte_end":62403,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62408,"byte_end":62422,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62427,"byte_end":62430,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62435,"byte_end":62442,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62447,"byte_end":62467,"line_start":85,"line_end":85,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62472,"byte_end":62475,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62480,"byte_end":62525,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62530,"byte_end":62570,"line_start":88,"line_end":88,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62575,"byte_end":62582,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62966,"byte_end":62974,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62732,"byte_end":62794,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62799,"byte_end":62802,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62807,"byte_end":62814,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62819,"byte_end":62839,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62844,"byte_end":62847,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62852,"byte_end":62897,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62902,"byte_end":62942,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62947,"byte_end":62954,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63280,"byte_end":63288,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63034,"byte_end":63090,"line_start":108,"line_end":108,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63095,"byte_end":63098,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63103,"byte_end":63117,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63122,"byte_end":63125,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63130,"byte_end":63137,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63142,"byte_end":63162,"line_start":113,"line_end":113,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63167,"byte_end":63170,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63175,"byte_end":63220,"line_start":115,"line_end":115,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63225,"byte_end":63256,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63261,"byte_end":63268,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63990,"byte_end":63994,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63347,"byte_end":63395,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63400,"byte_end":63403,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63408,"byte_end":63422,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63427,"byte_end":63430,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63435,"byte_end":63442,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63447,"byte_end":63475,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63480,"byte_end":63527,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63532,"byte_end":63560,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63565,"byte_end":63593,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63598,"byte_end":63601,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63606,"byte_end":63655,"line_start":132,"line_end":132,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63660,"byte_end":63692,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63697,"byte_end":63700,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63705,"byte_end":63741,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63746,"byte_end":63749,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63754,"byte_end":63816,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63821,"byte_end":63824,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63829,"byte_end":63861,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63866,"byte_end":63923,"line_start":140,"line_end":140,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63928,"byte_end":63933,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63938,"byte_end":63954,"line_start":142,"line_end":142,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63959,"byte_end":63966,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":63971,"byte_end":63978,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64863,"byte_end":64868,"line_start":180,"line_end":180,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64097,"byte_end":64155,"line_start":152,"line_end":152,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64160,"byte_end":64163,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64168,"byte_end":64179,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64184,"byte_end":64187,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64192,"byte_end":64265,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64270,"byte_end":64288,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64293,"byte_end":64296,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64301,"byte_end":64315,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64320,"byte_end":64323,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64328,"byte_end":64335,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64340,"byte_end":64368,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64373,"byte_end":64420,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64425,"byte_end":64453,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64458,"byte_end":64486,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64491,"byte_end":64494,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64499,"byte_end":64548,"line_start":167,"line_end":167,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64553,"byte_end":64585,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64590,"byte_end":64593,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64598,"byte_end":64634,"line_start":170,"line_end":170,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64639,"byte_end":64642,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64647,"byte_end":64709,"line_start":172,"line_end":172,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64714,"byte_end":64717,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64722,"byte_end":64746,"line_start":174,"line_end":174,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64751,"byte_end":64770,"line_start":175,"line_end":175,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64775,"byte_end":64806,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64811,"byte_end":64827,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64832,"byte_end":64839,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":64844,"byte_end":64851,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":148},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68307,"byte_end":68313,"line_start":74,"line_end":74,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":65899,"byte_end":65960,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":65961,"byte_end":65964,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":65965,"byte_end":66028,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66029,"byte_end":66102,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66103,"byte_end":66181,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66182,"byte_end":66194,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66195,"byte_end":66198,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66199,"byte_end":66237,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66238,"byte_end":66241,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66242,"byte_end":66283,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66284,"byte_end":66287,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66288,"byte_end":66322,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66323,"byte_end":66326,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66327,"byte_end":66406,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66407,"byte_end":66481,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66482,"byte_end":66559,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66560,"byte_end":66639,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66640,"byte_end":66657,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66658,"byte_end":66661,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66662,"byte_end":66709,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66710,"byte_end":66756,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66757,"byte_end":66760,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66761,"byte_end":66792,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66793,"byte_end":66796,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66797,"byte_end":66876,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66877,"byte_end":66955,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":66956,"byte_end":67035,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67036,"byte_end":67111,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67112,"byte_end":67169,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67170,"byte_end":67173,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67174,"byte_end":67235,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67236,"byte_end":67239,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67240,"byte_end":67254,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67255,"byte_end":67258,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67259,"byte_end":67317,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67318,"byte_end":67321,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67322,"byte_end":67329,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67330,"byte_end":67371,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67372,"byte_end":67399,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67400,"byte_end":67428,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67429,"byte_end":67432,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67433,"byte_end":67449,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67450,"byte_end":67453,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67454,"byte_end":67479,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67480,"byte_end":67505,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67506,"byte_end":67532,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67533,"byte_end":67538,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67539,"byte_end":67542,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67543,"byte_end":67573,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67574,"byte_end":67660,"line_start":54,"line_end":54,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67661,"byte_end":67690,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67691,"byte_end":67700,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67701,"byte_end":67756,"line_start":57,"line_end":57,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67757,"byte_end":67817,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67818,"byte_end":67827,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67828,"byte_end":67831,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67832,"byte_end":67920,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67921,"byte_end":67950,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67951,"byte_end":67960,"line_start":63,"line_end":63,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":67961,"byte_end":68018,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68019,"byte_end":68081,"line_start":65,"line_end":65,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68082,"byte_end":68091,"line_start":66,"line_end":66,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68092,"byte_end":68095,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68096,"byte_end":68169,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68170,"byte_end":68227,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68228,"byte_end":68272,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68273,"byte_end":68282,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68283,"byte_end":68288,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68289,"byte_end":68296,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68665,"byte_end":68673,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"pub fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68320,"byte_end":68375,"line_start":75,"line_end":75,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68380,"byte_end":68383,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68388,"byte_end":68463,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68468,"byte_end":68543,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68548,"byte_end":68577,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68582,"byte_end":68585,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68590,"byte_end":68657,"line_start":81,"line_end":81,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69168,"byte_end":69178,"line_start":96,"line_end":96,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"pub fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68804,"byte_end":68862,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68867,"byte_end":68870,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68875,"byte_end":68927,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":68932,"byte_end":68996,"line_start":92,"line_end":92,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69001,"byte_end":69076,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69081,"byte_end":69084,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69089,"byte_end":69160,"line_start":95,"line_end":95,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69664,"byte_end":69674,"line_start":110,"line_end":110,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"pub fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69309,"byte_end":69366,"line_start":103,"line_end":103,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69371,"byte_end":69374,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69379,"byte_end":69431,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69436,"byte_end":69500,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69505,"byte_end":69572,"line_start":107,"line_end":107,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69577,"byte_end":69580,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69585,"byte_end":69656,"line_start":109,"line_end":109,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":614},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":783},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029}],"decl_id":null,"docs":" Networking primitives","sig":null,"attributes":[{"value":"cfg(any(feature = \"tcp\", feature = \"udp\", feature = \"uds\"))","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/macros/mod.rs","byte_start":11088,"byte_end":11150,"line_start":32,"line_end":32,"column_start":13,"column_end":75}},{"value":"/ Networking primitives","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7976885,"byte_end":7976910,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7976911,"byte_end":7976914,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7976915,"byte_end":7976988,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7976989,"byte_end":7977067,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977068,"byte_end":7977146,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977147,"byte_end":7977178,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977179,"byte_end":7977182,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/mod.rs","byte_start":7977183,"byte_end":7977244,"line_start":8,"line_end":8,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":642},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978708,"byte_end":7978719,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":643}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978004,"byte_end":7978048,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978049,"byte_end":7978052,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978053,"byte_end":7978067,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978068,"byte_end":7978071,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978072,"byte_end":7978079,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978080,"byte_end":7978108,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978109,"byte_end":7978156,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978157,"byte_end":7978202,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978203,"byte_end":7978233,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978234,"byte_end":7978262,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978263,"byte_end":7978266,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978267,"byte_end":7978337,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978338,"byte_end":7978341,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978342,"byte_end":7978374,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978375,"byte_end":7978423,"line_start":26,"line_end":26,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978424,"byte_end":7978427,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978428,"byte_end":7978466,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978467,"byte_end":7978542,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978543,"byte_end":7978546,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978547,"byte_end":7978609,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978610,"byte_end":7978613,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978614,"byte_end":7978663,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978664,"byte_end":7978680,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978681,"byte_end":7978688,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978689,"byte_end":7978696,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7979213,"byte_end":7979217,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"pub fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978787,"byte_end":7978861,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978866,"byte_end":7978897,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978902,"byte_end":7978905,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978910,"byte_end":7978958,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978963,"byte_end":7978966,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978971,"byte_end":7979002,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7979007,"byte_end":7979066,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7979071,"byte_end":7979119,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7979124,"byte_end":7979201,"line_start":50,"line_end":50,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980269,"byte_end":7980277,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7979919,"byte_end":7979986,"line_start":68,"line_end":68,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7979991,"byte_end":7979994,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7979999,"byte_end":7980071,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980076,"byte_end":7980150,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980155,"byte_end":7980227,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980232,"byte_end":7980257,"line_start":73,"line_end":73,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980792,"byte_end":7980798,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"pub fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980410,"byte_end":7980440,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980445,"byte_end":7980448,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980453,"byte_end":7980504,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980509,"byte_end":7980585,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980590,"byte_end":7980663,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980668,"byte_end":7980671,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980676,"byte_end":7980748,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980753,"byte_end":7980780,"line_start":87,"line_end":87,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981064,"byte_end":7981074,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7980998,"byte_end":7981052,"line_start":94,"line_end":94,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981338,"byte_end":7981345,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981153,"byte_end":7981211,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981216,"byte_end":7981219,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981224,"byte_end":7981300,"line_start":101,"line_end":101,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981305,"byte_end":7981326,"line_start":102,"line_end":102,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981615,"byte_end":7981618,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981426,"byte_end":7981484,"line_start":107,"line_end":107,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981489,"byte_end":7981492,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981497,"byte_end":7981563,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981568,"byte_end":7981571,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981576,"byte_end":7981603,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981936,"byte_end":7981946,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981683,"byte_end":7981741,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981746,"byte_end":7981749,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981754,"byte_end":7981828,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981833,"byte_end":7981909,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7981914,"byte_end":7981924,"line_start":120,"line_end":120,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":779},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984661,"byte_end":7984670,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":780}],"decl_id":null,"docs":" A non-blocking TCP socket used to configure a stream or listener.","sig":null,"attributes":[{"value":"/ A non-blocking TCP socket used to configure a stream or listener.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984302,"byte_end":7984371,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984372,"byte_end":7984375,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `TcpSocket` type wraps the operating-system's socket handle. This type","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984376,"byte_end":7984454,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ is used to configure the socket before establishing a connection or start","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984455,"byte_end":7984532,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ listening for inbound connections.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984533,"byte_end":7984571,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984572,"byte_end":7984575,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984576,"byte_end":7984632,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984812,"byte_end":7984818,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new IPv4 TCP socket.","sig":null,"attributes":[{"value":"/ Create a new IPv4 TCP socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984727,"byte_end":7984760,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984765,"byte_end":7984768,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This calls `socket(2)`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984773,"byte_end":7984800,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7985027,"byte_end":7985033,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new IPv6 TCP socket.","sig":null,"attributes":[{"value":"/ Create a new IPv6 TCP socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984942,"byte_end":7984975,"line_start":35,"line_end":35,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984980,"byte_end":7984983,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This calls `socket(2)`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984988,"byte_end":7985015,"line_start":37,"line_end":37,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7985405,"byte_end":7985409,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind `addr` to the TCP socket.\n","sig":null,"attributes":[{"value":"/ Bind `addr` to the TCP socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7985359,"byte_end":7985393,"line_start":52,"line_end":52,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7985744,"byte_end":7985751,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub fn connect(Self, SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Connect the socket to `addr`.","sig":null,"attributes":[{"value":"/ Connect the socket to `addr`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7985505,"byte_end":7985538,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7985543,"byte_end":7985546,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This consumes the socket and performs the connect operation. Once the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7985551,"byte_end":7985624,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ connection completes, the socket is now a non-blocking `TcpStream` and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7985629,"byte_end":7985703,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ can be used as such.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7985708,"byte_end":7985732,"line_start":61,"line_end":61,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986070,"byte_end":7986076,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Listen for inbound connections, converting the socket to a\n `TcpListener`.\n","sig":null,"attributes":[{"value":"/ Listen for inbound connections, converting the socket to a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7985973,"byte_end":7986035,"line_start":70,"line_end":70,"column_start":5,"column_end":67}},{"value":"/ `TcpListener`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986040,"byte_end":7986058,"line_start":71,"line_end":71,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986368,"byte_end":7986381,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_REUSEADDR` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_REUSEADDR` on this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986304,"byte_end":7986356,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986551,"byte_end":7986561,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpSocket>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_LINGER` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_LINGER` on this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986490,"byte_end":7986539,"line_start":85,"line_end":85,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989476,"byte_end":7989485,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":723}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988539,"byte_end":7988612,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988613,"byte_end":7988616,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988617,"byte_end":7988673,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988674,"byte_end":7988677,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988678,"byte_end":7988692,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988693,"byte_end":7988696,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988697,"byte_end":7988704,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988705,"byte_end":7988751,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988752,"byte_end":7988780,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988781,"byte_end":7988786,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988787,"byte_end":7988834,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988835,"byte_end":7988888,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988889,"byte_end":7988936,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988937,"byte_end":7988982,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7988983,"byte_end":7989011,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989012,"byte_end":7989040,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989041,"byte_end":7989044,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989045,"byte_end":7989110,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989111,"byte_end":7989114,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989115,"byte_end":7989147,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989148,"byte_end":7989196,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989197,"byte_end":7989200,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989201,"byte_end":7989239,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989240,"byte_end":7989313,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989314,"byte_end":7989317,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989318,"byte_end":7989380,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989381,"byte_end":7989384,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989385,"byte_end":7989431,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989432,"byte_end":7989448,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989449,"byte_end":7989456,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989457,"byte_end":7989464,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989655,"byte_end":7989662,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"pub fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.\n","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989549,"byte_end":7989616,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989621,"byte_end":7989643,"line_start":50,"line_end":50,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990352,"byte_end":7990360,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989801,"byte_end":7989864,"line_start":56,"line_end":56,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989869,"byte_end":7989872,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989877,"byte_end":7989947,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989952,"byte_end":7990026,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990031,"byte_end":7990102,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990107,"byte_end":7990129,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990134,"byte_end":7990137,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990142,"byte_end":7990152,"line_start":63,"line_end":63,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990157,"byte_end":7990160,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990165,"byte_end":7990232,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990237,"byte_end":7990309,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990314,"byte_end":7990340,"line_start":67,"line_end":67,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990568,"byte_end":7990577,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990483,"byte_end":7990556,"line_start":74,"line_end":74,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990739,"byte_end":7990749,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990655,"byte_end":7990727,"line_start":79,"line_end":79,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991103,"byte_end":7991111,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990828,"byte_end":7990894,"line_start":84,"line_end":84,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990899,"byte_end":7990902,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990907,"byte_end":7990979,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7990984,"byte_end":7991053,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991058,"byte_end":7991091,"line_start":88,"line_end":88,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991853,"byte_end":7991864,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991198,"byte_end":7991260,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991265,"byte_end":7991268,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991273,"byte_end":7991342,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991347,"byte_end":7991420,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991425,"byte_end":7991498,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991503,"byte_end":7991578,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991583,"byte_end":7991601,"line_start":99,"line_end":99,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991606,"byte_end":7991609,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991614,"byte_end":7991625,"line_start":101,"line_end":101,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991630,"byte_end":7991633,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991638,"byte_end":7991714,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991719,"byte_end":7991786,"line_start":104,"line_end":104,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991791,"byte_end":7991841,"line_start":105,"line_end":105,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992399,"byte_end":7992406,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7991958,"byte_end":7992020,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992025,"byte_end":7992028,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992033,"byte_end":7992103,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992108,"byte_end":7992111,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992116,"byte_end":7992147,"line_start":114,"line_end":114,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992152,"byte_end":7992155,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992160,"byte_end":7992171,"line_start":116,"line_end":116,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992176,"byte_end":7992179,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992184,"byte_end":7992260,"line_start":118,"line_end":118,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992265,"byte_end":7992332,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992337,"byte_end":7992387,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992897,"byte_end":7992904,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992476,"byte_end":7992534,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992539,"byte_end":7992542,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992547,"byte_end":7992623,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992628,"byte_end":7992649,"line_start":128,"line_end":128,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992654,"byte_end":7992657,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992662,"byte_end":7992673,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992678,"byte_end":7992681,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992686,"byte_end":7992762,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992767,"byte_end":7992830,"line_start":133,"line_end":133,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992835,"byte_end":7992885,"line_start":134,"line_end":134,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993410,"byte_end":7993413,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7992985,"byte_end":7993043,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993048,"byte_end":7993051,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993056,"byte_end":7993122,"line_start":141,"line_end":141,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993127,"byte_end":7993130,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993135,"byte_end":7993146,"line_start":143,"line_end":143,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993151,"byte_end":7993154,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993159,"byte_end":7993235,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993240,"byte_end":7993303,"line_start":146,"line_end":146,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993308,"byte_end":7993358,"line_start":147,"line_end":147,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993363,"byte_end":7993366,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993371,"byte_end":7993398,"line_start":149,"line_end":149,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993731,"byte_end":7993741,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993478,"byte_end":7993536,"line_start":154,"line_end":154,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993541,"byte_end":7993544,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993549,"byte_end":7993623,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993628,"byte_end":7993704,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993709,"byte_end":7993719,"line_start":158,"line_end":158,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7994179,"byte_end":7994183,"line_start":169,"line_end":169,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993827,"byte_end":7993897,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993902,"byte_end":7993971,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7993976,"byte_end":7994015,"line_start":165,"line_end":165,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7994020,"byte_end":7994023,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7994028,"byte_end":7994102,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7994107,"byte_end":7994167,"line_start":168,"line_end":168,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000909,"byte_end":8000918,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":804}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998366,"byte_end":7998402,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998403,"byte_end":7998406,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998407,"byte_end":7998487,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998488,"byte_end":7998568,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998569,"byte_end":7998596,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998597,"byte_end":7998600,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998601,"byte_end":7998615,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998616,"byte_end":7998619,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998620,"byte_end":7998627,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998628,"byte_end":7998656,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998657,"byte_end":7998662,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998663,"byte_end":7998710,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998711,"byte_end":7998734,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998735,"byte_end":7998768,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998769,"byte_end":7998826,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998827,"byte_end":7998830,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998831,"byte_end":7998859,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998860,"byte_end":7998905,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998906,"byte_end":7998934,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998935,"byte_end":7998938,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998939,"byte_end":7998974,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7998975,"byte_end":7999010,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999011,"byte_end":7999014,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999015,"byte_end":7999110,"line_start":45,"line_end":45,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999111,"byte_end":7999125,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999126,"byte_end":7999195,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999196,"byte_end":7999265,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999266,"byte_end":7999269,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999270,"byte_end":7999366,"line_start":50,"line_end":50,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999367,"byte_end":7999387,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999388,"byte_end":7999444,"line_start":52,"line_end":52,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999445,"byte_end":7999448,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999449,"byte_end":7999547,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999548,"byte_end":7999565,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999566,"byte_end":7999598,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999599,"byte_end":7999602,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999603,"byte_end":7999697,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999698,"byte_end":7999776,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999777,"byte_end":7999855,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999856,"byte_end":7999859,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999860,"byte_end":7999889,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999890,"byte_end":7999918,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999919,"byte_end":7999922,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999923,"byte_end":7999971,"line_start":65,"line_end":65,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999972,"byte_end":7999982,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":7999983,"byte_end":8000049,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000050,"byte_end":8000086,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000087,"byte_end":8000120,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000121,"byte_end":8000179,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000180,"byte_end":8000207,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000208,"byte_end":8000279,"line_start":72,"line_end":72,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000280,"byte_end":8000326,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000327,"byte_end":8000408,"line_start":74,"line_end":74,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000409,"byte_end":8000427,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000428,"byte_end":8000483,"line_start":76,"line_end":76,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000484,"byte_end":8000511,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000512,"byte_end":8000580,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000581,"byte_end":8000649,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000650,"byte_end":8000686,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000687,"byte_end":8000760,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000761,"byte_end":8000797,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000798,"byte_end":8000815,"line_start":83,"line_end":83,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000816,"byte_end":8000851,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000852,"byte_end":8000865,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000866,"byte_end":8000875,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000876,"byte_end":8000881,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000882,"byte_end":8000889,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000890,"byte_end":8000897,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001793,"byte_end":8001797,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000982,"byte_end":8001030,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001035,"byte_end":8001038,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001043,"byte_end":8001057,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001062,"byte_end":8001065,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001070,"byte_end":8001077,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001082,"byte_end":8001110,"line_start":100,"line_end":100,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001115,"byte_end":8001120,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001125,"byte_end":8001172,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001177,"byte_end":8001205,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001210,"byte_end":8001213,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001218,"byte_end":8001260,"line_start":105,"line_end":105,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001265,"byte_end":8001329,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001334,"byte_end":8001371,"line_start":107,"line_end":107,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001376,"byte_end":8001398,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001403,"byte_end":8001488,"line_start":109,"line_end":109,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001493,"byte_end":8001549,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001554,"byte_end":8001563,"line_start":111,"line_end":111,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001568,"byte_end":8001574,"line_start":112,"line_end":112,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001579,"byte_end":8001582,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001587,"byte_end":8001674,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001679,"byte_end":8001737,"line_start":115,"line_end":115,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001742,"byte_end":8001757,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001762,"byte_end":8001769,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001774,"byte_end":8001781,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002248,"byte_end":8002256,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001908,"byte_end":8001971,"line_start":123,"line_end":123,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001976,"byte_end":8001979,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8001984,"byte_end":8002054,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002059,"byte_end":8002133,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002138,"byte_end":8002209,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002214,"byte_end":8002236,"line_start":128,"line_end":128,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003133,"byte_end":8003143,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002379,"byte_end":8002444,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002449,"byte_end":8002452,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002457,"byte_end":8002471,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002476,"byte_end":8002479,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002800,"byte_end":8002828,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002833,"byte_end":8002838,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002843,"byte_end":8002890,"line_start":146,"line_end":146,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002895,"byte_end":8002923,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002928,"byte_end":8002931,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002936,"byte_end":8002974,"line_start":149,"line_end":149,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8002979,"byte_end":8003019,"line_start":150,"line_end":150,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003024,"byte_end":8003077,"line_start":151,"line_end":151,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003082,"byte_end":8003097,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003102,"byte_end":8003109,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003114,"byte_end":8003121,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004025,"byte_end":8004032,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub fn send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003222,"byte_end":8003296,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003301,"byte_end":8003329,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003334,"byte_end":8003337,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003342,"byte_end":8003415,"line_start":162,"line_end":162,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003420,"byte_end":8003460,"line_start":163,"line_end":163,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003465,"byte_end":8003468,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003473,"byte_end":8003487,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003492,"byte_end":8003495,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003500,"byte_end":8003513,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003518,"byte_end":8003546,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003551,"byte_end":8003598,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003603,"byte_end":8003631,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003636,"byte_end":8003639,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003644,"byte_end":8003702,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003707,"byte_end":8003710,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003715,"byte_end":8003785,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003790,"byte_end":8003837,"line_start":175,"line_end":175,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003842,"byte_end":8003845,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003850,"byte_end":8003924,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003929,"byte_end":8003959,"line_start":178,"line_end":178,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003964,"byte_end":8003969,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003974,"byte_end":8003989,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8003994,"byte_end":8004001,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004006,"byte_end":8004013,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005333,"byte_end":8005342,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004167,"byte_end":8004241,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004246,"byte_end":8004297,"line_start":188,"line_end":188,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004302,"byte_end":8004305,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004310,"byte_end":8004321,"line_start":190,"line_end":190,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004326,"byte_end":8004329,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004334,"byte_end":8004409,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004414,"byte_end":8004492,"line_start":193,"line_end":193,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004497,"byte_end":8004545,"line_start":194,"line_end":194,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004550,"byte_end":8004617,"line_start":195,"line_end":195,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004622,"byte_end":8004690,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004695,"byte_end":8004698,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004703,"byte_end":8004717,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004722,"byte_end":8004725,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004730,"byte_end":8004743,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004748,"byte_end":8004776,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004781,"byte_end":8004786,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004791,"byte_end":8004838,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004843,"byte_end":8004871,"line_start":204,"line_end":204,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004876,"byte_end":8004879,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004884,"byte_end":8004942,"line_start":206,"line_end":206,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004947,"byte_end":8004950,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8004955,"byte_end":8005027,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005032,"byte_end":8005079,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005084,"byte_end":8005087,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005092,"byte_end":8005117,"line_start":211,"line_end":211,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005122,"byte_end":8005182,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005187,"byte_end":8005267,"line_start":213,"line_end":213,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005272,"byte_end":8005277,"line_start":214,"line_end":214,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005282,"byte_end":8005297,"line_start":215,"line_end":215,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005302,"byte_end":8005309,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005314,"byte_end":8005321,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006685,"byte_end":8006694,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005469,"byte_end":8005545,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005550,"byte_end":8005626,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005631,"byte_end":8005649,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005654,"byte_end":8005657,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005662,"byte_end":8005673,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005678,"byte_end":8005681,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005686,"byte_end":8005761,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005766,"byte_end":8005844,"line_start":229,"line_end":229,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005849,"byte_end":8005897,"line_start":230,"line_end":230,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005902,"byte_end":8005969,"line_start":231,"line_end":231,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8005974,"byte_end":8006042,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006047,"byte_end":8006050,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006055,"byte_end":8006069,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006074,"byte_end":8006077,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006082,"byte_end":8006095,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006100,"byte_end":8006128,"line_start":237,"line_end":237,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006133,"byte_end":8006138,"line_start":238,"line_end":238,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006143,"byte_end":8006190,"line_start":239,"line_end":239,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006195,"byte_end":8006223,"line_start":240,"line_end":240,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006228,"byte_end":8006231,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006236,"byte_end":8006294,"line_start":242,"line_end":242,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006299,"byte_end":8006302,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006307,"byte_end":8006379,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006384,"byte_end":8006431,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006436,"byte_end":8006439,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006444,"byte_end":8006469,"line_start":247,"line_end":247,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006474,"byte_end":8006534,"line_start":248,"line_end":248,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006539,"byte_end":8006619,"line_start":249,"line_end":249,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006624,"byte_end":8006629,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006634,"byte_end":8006649,"line_start":251,"line_end":251,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006654,"byte_end":8006661,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006666,"byte_end":8006673,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006965,"byte_end":8006969,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006821,"byte_end":8006908,"line_start":258,"line_end":258,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8006913,"byte_end":8006953,"line_start":259,"line_end":259,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007593,"byte_end":8007597,"line_start":274,"line_end":274,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007073,"byte_end":8007159,"line_start":264,"line_end":264,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007164,"byte_end":8007193,"line_start":265,"line_end":265,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007198,"byte_end":8007201,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007206,"byte_end":8007217,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007222,"byte_end":8007225,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007230,"byte_end":8007305,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007310,"byte_end":8007383,"line_start":270,"line_end":270,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007388,"byte_end":8007436,"line_start":271,"line_end":271,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007441,"byte_end":8007508,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007513,"byte_end":8007581,"line_start":273,"line_end":273,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008235,"byte_end":8008239,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007705,"byte_end":8007781,"line_start":278,"line_end":278,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007786,"byte_end":8007835,"line_start":279,"line_end":279,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007840,"byte_end":8007843,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007848,"byte_end":8007859,"line_start":281,"line_end":281,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007864,"byte_end":8007867,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007872,"byte_end":8007947,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8007952,"byte_end":8008025,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008030,"byte_end":8008078,"line_start":285,"line_end":285,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008083,"byte_end":8008150,"line_start":286,"line_end":286,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008155,"byte_end":8008223,"line_start":287,"line_end":287,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008531,"byte_end":8008538,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub fn connect(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008347,"byte_end":8008419,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008424,"byte_end":8008500,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008505,"byte_end":8008519,"line_start":294,"line_end":294,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009293,"byte_end":8009306,"line_start":322,"line_end":322,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008628,"byte_end":8008692,"line_start":299,"line_end":299,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008697,"byte_end":8008700,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008705,"byte_end":8008776,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008781,"byte_end":8008793,"line_start":302,"line_end":302,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008798,"byte_end":8008801,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008806,"byte_end":8008820,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008825,"byte_end":8008828,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008833,"byte_end":8008840,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008845,"byte_end":8008873,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008878,"byte_end":8008883,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008888,"byte_end":8008935,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008940,"byte_end":8008968,"line_start":310,"line_end":310,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008973,"byte_end":8008976,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8008981,"byte_end":8009049,"line_start":312,"line_end":312,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009054,"byte_end":8009101,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009106,"byte_end":8009152,"line_start":314,"line_end":314,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009157,"byte_end":8009162,"line_start":315,"line_end":315,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009167,"byte_end":8009170,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009175,"byte_end":8009227,"line_start":317,"line_end":317,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009232,"byte_end":8009237,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009242,"byte_end":8009257,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009262,"byte_end":8009269,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009274,"byte_end":8009281,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009975,"byte_end":8009984,"line_start":347,"line_end":347,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009392,"byte_end":8009456,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009461,"byte_end":8009464,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009469,"byte_end":8009516,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009521,"byte_end":8009549,"line_start":329,"line_end":329,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009554,"byte_end":8009557,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009562,"byte_end":8009595,"line_start":331,"line_end":331,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009600,"byte_end":8009603,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009608,"byte_end":8009622,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009627,"byte_end":8009630,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009635,"byte_end":8009642,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009647,"byte_end":8009675,"line_start":336,"line_end":336,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009680,"byte_end":8009685,"line_start":337,"line_end":337,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009690,"byte_end":8009737,"line_start":338,"line_end":338,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009742,"byte_end":8009770,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009775,"byte_end":8009778,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009783,"byte_end":8009851,"line_start":341,"line_end":341,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009856,"byte_end":8009909,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009914,"byte_end":8009919,"line_start":343,"line_end":343,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009924,"byte_end":8009939,"line_start":344,"line_end":344,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009944,"byte_end":8009951,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8009956,"byte_end":8009963,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010288,"byte_end":8010309,"line_start":355,"line_end":355,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010056,"byte_end":8010125,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010130,"byte_end":8010133,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010138,"byte_end":8010212,"line_start":353,"line_end":353,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010217,"byte_end":8010276,"line_start":354,"line_end":354,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010639,"byte_end":8010656,"line_start":365,"line_end":365,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010403,"byte_end":8010472,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010477,"byte_end":8010480,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010485,"byte_end":8010532,"line_start":361,"line_end":361,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010537,"byte_end":8010573,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010578,"byte_end":8010581,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010586,"byte_end":8010627,"line_start":364,"line_end":364,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011117,"byte_end":8011137,"line_start":376,"line_end":376,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010736,"byte_end":8010804,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010809,"byte_end":8010812,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010817,"byte_end":8010887,"line_start":371,"line_end":371,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010892,"byte_end":8010966,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8010971,"byte_end":8011033,"line_start":373,"line_end":373,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011038,"byte_end":8011041,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011046,"byte_end":8011105,"line_start":375,"line_end":375,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011464,"byte_end":8011480,"line_start":386,"line_end":386,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011231,"byte_end":8011299,"line_start":380,"line_end":380,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011304,"byte_end":8011307,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011312,"byte_end":8011359,"line_start":382,"line_end":382,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011364,"byte_end":8011399,"line_start":383,"line_end":383,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011404,"byte_end":8011407,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011412,"byte_end":8011452,"line_start":385,"line_end":385,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011794,"byte_end":8011815,"line_start":394,"line_end":394,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011558,"byte_end":8011629,"line_start":390,"line_end":390,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011634,"byte_end":8011637,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011642,"byte_end":8011718,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011723,"byte_end":8011782,"line_start":393,"line_end":393,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012147,"byte_end":8012164,"line_start":404,"line_end":404,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011909,"byte_end":8011980,"line_start":398,"line_end":398,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011985,"byte_end":8011988,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8011993,"byte_end":8012040,"line_start":400,"line_end":400,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012045,"byte_end":8012081,"line_start":401,"line_end":401,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012086,"byte_end":8012089,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012094,"byte_end":8012135,"line_start":403,"line_end":403,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012854,"byte_end":8012861,"line_start":431,"line_end":431,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012244,"byte_end":8012302,"line_start":408,"line_end":408,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012307,"byte_end":8012310,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012315,"byte_end":8012391,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012396,"byte_end":8012417,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012422,"byte_end":8012425,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012430,"byte_end":8012444,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012449,"byte_end":8012452,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012457,"byte_end":8012464,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012469,"byte_end":8012497,"line_start":416,"line_end":416,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012502,"byte_end":8012507,"line_start":417,"line_end":417,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012512,"byte_end":8012559,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012564,"byte_end":8012592,"line_start":419,"line_end":419,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012597,"byte_end":8012600,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012605,"byte_end":8012663,"line_start":421,"line_end":421,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012668,"byte_end":8012696,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012701,"byte_end":8012730,"line_start":423,"line_end":423,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012735,"byte_end":8012740,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012745,"byte_end":8012748,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012753,"byte_end":8012788,"line_start":426,"line_end":426,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012793,"byte_end":8012798,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012803,"byte_end":8012818,"line_start":428,"line_end":428,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012823,"byte_end":8012830,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012835,"byte_end":8012842,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013509,"byte_end":8013512,"line_start":457,"line_end":457,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8012942,"byte_end":8013000,"line_start":435,"line_end":435,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013005,"byte_end":8013008,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013013,"byte_end":8013079,"line_start":437,"line_end":437,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013084,"byte_end":8013087,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013092,"byte_end":8013119,"line_start":439,"line_end":439,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013124,"byte_end":8013127,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013132,"byte_end":8013146,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013151,"byte_end":8013154,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013159,"byte_end":8013166,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013171,"byte_end":8013199,"line_start":444,"line_end":444,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013204,"byte_end":8013209,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013214,"byte_end":8013261,"line_start":446,"line_end":446,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013266,"byte_end":8013294,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013299,"byte_end":8013302,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013307,"byte_end":8013365,"line_start":449,"line_end":449,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013370,"byte_end":8013395,"line_start":450,"line_end":450,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013400,"byte_end":8013403,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013408,"byte_end":8013443,"line_start":452,"line_end":452,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013448,"byte_end":8013453,"line_start":453,"line_end":453,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013458,"byte_end":8013473,"line_start":454,"line_end":454,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013478,"byte_end":8013485,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013490,"byte_end":8013497,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014056,"byte_end":8014073,"line_start":469,"line_end":469,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013577,"byte_end":8013635,"line_start":461,"line_end":461,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013640,"byte_end":8013643,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013648,"byte_end":8013722,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013727,"byte_end":8013800,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013805,"byte_end":8013877,"line_start":465,"line_end":465,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013882,"byte_end":8013952,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8013957,"byte_end":8013995,"line_start":467,"line_end":467,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014000,"byte_end":8014044,"line_start":468,"line_end":468,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014580,"byte_end":8014597,"line_start":479,"line_end":479,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014215,"byte_end":8014275,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014280,"byte_end":8014283,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014288,"byte_end":8014362,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014367,"byte_end":8014440,"line_start":476,"line_end":476,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014445,"byte_end":8014519,"line_start":477,"line_end":477,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014524,"byte_end":8014568,"line_start":478,"line_end":478,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015000,"byte_end":8015018,"line_start":490,"line_end":490,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014733,"byte_end":8014792,"line_start":483,"line_end":483,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014797,"byte_end":8014800,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014805,"byte_end":8014852,"line_start":485,"line_end":485,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014857,"byte_end":8014889,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014894,"byte_end":8014897,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014902,"byte_end":8014939,"line_start":488,"line_end":488,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8014944,"byte_end":8014988,"line_start":489,"line_end":489,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015430,"byte_end":8015448,"line_start":501,"line_end":501,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015161,"byte_end":8015222,"line_start":494,"line_end":494,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015227,"byte_end":8015230,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015235,"byte_end":8015282,"line_start":496,"line_end":496,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015287,"byte_end":8015319,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015324,"byte_end":8015327,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015332,"byte_end":8015369,"line_start":499,"line_end":499,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015374,"byte_end":8015418,"line_start":500,"line_end":500,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015838,"byte_end":8015848,"line_start":510,"line_end":510,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015585,"byte_end":8015643,"line_start":505,"line_end":505,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015648,"byte_end":8015651,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015656,"byte_end":8015730,"line_start":507,"line_end":507,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015735,"byte_end":8015811,"line_start":508,"line_end":508,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015816,"byte_end":8015826,"line_start":509,"line_end":509,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018338,"byte_end":8018350,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::net::uds::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":871}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018299,"byte_end":8018326,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018491,"byte_end":8018495,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018420,"byte_end":8018479,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018991,"byte_end":8018999,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> UnixDatagram","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018638,"byte_end":8018707,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018712,"byte_end":8018715,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix datagram from the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018720,"byte_end":8018793,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018798,"byte_end":8018872,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying datagram; ; it is left up to the user to set it","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018877,"byte_end":8018949,"line_start":25,"line_end":25,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018954,"byte_end":8018979,"line_start":26,"line_end":26,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8019192,"byte_end":8019199,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8019131,"byte_end":8019180,"line_start":33,"line_end":33,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8019377,"byte_end":8019384,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a Unix Datagram socket which is not bound to any address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8019296,"byte_end":8019365,"line_start":38,"line_end":38,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8019554,"byte_end":8019558,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.\n","sig":null,"attributes":[{"value":"/ Create an unnamed pair of connected sockets.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8019494,"byte_end":8019542,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8019868,"byte_end":8019878,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8019817,"byte_end":8019856,"line_start":53,"line_end":53,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020112,"byte_end":8020121,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8019982,"byte_end":8020028,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020033,"byte_end":8020036,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020041,"byte_end":8020100,"line_start":60,"line_end":60,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020382,"byte_end":8020391,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, sys::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020224,"byte_end":8020258,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020263,"byte_end":8020266,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020271,"byte_end":8020340,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ whence the data came.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020345,"byte_end":8020370,"line_start":68,"line_end":68,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020665,"byte_end":8020669,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020557,"byte_end":8020591,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020596,"byte_end":8020599,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020604,"byte_end":8020653,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020908,"byte_end":8020915,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub fn send_to<P: AsRef<Path>>(&Self, &[u8], P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020777,"byte_end":8020831,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020836,"byte_end":8020839,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8020844,"byte_end":8020896,"line_start":83,"line_end":83,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021340,"byte_end":8021344,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021053,"byte_end":8021103,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021108,"byte_end":8021111,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The peer address may be set by the `connect` method, and this method","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021116,"byte_end":8021188,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ will return an error if the socket has not already been connected.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021193,"byte_end":8021263,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021268,"byte_end":8021271,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021276,"byte_end":8021328,"line_start":93,"line_end":93,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021507,"byte_end":8021517,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021448,"byte_end":8021495,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021883,"byte_end":8021891,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021603,"byte_end":8021668,"line_start":103,"line_end":103,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021673,"byte_end":8021676,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021681,"byte_end":8021749,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021754,"byte_end":8021824,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021829,"byte_end":8021871,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":928},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8023558,"byte_end":8023570,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::net::uds::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":929}],"decl_id":null,"docs":" A non-blocking Unix domain socket server.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix domain socket server.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8023501,"byte_end":8023546,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8023715,"byte_end":8023719,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8023640,"byte_end":8023703,"line_start":16,"line_end":16,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024213,"byte_end":8024221,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> UnixListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` from a standard `net::UnixListener`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` from a standard `net::UnixListener`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8023862,"byte_end":8023931,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8023936,"byte_end":8023939,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix listener from the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8023944,"byte_end":8024017,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024022,"byte_end":8024096,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024101,"byte_end":8024174,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024179,"byte_end":8024201,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024536,"byte_end":8024542,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"pub fn accept(&Self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024357,"byte_end":8024412,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024417,"byte_end":8024420,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The call is responsible for ensuring that the listening socket is in","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024425,"byte_end":8024497,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024502,"byte_end":8024524,"line_start":36,"line_end":36,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024717,"byte_end":8024727,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024651,"byte_end":8024705,"line_start":41,"line_end":41,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024890,"byte_end":8024900,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8024831,"byte_end":8024878,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8026590,"byte_end":8026600,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::net::uds::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" A non-blocking Unix stream socket.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix stream socket.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8026540,"byte_end":8026578,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8026721,"byte_end":8026728,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"pub fn connect<P: AsRef<Path>>(P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.\n","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8026666,"byte_end":8026709,"line_start":17,"line_end":17,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027423,"byte_end":8027431,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> UnixStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixStream` from a standard `net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixStream` from a standard `net::UnixStream`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8026868,"byte_end":8026933,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8026938,"byte_end":8026941,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix stream from the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8026946,"byte_end":8027017,"line_start":24,"line_end":24,"column_start":5,"column_end":76}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027022,"byte_end":8027096,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027101,"byte_end":8027172,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027177,"byte_end":8027199,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027204,"byte_end":8027207,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027212,"byte_end":8027222,"line_start":29,"line_end":29,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027227,"byte_end":8027230,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The Unix stream here will not have `connect` called on it, so it","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027235,"byte_end":8027303,"line_start":31,"line_end":31,"column_start":5,"column_end":73}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027308,"byte_end":8027380,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027385,"byte_end":8027411,"line_start":33,"line_end":33,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027695,"byte_end":8027699,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027557,"byte_end":8027606,"line_start":40,"line_end":40,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027611,"byte_end":8027614,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixStream`s which are connected to each other.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027619,"byte_end":8027683,"line_start":42,"line_end":42,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027981,"byte_end":8027991,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8027901,"byte_end":8027969,"line_start":49,"line_end":49,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028174,"byte_end":8028183,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028093,"byte_end":8028162,"line_start":54,"line_end":54,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028343,"byte_end":8028353,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028284,"byte_end":8028331,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028720,"byte_end":8028728,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028439,"byte_end":8028505,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028510,"byte_end":8028513,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028518,"byte_end":8028586,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028591,"byte_end":8028661,"line_start":67,"line_end":67,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028666,"byte_end":8028708,"line_start":68,"line_end":68,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":169},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":2113,"byte_end":2117,"line_start":87,"line_end":87,"column_start":9,"column_end":13},"name":"unix","qualname":"::unix","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":1626}],"decl_id":null,"docs":" Unix only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"os-util\"))","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":2004,"byte_end":2042,"line_start":85,"line_end":85,"column_start":1,"column_end":39}},{"value":"/ Unix only extensions.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":2124,"byte_end":2149,"line_start":88,"line_end":88,"column_start":5,"column_end":30}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":14184,"byte_end":14192,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":16194,"byte_end":16202,"line_start":94,"line_end":94,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":16345,"byte_end":16353,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":16481,"byte_end":16489,"line_start":110,"line_end":110,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25947,"byte_end":25951,"line_start":211,"line_end":211,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":30021,"byte_end":30025,"line_start":316,"line_end":316,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31473,"byte_end":31477,"line_start":359,"line_end":359,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31587,"byte_end":31591,"line_start":365,"line_end":365,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31715,"byte_end":31723,"line_start":371,"line_end":371,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":41019,"byte_end":41027,"line_start":618,"line_end":618,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/selector/epoll.rs","byte_start":7932654,"byte_end":7932662,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/selector/epoll.rs","byte_start":7935441,"byte_end":7935449,"line_start":99,"line_end":99,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/selector/epoll.rs","byte_start":7935577,"byte_end":7935585,"line_start":107,"line_end":107,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/selector/epoll.rs","byte_start":7935662,"byte_end":7935670,"line_start":113,"line_end":113,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941812,"byte_end":7941820,"line_start":86,"line_end":86,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/waker.rs","byte_start":7943035,"byte_end":7943040,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959579,"byte_end":7959589,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7960378,"byte_end":7960388,"line_start":51,"line_end":51,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7962171,"byte_end":7962181,"line_start":102,"line_end":102,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7962595,"byte_end":7962607,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/mod.rs","byte_start":7927328,"byte_end":7927341,"line_start":47,"line_end":47,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51735,"byte_end":51740,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52759,"byte_end":52764,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":59414,"byte_end":59419,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":60128,"byte_end":60140,"line_start":209,"line_end":209,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62313,"byte_end":62319,"line_start":79,"line_end":79,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":65237,"byte_end":65241,"line_start":199,"line_end":199,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":65717,"byte_end":65723,"line_start":222,"line_end":222,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69748,"byte_end":69751,"line_start":113,"line_end":113,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7970530,"byte_end":7970538,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7971838,"byte_end":7971846,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7972113,"byte_end":7972121,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7972250,"byte_end":7972258,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7974090,"byte_end":7974098,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7974403,"byte_end":7974413,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7976729,"byte_end":7976739,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978769,"byte_end":7978780,"line_start":41,"line_end":41,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7982053,"byte_end":7982064,"line_start":126,"line_end":126,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7982620,"byte_end":7982631,"line_start":150,"line_end":150,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7982764,"byte_end":7982775,"line_start":157,"line_end":157,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7982899,"byte_end":7982910,"line_start":164,"line_end":164,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7983020,"byte_end":7983031,"line_start":171,"line_end":171,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984711,"byte_end":7984720,"line_start":25,"line_end":25,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986679,"byte_end":7986688,"line_start":91,"line_end":91,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986790,"byte_end":7986799,"line_start":98,"line_end":98,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986895,"byte_end":7986904,"line_start":105,"line_end":105,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989533,"byte_end":7989542,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7994282,"byte_end":7994291,"line_start":174,"line_end":174,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7994903,"byte_end":7994912,"line_start":194,"line_end":194,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7995725,"byte_end":7995734,"line_start":222,"line_end":222,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7996290,"byte_end":7996299,"line_start":246,"line_end":246,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7996432,"byte_end":7996441,"line_start":253,"line_end":253,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7996565,"byte_end":7996574,"line_start":260,"line_end":260,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7996684,"byte_end":7996693,"line_start":267,"line_end":267,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000966,"byte_end":8000975,"line_start":94,"line_end":94,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015955,"byte_end":8015964,"line_start":515,"line_end":515,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8016520,"byte_end":8016529,"line_start":539,"line_end":539,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8016662,"byte_end":8016671,"line_start":546,"line_end":546,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8016795,"byte_end":8016804,"line_start":553,"line_end":553,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8016914,"byte_end":8016923,"line_start":560,"line_end":560,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018401,"byte_end":8018413,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021999,"byte_end":8022011,"line_start":113,"line_end":113,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8022567,"byte_end":8022579,"line_start":137,"line_end":137,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8022699,"byte_end":8022711,"line_start":143,"line_end":143,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8022822,"byte_end":8022834,"line_start":149,"line_end":149,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8022931,"byte_end":8022943,"line_start":155,"line_end":155,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8023621,"byte_end":8023633,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8025007,"byte_end":8025019,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8025575,"byte_end":8025587,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8025707,"byte_end":8025719,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8025830,"byte_end":8025842,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8025939,"byte_end":8025951,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8026649,"byte_end":8026659,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028827,"byte_end":8028837,"line_start":74,"line_end":74,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8029450,"byte_end":8029460,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8030274,"byte_end":8030284,"line_start":122,"line_end":122,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8030840,"byte_end":8030850,"line_start":146,"line_end":146,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8030970,"byte_end":8030980,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8031091,"byte_end":8031101,"line_start":158,"line_end":158,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8031198,"byte_end":8031208,"line_start":164,"line_end":164,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1799,"byte_end":1804,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":88}},{"kind":"Mod","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/lib.rs","byte_start":1850,"byte_end":1853,"line_start":75,"line_end":75,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":614}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":14184,"byte_end":14192,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":16194,"byte_end":16202,"line_start":94,"line_end":94,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":16345,"byte_end":16353,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":2123}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/interest.rs","byte_start":16481,"byte_end":16489,"line_start":110,"line_end":110,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":25947,"byte_end":25951,"line_start":211,"line_end":211,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":30021,"byte_end":30025,"line_start":316,"line_end":316,"column_start":10,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31473,"byte_end":31477,"line_start":359,"line_end":359,"column_start":18,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":50},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31587,"byte_end":31591,"line_start":365,"line_end":365,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":50},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":31715,"byte_end":31723,"line_start":371,"line_end":371,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/poll.rs","byte_start":41019,"byte_end":41027,"line_start":618,"line_end":618,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":52},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/selector/epoll.rs","byte_start":7932654,"byte_end":7932662,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/selector/epoll.rs","byte_start":7935441,"byte_end":7935449,"line_start":99,"line_end":99,"column_start":10,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/selector/epoll.rs","byte_start":7935577,"byte_end":7935585,"line_start":107,"line_end":107,"column_start":18,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":320},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/selector/epoll.rs","byte_start":7935662,"byte_end":7935670,"line_start":113,"line_end":113,"column_start":15,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/sourcefd.rs","byte_start":7941812,"byte_end":7941820,"line_start":86,"line_end":86,"column_start":28,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":332},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/waker.rs","byte_start":7943035,"byte_end":7943040,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7959579,"byte_end":7959589,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7960378,"byte_end":7960388,"line_start":51,"line_end":51,"column_start":10,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7962171,"byte_end":7962181,"line_start":102,"line_end":102,"column_start":21,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/uds/socketaddr.rs","byte_start":7962595,"byte_end":7962607,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/sys/unix/mod.rs","byte_start":7927328,"byte_end":7927341,"line_start":47,"line_end":47,"column_start":14,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/waker.rs","byte_start":51735,"byte_end":51740,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":52759,"byte_end":52764,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":59414,"byte_end":59419,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/event.rs","byte_start":60128,"byte_end":60140,"line_start":209,"line_end":209,"column_start":37,"column_end":49},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":109},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":62313,"byte_end":62319,"line_start":79,"line_end":79,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":65237,"byte_end":65241,"line_start":199,"line_end":199,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":551},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/events.rs","byte_start":65717,"byte_end":65723,"line_start":222,"line_end":222,"column_start":21,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":120},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/event/source.rs","byte_start":69748,"byte_end":69751,"line_start":113,"line_end":113,"column_start":20,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7970530,"byte_end":7970538,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7971838,"byte_end":7971846,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7972113,"byte_end":7972121,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7972250,"byte_end":7972258,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":579},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7974090,"byte_end":7974098,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7974403,"byte_end":7974413,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/io_source.rs","byte_start":7976729,"byte_end":7976739,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":615},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7978769,"byte_end":7978780,"line_start":41,"line_end":41,"column_start":6,"column_end":17},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7982053,"byte_end":7982064,"line_start":126,"line_end":126,"column_start":24,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":642},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7982620,"byte_end":7982631,"line_start":150,"line_end":150,"column_start":21,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":642},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7982764,"byte_end":7982775,"line_start":157,"line_end":157,"column_start":20,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":642},"to":{"krate":1,"index":8606}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7982899,"byte_end":7982910,"line_start":164,"line_end":164,"column_start":18,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":642},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/listener.rs","byte_start":7983020,"byte_end":7983031,"line_start":171,"line_end":171,"column_start":20,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":642},"to":{"krate":1,"index":8604}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7984711,"byte_end":7984720,"line_start":25,"line_end":25,"column_start":6,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986679,"byte_end":7986688,"line_start":91,"line_end":91,"column_start":15,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":779},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986790,"byte_end":7986799,"line_start":98,"line_end":98,"column_start":18,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":779},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/socket.rs","byte_start":7986895,"byte_end":7986904,"line_start":105,"line_end":105,"column_start":20,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":779},"to":{"krate":1,"index":8604}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7989533,"byte_end":7989542,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7994282,"byte_end":7994291,"line_start":174,"line_end":174,"column_start":15,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7994903,"byte_end":7994912,"line_start":194,"line_end":194,"column_start":16,"column_end":25},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":3052}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7995725,"byte_end":7995734,"line_start":222,"line_end":222,"column_start":24,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":722},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7996290,"byte_end":7996299,"line_start":246,"line_end":246,"column_start":21,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7996432,"byte_end":7996441,"line_start":253,"line_end":253,"column_start":20,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":8606}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7996565,"byte_end":7996574,"line_start":260,"line_end":260,"column_start":18,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/tcp/stream.rs","byte_start":7996684,"byte_end":7996693,"line_start":267,"line_end":267,"column_start":20,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":8604}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8000966,"byte_end":8000975,"line_start":94,"line_end":94,"column_start":6,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8015955,"byte_end":8015964,"line_start":515,"line_end":515,"column_start":24,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":803},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8016520,"byte_end":8016529,"line_start":539,"line_end":539,"column_start":21,"column_end":30},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":803},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8016662,"byte_end":8016671,"line_start":546,"line_end":546,"column_start":20,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":8606}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8016795,"byte_end":8016804,"line_start":553,"line_end":553,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/udp.rs","byte_start":8016914,"byte_end":8016923,"line_start":560,"line_end":560,"column_start":20,"column_end":29},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":8604}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8018401,"byte_end":8018413,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8021999,"byte_end":8022011,"line_start":113,"line_end":113,"column_start":24,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":870},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8022567,"byte_end":8022579,"line_start":137,"line_end":137,"column_start":21,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8022699,"byte_end":8022711,"line_start":143,"line_end":143,"column_start":20,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":870},"to":{"krate":1,"index":8606}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8022822,"byte_end":8022834,"line_start":149,"line_end":149,"column_start":18,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":870},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/datagram.rs","byte_start":8022931,"byte_end":8022943,"line_start":155,"line_end":155,"column_start":20,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":870},"to":{"krate":1,"index":8604}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8023621,"byte_end":8023633,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8025007,"byte_end":8025019,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":928},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8025575,"byte_end":8025587,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":928},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8025707,"byte_end":8025719,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":928},"to":{"krate":1,"index":8606}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8025830,"byte_end":8025842,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":928},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/listener.rs","byte_start":8025939,"byte_end":8025951,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":928},"to":{"krate":1,"index":8604}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8026649,"byte_end":8026659,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8028827,"byte_end":8028837,"line_start":74,"line_end":74,"column_start":15,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8029450,"byte_end":8029460,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":3052}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8030274,"byte_end":8030284,"line_start":122,"line_end":122,"column_start":24,"column_end":34},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":973},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8030840,"byte_end":8030850,"line_start":146,"line_end":146,"column_start":21,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8030970,"byte_end":8030980,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":8606}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8031091,"byte_end":8031101,"line_start":158,"line_end":158,"column_start":18,"column_end":28},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.4/src/net/uds/stream.rs","byte_start":8031198,"byte_end":8031208,"line_start":164,"line_end":164,"column_start":20,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":8604}}]}