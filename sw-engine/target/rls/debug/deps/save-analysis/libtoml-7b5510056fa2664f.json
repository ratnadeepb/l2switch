{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7","program":"/home/ratnadeepb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","toml","--edition=2018","/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=7b5510056fa2664f","-C","extra-filename=-7b5510056fa2664f","--out-dir","/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps","-L","dependency=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps","--extern","serde=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libserde-fd75aa626007d5b4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ratnadeepb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libtoml-7b5510056fa2664f.rmeta"},"prelude":{"crate_id":{"name":"toml","disambiguator":[15615823379213755734,8398513297549214831]},"crate_root":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src","external_crates":[{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","num":18,"id":{"name":"serde","disambiguator":[17847452624709845474,9303493038316871125]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","num":19,"id":{"name":"serde_derive","disambiguator":[3530773092028224691,18237945612401244675]}}],"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":0,"byte_end":4810,"line_start":1,"line_end":181,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1579},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21711,"byte_end":21719,"line_start":17,"line_end":17,"column_start":27,"column_end":35},"alias_span":null,"name":"Datetime","value":"","parent":{"krate":0,"index":162}},{"kind":"Use","ref_id":{"krate":0,"index":1589},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21721,"byte_end":21739,"line_start":17,"line_end":17,"column_start":37,"column_end":55},"alias_span":null,"name":"DatetimeParseError","value":"","parent":{"krate":0,"index":162}},{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21763,"byte_end":21766,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":162}},{"kind":"Use","ref_id":{"krate":0,"index":1477},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4365,"byte_end":4370,"line_start":159,"line_end":159,"column_start":23,"column_end":28},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":548},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4439,"byte_end":4448,"line_start":164,"line_end":164,"column_start":22,"column_end":31},"alias_span":null,"name":"to_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4450,"byte_end":4466,"line_start":164,"line_end":164,"column_start":33,"column_end":49},"alias_span":null,"name":"to_string_pretty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":545},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4468,"byte_end":4474,"line_start":164,"line_end":164,"column_start":51,"column_end":57},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4476,"byte_end":4486,"line_start":164,"line_end":164,"column_start":59,"column_end":69},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4539,"byte_end":4549,"line_start":167,"line_end":167,"column_start":21,"column_end":31},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":938},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4551,"byte_end":4559,"line_start":167,"line_end":167,"column_start":33,"column_end":41},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":941},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4561,"byte_end":4573,"line_start":167,"line_end":167,"column_start":43,"column_end":55},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1191},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/macros.rs","byte_start":216564,"byte_end":216575,"line_start":1,"line_end":1,"column_start":21,"column_end":32},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":1347}},{"kind":"Use","ref_id":{"krate":18,"index":1407},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/macros.rs","byte_start":216577,"byte_end":216593,"line_start":1,"line_end":1,"column_start":34,"column_end":50},"alias_span":null,"name":"IntoDeserializer","value":"","parent":{"krate":0,"index":1347}},{"kind":"Use","ref_id":{"krate":0,"index":2258},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4676,"byte_end":4683,"line_start":175,"line_end":175,"column_start":25,"column_end":32},"alias_span":null,"name":"Spanned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":0,"byte_end":4810,"line_start":1,"line_end":181,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":162},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":535},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1347},{"krate":0,"index":1361},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424}],"decl_id":null,"docs":" A [TOML]-parsing library","sig":null,"attributes":[{"value":"/ A [TOML]-parsing library","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":0,"byte_end":28,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":29,"byte_end":32,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library implements a [TOML] v0.5.0 compatible parser,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":33,"byte_end":95,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"/ primarily supporting the [`serde`] library for encoding/decoding","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":96,"byte_end":164,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ various types in Rust.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":165,"byte_end":191,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":192,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ TOML itself is a simple, ergonomic, and readable configuration format:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":196,"byte_end":270,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":271,"byte_end":274,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":275,"byte_end":286,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ [package]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":287,"byte_end":300,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/ name = \"toml\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":301,"byte_end":318,"line_start":11,"line_end":11,"column_start":1,"column_end":18}},{"value":"/ version = \"0.4.2\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":319,"byte_end":340,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/ authors = [\"Alex Crichton <alex@alexcrichton.com>\"]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":341,"byte_end":396,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":397,"byte_end":400,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [dependencies]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":401,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ serde = \"1.0\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":420,"byte_end":437,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":438,"byte_end":445,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":446,"byte_end":449,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The TOML format tends to be relatively common throughout the Rust community","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":450,"byte_end":529,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ for configuration, notably being used by [Cargo], Rust's package manager.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":530,"byte_end":607,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":608,"byte_end":611,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## TOML values","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":612,"byte_end":630,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":631,"byte_end":634,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A value in TOML is represented with the [`Value`] enum in this crate:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":635,"byte_end":708,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":709,"byte_end":712,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":713,"byte_end":731,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ pub enum Value {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":732,"byte_end":752,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/     String(String),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":753,"byte_end":776,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/     Integer(i64),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":777,"byte_end":798,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     Float(f64),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":799,"byte_end":818,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     Boolean(bool),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":819,"byte_end":841,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/     Datetime(Datetime),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":842,"byte_end":869,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/     Array(Array),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":870,"byte_end":891,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     Table(Table),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":892,"byte_end":913,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":914,"byte_end":919,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":920,"byte_end":927,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":928,"byte_end":931,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ TOML is similar to JSON with the notable addition of a [`Datetime`]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":932,"byte_end":1003,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ type. In general, TOML and JSON are interchangeable in terms of","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1004,"byte_end":1071,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ formats.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1072,"byte_end":1084,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1085,"byte_end":1088,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Parsing TOML","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1089,"byte_end":1108,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1109,"byte_end":1112,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The easiest way to parse a TOML document is via the [`Value`] type:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1113,"byte_end":1184,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1185,"byte_end":1188,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1189,"byte_end":1200,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ use toml::Value;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1201,"byte_end":1221,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1222,"byte_end":1225,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let value = \"foo = 'bar'\".parse::<Value>().unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1226,"byte_end":1282,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1283,"byte_end":1286,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(value[\"foo\"].as_str(), Some(\"bar\"));","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1287,"byte_end":1338,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1339,"byte_end":1346,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1347,"byte_end":1350,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The [`Value`] type implements a number of convenience methods and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1351,"byte_end":1420,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ traits; the example above uses [`FromStr`] to parse a [`str`] into a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1421,"byte_end":1493,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ [`Value`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1494,"byte_end":1508,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1509,"byte_end":1512,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Deserialization and Serialization","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1513,"byte_end":1553,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1554,"byte_end":1557,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This crate supports [`serde`] 1.0 with a number of","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1558,"byte_end":1612,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"/ implementations of the `Deserialize`, `Serialize`, `Deserializer`, and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1613,"byte_end":1687,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ `Serializer` traits. Namely, you'll find:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1688,"byte_end":1733,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1734,"byte_end":1737,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * `Deserialize for Value`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1738,"byte_end":1767,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/ * `Serialize for Value`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1768,"byte_end":1795,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ * `Deserialize for Datetime`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1796,"byte_end":1828,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ * `Serialize for Datetime`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1829,"byte_end":1859,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/ * `Deserializer for de::Deserializer`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1860,"byte_end":1901,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ * `Serializer for ser::Serializer`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1902,"byte_end":1940,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ * `Deserializer for Value`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1941,"byte_end":1971,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1972,"byte_end":1975,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This means that you can use Serde to deserialize/serialize the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":1976,"byte_end":2042,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`Value`] type as well as the [`Datetime`] type in this crate. You can also","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2043,"byte_end":2122,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ use the [`Deserializer`], [`Serializer`], or [`Value`] type itself to act as","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2123,"byte_end":2203,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ a deserializer/serializer for arbitrary types.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2204,"byte_end":2254,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2255,"byte_end":2258,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ An example of deserializing with TOML is:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2259,"byte_end":2304,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2305,"byte_end":2308,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2309,"byte_end":2320,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2321,"byte_end":2355,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2356,"byte_end":2359,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2360,"byte_end":2386,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2387,"byte_end":2406,"line_start":83,"line_end":83,"column_start":1,"column_end":20}},{"value":"/     ip: String,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2407,"byte_end":2426,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/     port: Option<u16>,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2427,"byte_end":2453,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/     keys: Keys,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2454,"byte_end":2473,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2474,"byte_end":2479,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2480,"byte_end":2483,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2484,"byte_end":2510,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/ struct Keys {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2511,"byte_end":2528,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/     github: String,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2529,"byte_end":2552,"line_start":91,"line_end":91,"column_start":1,"column_end":24}},{"value":"/     travis: Option<String>,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2553,"byte_end":2584,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2585,"byte_end":2590,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2591,"byte_end":2594,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2595,"byte_end":2610,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/     let config: Config = toml::from_str(r#\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2611,"byte_end":2658,"line_start":96,"line_end":96,"column_start":1,"column_end":48}},{"value":"/         ip = '127.0.0.1'","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2659,"byte_end":2687,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2688,"byte_end":2691,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/         [keys]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2692,"byte_end":2710,"line_start":99,"line_end":99,"column_start":1,"column_end":19}},{"value":"/         github = 'xxxxxxxxxxxxxxxxx'","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2711,"byte_end":2751,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/         travis = 'yyyyyyyyyyyyyyyyy'","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2752,"byte_end":2792,"line_start":101,"line_end":101,"column_start":1,"column_end":41}},{"value":"/     \"#).unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2793,"byte_end":2814,"line_start":102,"line_end":102,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2815,"byte_end":2818,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(config.ip, \"127.0.0.1\");","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2819,"byte_end":2862,"line_start":104,"line_end":104,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(config.port, None);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2863,"byte_end":2901,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(config.keys.github, \"xxxxxxxxxxxxxxxxx\");","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2902,"byte_end":2962,"line_start":106,"line_end":106,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(config.keys.travis.as_ref().unwrap(), \"yyyyyyyyyyyyyyyyy\");","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":2963,"byte_end":3041,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3042,"byte_end":3047,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3048,"byte_end":3055,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3056,"byte_end":3059,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ You can serialize types in a similar fashion:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3060,"byte_end":3109,"line_start":111,"line_end":111,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3110,"byte_end":3113,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3114,"byte_end":3125,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::Serialize;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3126,"byte_end":3158,"line_start":114,"line_end":114,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3159,"byte_end":3162,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3163,"byte_end":3187,"line_start":116,"line_end":116,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3188,"byte_end":3207,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/     ip: String,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3208,"byte_end":3227,"line_start":118,"line_end":118,"column_start":1,"column_end":20}},{"value":"/     port: Option<u16>,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3228,"byte_end":3254,"line_start":119,"line_end":119,"column_start":1,"column_end":27}},{"value":"/     keys: Keys,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3255,"byte_end":3274,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3275,"byte_end":3280,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3281,"byte_end":3284,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3285,"byte_end":3309,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/ struct Keys {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3310,"byte_end":3327,"line_start":124,"line_end":124,"column_start":1,"column_end":18}},{"value":"/     github: String,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3328,"byte_end":3351,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/     travis: Option<String>,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3352,"byte_end":3383,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3384,"byte_end":3389,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3390,"byte_end":3393,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3394,"byte_end":3409,"line_start":129,"line_end":129,"column_start":1,"column_end":16}},{"value":"/     let config = Config {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3410,"byte_end":3439,"line_start":130,"line_end":130,"column_start":1,"column_end":30}},{"value":"/         ip: \"127.0.0.1\".to_string(),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3440,"byte_end":3480,"line_start":131,"line_end":131,"column_start":1,"column_end":41}},{"value":"/         port: None,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3481,"byte_end":3504,"line_start":132,"line_end":132,"column_start":1,"column_end":24}},{"value":"/         keys: Keys {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3505,"byte_end":3529,"line_start":133,"line_end":133,"column_start":1,"column_end":25}},{"value":"/             github: \"xxxxxxxxxxxxxxxxx\".to_string(),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3530,"byte_end":3586,"line_start":134,"line_end":134,"column_start":1,"column_end":57}},{"value":"/             travis: Some(\"yyyyyyyyyyyyyyyyy\".to_string()),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3587,"byte_end":3649,"line_start":135,"line_end":135,"column_start":1,"column_end":63}},{"value":"/         },","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3650,"byte_end":3664,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/     };","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3665,"byte_end":3675,"line_start":137,"line_end":137,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3676,"byte_end":3679,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3680,"byte_end":3733,"line_start":139,"line_end":139,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3734,"byte_end":3739,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3740,"byte_end":3747,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3748,"byte_end":3751,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [TOML]: https://github.com/toml-lang/toml","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3752,"byte_end":3797,"line_start":143,"line_end":143,"column_start":1,"column_end":46}},{"value":"/ [Cargo]: https://crates.io/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3798,"byte_end":3829,"line_start":144,"line_end":144,"column_start":1,"column_end":32}},{"value":"/ [`serde`]: https://serde.rs/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3830,"byte_end":3862,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"deny(missing_docs)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3916,"byte_end":3938,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":3939,"byte_end":3965,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4272,"byte_end":4295,"line_start":154,"line_end":154,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":2279},{"krate":0,"index":12},{"krate":0,"index":2281},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":89},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":125},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":1425},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":135},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":1436},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":1447},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":1455},{"krate":0,"index":1460},{"krate":0,"index":1463},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":1466},{"krate":0,"index":1471},{"krate":0,"index":1474}],"decl_id":null,"docs":" A map of String to toml::Value.","sig":null,"attributes":[{"value":"/ A map of String to toml::Value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":5151,"byte_end":5186,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":5187,"byte_end":5190,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ By default the map is backed by a [`BTreeMap`]. Enable the `preserve_order`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":5191,"byte_end":5270,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ feature of toml-rs to use [`LinkedHashMap`] instead.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":5271,"byte_end":5327,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":5328,"byte_end":5331,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":5332,"byte_end":5412,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`LinkedHashMap`]: https://docs.rs/linked-hash-map/*/linked_hash_map/struct.LinkedHashMap.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":5413,"byte_end":5511,"line_start":15,"line_end":15,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":5882,"byte_end":5885,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":" Represents a TOML key/value type.\n","sig":null,"attributes":[{"value":"/ Represents a TOML key/value type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":5833,"byte_end":5870,"line_start":31,"line_end":31,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6153,"byte_end":6156,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Map<String, Value>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty Map.\n","sig":null,"attributes":[{"value":"/ Makes a new empty Map.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6101,"byte_end":6127,"line_start":42,"line_end":42,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6132,"byte_end":6141,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6365,"byte_end":6378,"line_start":53,"line_end":53,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Map<String, Value>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty Map with the given initial capacity.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"preserve_order\"))","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6237,"byte_end":6276,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ Makes a new empty Map with the given initial capacity.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6281,"byte_end":6339,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6344,"byte_end":6353,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6860,"byte_end":6865,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"clear","qualname":"<Map<String, Value>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the map, removing all values.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6794,"byte_end":6834,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6839,"byte_end":6848,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7164,"byte_end":7167,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"get","qualname":"<Map<String, Value>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&Value> where String: Borrow<Q>,\nQ: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6915,"byte_end":6977,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6982,"byte_end":6985,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6990,"byte_end":7066,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7071,"byte_end":7138,"line_start":79,"line_end":79,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7143,"byte_end":7152,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7575,"byte_end":7587,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Map<String, Value>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where String: Borrow<Q>,\nQ: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7321,"byte_end":7388,"line_start":89,"line_end":89,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7393,"byte_end":7396,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7401,"byte_end":7477,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7482,"byte_end":7549,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7554,"byte_end":7563,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7997,"byte_end":8004,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<String, Value>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut Value> where\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7740,"byte_end":7810,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7815,"byte_end":7818,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7823,"byte_end":7899,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7904,"byte_end":7971,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":7976,"byte_end":7985,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8536,"byte_end":8542,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"insert","qualname":"<Map<String, Value>>::insert","value":"pub fn insert(&mut Self, String, Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8170,"byte_end":8212,"line_start":115,"line_end":115,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8217,"byte_end":8220,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8225,"byte_end":8290,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8295,"byte_end":8298,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8303,"byte_end":8378,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8383,"byte_end":8454,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8459,"byte_end":8510,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8515,"byte_end":8524,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8930,"byte_end":8936,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map<String, Value>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<Value> where\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8635,"byte_end":8708,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8713,"byte_end":8743,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8748,"byte_end":8751,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8756,"byte_end":8832,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8837,"byte_end":8904,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":8909,"byte_end":8918,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":9198,"byte_end":9203,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"entry","qualname":"<Map<String, Value>>::entry","value":"pub fn entry<S>(&mut Self, S) -> Entry where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place\n manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":9096,"byte_end":9164,"line_start":141,"line_end":141,"column_start":5,"column_end":73}},{"value":"/ manipulation.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":9169,"byte_end":9186,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":9786,"byte_end":9789,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"len","qualname":"<Map<String, Value>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":9714,"byte_end":9760,"line_start":158,"line_end":158,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":9765,"byte_end":9774,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":9917,"byte_end":9925,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Map<String, Value>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":9842,"byte_end":9891,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":9896,"byte_end":9905,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10057,"byte_end":10061,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"iter","qualname":"<Map<String, Value>>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":9982,"byte_end":10031,"line_start":170,"line_end":170,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10036,"byte_end":10045,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10236,"byte_end":10244,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Map<String, Value>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets a mutable iterator over the entries of the map.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10154,"byte_end":10210,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10215,"byte_end":10224,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10423,"byte_end":10427,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map<String, Value>>::keys","value":"pub fn keys(&Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the map.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10351,"byte_end":10397,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10402,"byte_end":10411,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10594,"byte_end":10600,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"values","qualname":"<Map<String, Value>>::values","value":"pub fn values(&Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the values of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the values of the map.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10520,"byte_end":10568,"line_start":194,"line_end":194,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10573,"byte_end":10582,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":91},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15136,"byte_end":15142,"line_start":378,"line_end":378,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[{"value":"/ A vacant Entry.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15112,"byte_end":15131,"line_start":377,"line_end":377,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":94},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15192,"byte_end":15200,"line_start":380,"line_end":380,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[{"value":"/ An occupied Entry.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15165,"byte_end":15187,"line_start":379,"line_end":379,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":89},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15096,"byte_end":15101,"line_start":376,"line_end":376,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a> {\n\n    /// A vacant Entry.\n    Vacant(VacantEntry),\n\n    /// An occupied Entry.\n    Occupied(OccupiedEntry),\n}","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":94}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n This enum is constructed from the [`entry`] method on [`Map`].","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":14862,"byte_end":14942,"line_start":371,"line_end":371,"column_start":1,"column_end":81}},{"value":"/ This enum is constructed from the [`entry`] method on [`Map`].","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":14943,"byte_end":15009,"line_start":372,"line_end":372,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15010,"byte_end":15013,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ [`entry`]: struct.Map.html#method.entry","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15014,"byte_end":15057,"line_start":374,"line_end":374,"column_start":1,"column_end":44}},{"value":"/ [`Map`]: struct.Map.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15058,"byte_end":15086,"line_start":375,"line_end":375,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":97},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15324,"byte_end":15335,"line_start":386,"line_end":386,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":99}],"decl_id":null,"docs":" A vacant Entry. It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A vacant Entry. It is part of the [`Entry`] enum.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15224,"byte_end":15277,"line_start":383,"line_end":383,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15278,"byte_end":15281,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15282,"byte_end":15312,"line_start":385,"line_end":385,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15481,"byte_end":15494,"line_start":393,"line_end":393,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":102}],"decl_id":null,"docs":" An occupied Entry. It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ An occupied Entry. It is part of the [`Entry`] enum.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15378,"byte_end":15434,"line_start":390,"line_end":390,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15435,"byte_end":15438,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15439,"byte_end":15469,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":16070,"byte_end":16073,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":16014,"byte_end":16058,"line_start":408,"line_end":408,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":16378,"byte_end":16387,"line_start":418,"line_end":418,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and\n returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":16229,"byte_end":16303,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ returns a mutable reference to the value in the entry.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":16308,"byte_end":16366,"line_start":417,"line_end":417,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":16766,"byte_end":16780,"line_start":428,"line_end":428,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut Value where F: FnOnce() -> Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty, and returns a mutable reference to the value in the\n entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":16586,"byte_end":16660,"line_start":425,"line_end":425,"column_start":5,"column_end":79}},{"value":"/ function if empty, and returns a mutable reference to the value in the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":16665,"byte_end":16739,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ entry.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":16744,"byte_end":16754,"line_start":427,"line_end":427,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17185,"byte_end":17188,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the VacantEntry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17053,"byte_end":17126,"line_start":440,"line_end":440,"column_start":5,"column_end":78}},{"value":"/ through the VacantEntry.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17131,"byte_end":17159,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17164,"byte_end":17173,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17378,"byte_end":17384,"line_start":450,"line_end":450,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key, and returns a\n mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key, and returns a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17246,"byte_end":17319,"line_start":447,"line_end":447,"column_start":5,"column_end":78}},{"value":"/ mutable reference to it.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17324,"byte_end":17352,"line_start":448,"line_end":448,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17357,"byte_end":17366,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17571,"byte_end":17574,"line_start":458,"line_end":458,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17500,"byte_end":17545,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17550,"byte_end":17559,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17707,"byte_end":17710,"line_start":464,"line_end":464,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17634,"byte_end":17681,"line_start":462,"line_end":462,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17686,"byte_end":17695,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17850,"byte_end":17857,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17769,"byte_end":17824,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17829,"byte_end":17838,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":18015,"byte_end":18023,"line_start":476,"line_end":476,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to its value.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to its value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17928,"byte_end":17989,"line_start":474,"line_end":474,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17994,"byte_end":18003,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":18225,"byte_end":18231,"line_start":483,"line_end":483,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, Value) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the `OccupiedEntry`'s key, and returns\n the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the `OccupiedEntry`'s key, and returns","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":18093,"byte_end":18168,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ the entry's old value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":18173,"byte_end":18199,"line_start":481,"line_end":481,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":18204,"byte_end":18213,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":18405,"byte_end":18411,"line_start":489,"line_end":489,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the entry out of the map, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value of the entry out of the map, and returns it.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":18315,"byte_end":18379,"line_start":487,"line_end":487,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":18384,"byte_end":18393,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":18852,"byte_end":18856,"line_start":508,"line_end":508,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":132}],"decl_id":null,"docs":" An iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's entries.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":18797,"byte_end":18840,"line_start":507,"line_end":507,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":19550,"byte_end":19557,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" A mutable iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over a toml::Map's entries.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":19488,"byte_end":19538,"line_start":532,"line_end":532,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":20248,"byte_end":20256,"line_start":558,"line_end":558,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":150}],"decl_id":null,"docs":" An owning iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ An owning iterator over a toml::Map's entries.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":20186,"byte_end":20236,"line_start":557,"line_end":557,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":20662,"byte_end":20666,"line_start":572,"line_end":572,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":154}],"decl_id":null,"docs":" An iterator over a toml::Map's keys.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's keys.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":20610,"byte_end":20650,"line_start":571,"line_end":571,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":21073,"byte_end":21079,"line_start":586,"line_end":586,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":159}],"decl_id":null,"docs":" An iterator over a toml::Map's values.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's values.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":21019,"byte_end":21061,"line_start":585,"line_end":585,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":162},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::value","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":2301},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":2309},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":1477},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1501},{"krate":0,"index":1499},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":231},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1517},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":237},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":254},{"krate":0,"index":259},{"krate":0,"index":264},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":284},{"krate":0,"index":316},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":410},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":428},{"krate":0,"index":436},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":451}],"decl_id":null,"docs":" Definition of a TOML value\n","sig":null,"attributes":[{"value":"/ Definition of a TOML value","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21363,"byte_end":21393,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1478},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21894,"byte_end":21900,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"String","qualname":"::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" Represents a TOML string\n","sig":null,"attributes":[{"value":"/ Represents a TOML string","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21861,"byte_end":21889,"line_start":24,"line_end":24,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1481},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21948,"byte_end":21955,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"Integer","qualname":"::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" Represents a TOML integer\n","sig":null,"attributes":[{"value":"/ Represents a TOML integer","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21914,"byte_end":21943,"line_start":26,"line_end":26,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1484},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21998,"byte_end":22003,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Float","qualname":"::value::Value::Float","value":"Value::Float(f64)","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" Represents a TOML float\n","sig":null,"attributes":[{"value":"/ Represents a TOML float","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21966,"byte_end":21993,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1487},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22048,"byte_end":22055,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::value::Value::Boolean","value":"Value::Boolean(bool)","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" Represents a TOML boolean\n","sig":null,"attributes":[{"value":"/ Represents a TOML boolean","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22014,"byte_end":22043,"line_start":30,"line_end":30,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1490},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22102,"byte_end":22110,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::value::Value::Datetime","value":"Value::Datetime(Datetime)","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" Represents a TOML datetime\n","sig":null,"attributes":[{"value":"/ Represents a TOML datetime","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22067,"byte_end":22097,"line_start":32,"line_end":32,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1493},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22158,"byte_end":22163,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::Value::Array","value":"Value::Array(Array)","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" Represents a TOML array\n","sig":null,"attributes":[{"value":"/ Represents a TOML array","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22126,"byte_end":22153,"line_start":34,"line_end":34,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1496},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22208,"byte_end":22213,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"Table","qualname":"::value::Value::Table","value":"Value::Table(Table)","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" Represents a TOML table\n","sig":null,"attributes":[{"value":"/ Represents a TOML table","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22176,"byte_end":22203,"line_start":36,"line_end":36,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1477},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21849,"byte_end":21854,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"pub enum Value {\n\n    /// Represents a TOML string\n    String(String),\n\n    /// Represents a TOML integer\n    Integer(i64),\n\n    /// Represents a TOML float\n    Float(f64),\n\n    /// Represents a TOML boolean\n    Boolean(bool),\n\n    /// Represents a TOML datetime\n    Datetime(Datetime),\n\n    /// Represents a TOML array\n    Array(Array),\n\n    /// Represents a TOML table\n    Table(Table),\n}","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1496}],"decl_id":null,"docs":" Representation of a TOML value.\n","sig":null,"attributes":[{"value":"/ Representation of a TOML value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":21769,"byte_end":21804,"line_start":21,"line_end":21,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":182},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22308,"byte_end":22313,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Array","qualname":"::value::Array","value":"Vec<Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML array, payload of the `Value::Array` variant\n","sig":null,"attributes":[{"value":"/ Type representing a TOML array, payload of the `Value::Array` variant","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22225,"byte_end":22298,"line_start":40,"line_end":40,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":183},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22528,"byte_end":22533,"line_start":46,"line_end":46,"column_start":10,"column_end":15},"name":"Table","qualname":"::value::Table","value":"Map<String, Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML table, payload of the `Value::Table` variant.\n By default it is backed by a BTreeMap, enable the `preserve_order` feature\n to use a LinkedHashMap instead.\n","sig":null,"attributes":[{"value":"/ Type representing a TOML table, payload of the `Value::Table` variant.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22329,"byte_end":22403,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ By default it is backed by a BTreeMap, enable the `preserve_order` feature","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22404,"byte_end":22482,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ to use a LinkedHashMap instead.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22483,"byte_end":22518,"line_start":45,"line_end":45,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22839,"byte_end":22847,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Value>::try_from","value":"pub fn try_from<T>(T) -> Result<Value, crate::ser::Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Convert a `T` into `toml::Value` which is an enum that can represent\n any valid TOML data.","sig":null,"attributes":[{"value":"/ Convert a `T` into `toml::Value` which is an enum that can represent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22574,"byte_end":22646,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ any valid TOML data.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22651,"byte_end":22675,"line_start":50,"line_end":50,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22680,"byte_end":22683,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22688,"byte_end":22766,"line_start":52,"line_end":52,"column_start":5,"column_end":83}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22771,"byte_end":22827,"line_start":53,"line_end":53,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23583,"byte_end":23591,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"try_into","qualname":"<Value>::try_into","value":"pub fn try_into<'de, T>(Self) -> Result<T, crate::de::Error> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Interpret a `toml::Value` as an instance of type `T`.","sig":null,"attributes":[{"value":"/ Interpret a `toml::Value` as an instance of type `T`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22987,"byte_end":23044,"line_start":61,"line_end":61,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23049,"byte_end":23052,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if the structure of the `Value` does not match the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23057,"byte_end":23136,"line_start":63,"line_end":63,"column_start":5,"column_end":84}},{"value":"/ structure expected by `T`, for example if `T` is a struct type but the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23141,"byte_end":23215,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ `Value` contains something other than a TOML table. It can also fail if the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23220,"byte_end":23299,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ structure is correct but `T`'s implementation of `Deserialize` decides that","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23304,"byte_end":23383,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ something is wrong with the data, for example required struct fields are","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23388,"byte_end":23464,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ missing from the TOML map or some number is too big to fit in the expected","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23469,"byte_end":23547,"line_start":68,"line_end":68,"column_start":5,"column_end":83}},{"value":"/ primitive type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23552,"byte_end":23571,"line_start":69,"line_end":69,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24231,"byte_end":24234,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"get","qualname":"<Value>::get","value":"pub fn get<I: Index>(&Self, I) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Index into a TOML array or map. A string index can be used to access a\n value in a map, and a usize index can be used to access an element of an\n array.","sig":null,"attributes":[{"value":"/ Index into a TOML array or map. A string index can be used to access a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23740,"byte_end":23814,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ value in a map, and a usize index can be used to access an element of an","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23819,"byte_end":23895,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ array.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23900,"byte_end":23910,"line_start":79,"line_end":79,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23915,"byte_end":23918,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23923,"byte_end":23994,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":23999,"byte_end":24074,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24079,"byte_end":24153,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24158,"byte_end":24219,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24818,"byte_end":24825,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Value>::get_mut","value":"pub fn get_mut<I: Index>(&mut Self, I) -> Option<&mut Value>","parent":null,"children":[],"decl_id":null,"docs":" Mutably index into a TOML array or map. A string index can be used to\n access a value in a map, and a usize index can be used to access an\n element of an array.","sig":null,"attributes":[{"value":"/ Mutably index into a TOML array or map. A string index can be used to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24319,"byte_end":24392,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ access a value in a map, and a usize index can be used to access an","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24397,"byte_end":24468,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ element of an array.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24473,"byte_end":24497,"line_start":91,"line_end":91,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24502,"byte_end":24505,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24510,"byte_end":24581,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24586,"byte_end":24661,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24666,"byte_end":24740,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24745,"byte_end":24806,"line_start":96,"line_end":96,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24985,"byte_end":24995,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"as_integer","qualname":"<Value>::as_integer","value":"pub fn as_integer(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the integer value if it is an integer.\n","sig":null,"attributes":[{"value":"/ Extracts the integer value if it is an integer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":24922,"byte_end":24973,"line_start":101,"line_end":101,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25183,"byte_end":25193,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Value>::is_integer","value":"pub fn is_integer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an integer.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an integer.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25128,"byte_end":25171,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25316,"byte_end":25324,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"as_float","qualname":"<Value>::as_float","value":"pub fn as_float(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the float value if it is a float.\n","sig":null,"attributes":[{"value":"/ Extracts the float value if it is a float.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25258,"byte_end":25304,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25507,"byte_end":25515,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Value>::is_float","value":"pub fn is_float(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a float.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a float.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25455,"byte_end":25495,"line_start":122,"line_end":122,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25640,"byte_end":25647,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Value>::as_bool","value":"pub fn as_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the boolean value if it is a boolean.\n","sig":null,"attributes":[{"value":"/ Extracts the boolean value if it is a boolean.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25578,"byte_end":25628,"line_start":127,"line_end":127,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25835,"byte_end":25842,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Value>::is_bool","value":"pub fn is_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a boolean.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a boolean.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25781,"byte_end":25823,"line_start":135,"line_end":135,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25972,"byte_end":25978,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the string of this value if it is a string.\n","sig":null,"attributes":[{"value":"/ Extracts the string of this value if it is a string.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":25904,"byte_end":25960,"line_start":140,"line_end":140,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26166,"byte_end":26172,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"is_str","qualname":"<Value>::is_str","value":"pub fn is_str(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if this value is a string.\n","sig":null,"attributes":[{"value":"/ Tests if this value is a string.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26118,"byte_end":26154,"line_start":148,"line_end":148,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26473,"byte_end":26484,"line_start":161,"line_end":161,"column_start":12,"column_end":23},"name":"as_datetime","qualname":"<Value>::as_datetime","value":"pub fn as_datetime(&Self) -> Option<&Datetime>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the datetime value if it is a datetime.","sig":null,"attributes":[{"value":"/ Extracts the datetime value if it is a datetime.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26233,"byte_end":26285,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26290,"byte_end":26293,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Note that a parsed TOML value will only contain ISO 8601 dates. An","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26298,"byte_end":26368,"line_start":155,"line_end":155,"column_start":5,"column_end":75}},{"value":"/ example date is:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26373,"byte_end":26393,"line_start":156,"line_end":156,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26398,"byte_end":26401,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26406,"byte_end":26420,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/ 1979-05-27T07:32:00Z","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26425,"byte_end":26449,"line_start":159,"line_end":159,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26454,"byte_end":26461,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26683,"byte_end":26694,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"is_datetime","qualname":"<Value>::is_datetime","value":"pub fn is_datetime(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a datetime.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a datetime.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26628,"byte_end":26671,"line_start":168,"line_end":168,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26819,"byte_end":26827,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Value>::as_array","value":"pub fn as_array(&Self) -> Option<&Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26760,"byte_end":26807,"line_start":173,"line_end":173,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27029,"byte_end":27041,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Value>::as_array_mut","value":"pub fn as_array_mut(&mut Self) -> Option<&mut Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":26970,"byte_end":27017,"line_start":181,"line_end":181,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27249,"byte_end":27257,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Value>::is_array","value":"pub fn is_array(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an array.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an array.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27196,"byte_end":27237,"line_start":189,"line_end":189,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27378,"byte_end":27386,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"as_table","qualname":"<Value>::as_table","value":"pub fn as_table(&Self) -> Option<&Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27320,"byte_end":27366,"line_start":194,"line_end":194,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27582,"byte_end":27594,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"as_table_mut","qualname":"<Value>::as_table_mut","value":"pub fn as_table_mut(&mut Self) -> Option<&mut Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27524,"byte_end":27570,"line_start":202,"line_end":202,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27796,"byte_end":27804,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"is_table","qualname":"<Value>::is_table","value":"pub fn is_table(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a table.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a table.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27744,"byte_end":27784,"line_start":210,"line_end":210,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27939,"byte_end":27948,"line_start":216,"line_end":216,"column_start":12,"column_end":21},"name":"same_type","qualname":"<Value>::same_type","value":"pub fn same_type(&Self, &Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this and another value have the same type.\n","sig":null,"attributes":[{"value":"/ Tests whether this and another value have the same type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":27867,"byte_end":27927,"line_start":215,"line_end":215,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":28124,"byte_end":28132,"line_start":221,"line_end":221,"column_start":12,"column_end":20},"name":"type_str","qualname":"<Value>::type_str","value":"pub fn type_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a human-readable representation of the type of this value.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable representation of the type of this value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":28042,"byte_end":28112,"line_start":220,"line_end":220,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":237},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30480,"byte_end":30485,"line_start":313,"line_end":313,"column_start":11,"column_end":16},"name":"Index","qualname":"::value::Index","value":"Index: Sealed","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":240}],"decl_id":null,"docs":" Types that can be used to index a `toml::Value`","sig":null,"attributes":[{"value":"/ Types that can be used to index a `toml::Value`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30223,"byte_end":30274,"line_start":306,"line_end":306,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30275,"byte_end":30278,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ Currently this is implemented for `usize` to index arrays and `str` to index","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30279,"byte_end":30359,"line_start":308,"line_end":308,"column_start":1,"column_end":81}},{"value":"/ tables.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30360,"byte_end":30371,"line_start":309,"line_end":309,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30372,"byte_end":30375,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and not intended for implementation outside of the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30376,"byte_end":30451,"line_start":311,"line_end":311,"column_start":1,"column_end":76}},{"value":"/ `toml` crate.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30452,"byte_end":30469,"line_start":312,"line_end":312,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30522,"byte_end":30527,"line_start":315,"line_end":315,"column_start":8,"column_end":13},"name":"index","qualname":"::value::Index::index","value":"pub fn index<'a>(&Self, &'a Value) -> Option<&'a Value>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30603,"byte_end":30612,"line_start":317,"line_end":317,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::value::Index::index_mut","value":"pub fn index_mut<'a>(&Self, &'a mut Value) -> Option<&'a mut Value>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":242},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30820,"byte_end":30826,"line_start":323,"line_end":323,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::value::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" An implementation detail that should not be implemented, this will change in\n the future and break code otherwise.\n","sig":null,"attributes":[{"value":"/ An implementation detail that should not be implemented, this will change in","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30673,"byte_end":30753,"line_start":320,"line_end":320,"column_start":1,"column_end":81}},{"value":"/ the future and break code otherwise.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30754,"byte_end":30794,"line_start":321,"line_end":321,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1579},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":53227,"byte_end":53235,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Datetime","qualname":"::datetime::Datetime","value":"Datetime {  }","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582}],"decl_id":null,"docs":" A parsed TOML datetime value","sig":null,"attributes":[{"value":"/ A parsed TOML datetime value","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52394,"byte_end":52426,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52427,"byte_end":52430,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure is intended to represent the datetime primitive type that can","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52431,"byte_end":52511,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ be encoded into TOML documents. This type is a parsed version that contains","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52512,"byte_end":52591,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ all metadata internally.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52592,"byte_end":52620,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52621,"byte_end":52624,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently this type is intentionally conservative and only supports","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52625,"byte_end":52696,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ `to_string` as an accessor. Over time though it's intended that it'll grow","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52697,"byte_end":52775,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ more support!","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52776,"byte_end":52793,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52794,"byte_end":52797,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note that if you're using `Deserialize` to deserialize a TOML document, you","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52798,"byte_end":52877,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ can use this as a placeholder for where you're expecting a datetime to be","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52878,"byte_end":52955,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ specified.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52956,"byte_end":52970,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52971,"byte_end":52974,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Also note though that while this type implements `Serialize` and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":52975,"byte_end":53043,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ `Deserialize` it's only recommended to use this type with the TOML format,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":53044,"byte_end":53122,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ otherwise encoded in other formats it may look a little odd.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":53123,"byte_end":53187,"line_start":23,"line_end":23,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1589},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":53430,"byte_end":53448,"line_start":33,"line_end":33,"column_start":12,"column_end":30},"name":"DatetimeParseError","qualname":"::datetime::DatetimeParseError","value":"DatetimeParseError {  }","parent":null,"children":[{"krate":0,"index":1590}],"decl_id":null,"docs":" Error returned from parsing a `Datetime` in the `FromStr` implementation.\n","sig":null,"attributes":[{"value":"/ Error returned from parsing a `Datetime` in the `FromStr` implementation.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":53317,"byte_end":53394,"line_start":31,"line_end":31,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":535},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":1628},{"krate":0,"index":1659},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1650},{"krate":0,"index":1661},{"krate":0,"index":1668},{"krate":0,"index":1666},{"krate":0,"index":1664},{"krate":0,"index":552},{"krate":0,"index":1670},{"krate":0,"index":1676},{"krate":0,"index":1674},{"krate":0,"index":1672},{"krate":0,"index":554},{"krate":0,"index":1678},{"krate":0,"index":1685},{"krate":0,"index":1683},{"krate":0,"index":1681},{"krate":0,"index":556},{"krate":0,"index":1687},{"krate":0,"index":1695},{"krate":0,"index":1694},{"krate":0,"index":1692},{"krate":0,"index":1697},{"krate":0,"index":1714},{"krate":0,"index":1711},{"krate":0,"index":561},{"krate":0,"index":568},{"krate":0,"index":579},{"krate":0,"index":609},{"krate":0,"index":654},{"krate":0,"index":662},{"krate":0,"index":670},{"krate":0,"index":678},{"krate":0,"index":686},{"krate":0,"index":696},{"krate":0,"index":704},{"krate":0,"index":709},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":808},{"krate":0,"index":815},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":864},{"krate":0,"index":871},{"krate":0,"index":878},{"krate":0,"index":885},{"krate":0,"index":892},{"krate":0,"index":901}],"decl_id":null,"docs":" Serializing Rust structures into TOML.","sig":null,"attributes":[{"value":"/ Serializing Rust structures into TOML.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65044,"byte_end":65086,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65087,"byte_end":65090,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains all the Serde support for serializing Rust structures","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65091,"byte_end":65169,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ into TOML documents (as strings). Note that some top-level functions here","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65170,"byte_end":65247,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ are also provided at the top of the crate.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65248,"byte_end":65294,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65295,"byte_end":65298,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that the TOML format has a restriction that if a table itself contains","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65299,"byte_end":65378,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tables, all keys with non-table values must be emitted first. This is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65379,"byte_end":65452,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ typically easy to ensure happens when you're defining a `struct` as you can","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65453,"byte_end":65532,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ reorder the fields manually, but when working with maps (such as `BTreeMap`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65533,"byte_end":65612,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ or `HashMap`) this can lead to serialization errors. In those situations you","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65613,"byte_end":65693,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ may use the `tables_last` function in this module like so:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65694,"byte_end":65756,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65757,"byte_end":65760,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65761,"byte_end":65772,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65773,"byte_end":65807,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65808,"byte_end":65844,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65845,"byte_end":65869,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65870,"byte_end":65891,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65892,"byte_end":65917,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65918,"byte_end":65977,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":65978,"byte_end":66028,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66029,"byte_end":66034,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66035,"byte_end":66063,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66064,"byte_end":66095,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66096,"byte_end":66114,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66115,"byte_end":66122,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":545},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66568,"byte_end":66574,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::ser::to_vec","value":"pub fn to_vec<T: ?Sized>(&T) -> Result<Vec<u8>, Error> where T: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a TOML byte vector.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a TOML byte vector.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66263,"byte_end":66324,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66325,"byte_end":66328,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66329,"byte_end":66405,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66406,"byte_end":66481,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66482,"byte_end":66560,"line_start":41,"line_end":41,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":548},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67678,"byte_end":67687,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"to_string","qualname":"::ser::to_string","value":"pub fn to_string<T: ?Sized>(&T) -> Result<String, Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a String of TOML.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66702,"byte_end":66761,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66762,"byte_end":66765,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66766,"byte_end":66842,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66843,"byte_end":66918,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66919,"byte_end":66997,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":66998,"byte_end":67001,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67002,"byte_end":67016,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67017,"byte_end":67020,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67021,"byte_end":67028,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Serialize;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67029,"byte_end":67061,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67062,"byte_end":67065,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67066,"byte_end":67090,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67091,"byte_end":67110,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/     database: Database,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67111,"byte_end":67138,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67139,"byte_end":67144,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67145,"byte_end":67148,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67149,"byte_end":67173,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/ struct Database {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67174,"byte_end":67195,"line_start":66,"line_end":66,"column_start":1,"column_end":22}},{"value":"/     ip: String,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67196,"byte_end":67215,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/     port: Vec<u16>,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67216,"byte_end":67239,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     connection_max: u32,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67240,"byte_end":67268,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/     enabled: bool,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67269,"byte_end":67291,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67292,"byte_end":67297,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67298,"byte_end":67301,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67302,"byte_end":67317,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/     let config = Config {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67318,"byte_end":67347,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/         database: Database {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67348,"byte_end":67380,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/             ip: \"192.168.1.1\".to_string(),","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67381,"byte_end":67427,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/             port: vec![8001, 8002, 8003],","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67428,"byte_end":67473,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/             connection_max: 5000,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67474,"byte_end":67511,"line_start":78,"line_end":78,"column_start":1,"column_end":38}},{"value":"/             enabled: false,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67512,"byte_end":67543,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/         },","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67544,"byte_end":67558,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/     };","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67559,"byte_end":67569,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67570,"byte_end":67573,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67574,"byte_end":67627,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/     println!(\"{}\", toml)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67628,"byte_end":67656,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67657,"byte_end":67662,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67663,"byte_end":67670,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":550},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68098,"byte_end":68114,"line_start":100,"line_end":100,"column_start":8,"column_end":24},"name":"to_string_pretty","qualname":"::ser::to_string_pretty","value":"pub fn to_string_pretty<T: ?Sized>(&T) -> Result<String, Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a \"pretty\" String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a \"pretty\" String of TOML.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67881,"byte_end":67949,"line_start":96,"line_end":96,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67950,"byte_end":67953,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This is identical to `to_string` except the output string has a more","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":67954,"byte_end":68026,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ \"pretty\" output. See `Serializer::pretty` for more details.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68027,"byte_end":68090,"line_start":99,"line_end":99,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1629},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68648,"byte_end":68663,"line_start":117,"line_end":117,"column_start":5,"column_end":20},"name":"UnsupportedType","qualname":"::ser::Error::UnsupportedType","value":"Error::UnsupportedType","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" Indicates that a Rust type was requested to be serialized but it was not\n supported.","sig":null,"attributes":[{"value":"/ Indicates that a Rust type was requested to be serialized but it was not","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68422,"byte_end":68498,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68503,"byte_end":68517,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68522,"byte_end":68525,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Currently the TOML format does not support serializing types such as","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68530,"byte_end":68602,"line_start":115,"line_end":115,"column_start":5,"column_end":77}},{"value":"/ enums, tuples and tuple structs.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68607,"byte_end":68643,"line_start":116,"line_end":116,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1631},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68801,"byte_end":68813,"line_start":121,"line_end":121,"column_start":5,"column_end":17},"name":"KeyNotString","qualname":"::ser::Error::KeyNotString","value":"Error::KeyNotString","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" The key of all TOML maps must be strings, but serialization was\n attempted where the key of a map was not a string.\n","sig":null,"attributes":[{"value":"/ The key of all TOML maps must be strings, but serialization was","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68670,"byte_end":68737,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ attempted where the key of a map was not a string.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68742,"byte_end":68796,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1633},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68912,"byte_end":68922,"line_start":125,"line_end":125,"column_start":5,"column_end":15},"name":"KeyNewline","qualname":"::ser::Error::KeyNewline","value":"Error::KeyNewline","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" An error that we never omit but keep for backwards compatibility\n","sig":null,"attributes":[{"value":"/ An error that we never omit but keep for backwards compatibility","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68820,"byte_end":68888,"line_start":123,"line_end":123,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1635},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69029,"byte_end":69043,"line_start":129,"line_end":129,"column_start":5,"column_end":19},"name":"ArrayMixedType","qualname":"::ser::Error::ArrayMixedType","value":"Error::ArrayMixedType","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" An array had to be homogenous, but now it is allowed to be heterogenous.\n","sig":null,"attributes":[{"value":"/ An array had to be homogenous, but now it is allowed to be heterogenous.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68929,"byte_end":69005,"line_start":127,"line_end":127,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1637},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69220,"byte_end":69235,"line_start":134,"line_end":134,"column_start":5,"column_end":20},"name":"ValueAfterTable","qualname":"::ser::Error::ValueAfterTable","value":"Error::ValueAfterTable","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" All values in a TOML table must be emitted before further tables are\n emitted. If a value is emitted *after* a table then this error is\n generated.\n","sig":null,"attributes":[{"value":"/ All values in a TOML table must be emitted before further tables are","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69050,"byte_end":69122,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ emitted. If a value is emitted *after* a table then this error is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69127,"byte_end":69196,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ generated.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69201,"byte_end":69215,"line_start":133,"line_end":133,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1639},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69281,"byte_end":69292,"line_start":137,"line_end":137,"column_start":5,"column_end":16},"name":"DateInvalid","qualname":"::ser::Error::DateInvalid","value":"Error::DateInvalid","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" A serialized date was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized date was invalid.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69242,"byte_end":69276,"line_start":136,"line_end":136,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1641},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69340,"byte_end":69353,"line_start":140,"line_end":140,"column_start":5,"column_end":18},"name":"NumberInvalid","qualname":"::ser::Error::NumberInvalid","value":"Error::NumberInvalid","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" A serialized number was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized number was invalid.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69299,"byte_end":69335,"line_start":139,"line_end":139,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1643},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69429,"byte_end":69444,"line_start":143,"line_end":143,"column_start":5,"column_end":20},"name":"UnsupportedNone","qualname":"::ser::Error::UnsupportedNone","value":"Error::UnsupportedNone","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" None was attempted to be serialized, but it's not supported.\n","sig":null,"attributes":[{"value":"/ None was attempted to be serialized, but it's not supported.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69360,"byte_end":69424,"line_start":142,"line_end":142,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1645},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69543,"byte_end":69549,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ser::Error::Custom","value":"Error::Custom(String)","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" A custom error which could be generated when serializing a particular\n type.\n","sig":null,"attributes":[{"value":"/ A custom error which could be generated when serializing a particular","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69451,"byte_end":69524,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69529,"byte_end":69538,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1648},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69583,"byte_end":69598,"line_start":150,"line_end":150,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::ser::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1628},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68410,"byte_end":68415,"line_start":111,"line_end":111,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::Error","value":"pub enum Error {\n\n    /// Indicates that a Rust type was requested to be serialized but it was not\n    /// supported.\n    ///\n    /// Currently the TOML format does not support serializing types such as\n    /// enums, tuples and tuple structs.\n    UnsupportedType,\n\n    /// The key of all TOML maps must be strings, but serialization was\n    /// attempted where the key of a map was not a string.\n    KeyNotString,\n\n    /// An error that we never omit but keep for backwards compatibility\n    #[doc(hidden)]\n    KeyNewline,\n\n    /// An array had to be homogenous, but now it is allowed to be heterogenous.\n    #[doc(hidden)]\n    ArrayMixedType,\n\n    /// All values in a TOML table must be emitted before further tables are\n    /// emitted. If a value is emitted *after* a table then this error is\n    /// generated.\n    ValueAfterTable,\n\n    /// A serialized date was invalid.\n    DateInvalid,\n\n    /// A serialized number was invalid.\n    NumberInvalid,\n\n    /// None was attempted to be serialized, but it's not supported.\n    UnsupportedNone,\n\n    /// A custom error which could be generated when serializing a particular\n    /// type.\n    Custom(String),\n\n    #[doc(hidden)]\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1631},{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1648}],"decl_id":null,"docs":" Errors that can occur when serializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when serializing a type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":68311,"byte_end":68361,"line_start":109,"line_end":109,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":556},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70820,"byte_end":70830,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":" Serialization implementation for TOML.","sig":null,"attributes":[{"value":"/ Serialization implementation for TOML.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70347,"byte_end":70389,"line_start":189,"line_end":189,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70390,"byte_end":70393,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ This structure implements serialization support for TOML to serialize an","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70394,"byte_end":70470,"line_start":191,"line_end":191,"column_start":1,"column_end":77}},{"value":"/ arbitrary type to TOML. Note that the TOML format does not support all","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70471,"byte_end":70545,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ datatypes in Rust, such as enums, tuples, and tuple structs. These types","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70546,"byte_end":70622,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ will generate an error when serialized.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70623,"byte_end":70666,"line_start":194,"line_end":194,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70667,"byte_end":70670,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Currently a serializer always writes its output to an in-memory `String`,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70671,"byte_end":70748,"line_start":196,"line_end":196,"column_start":1,"column_end":78}},{"value":"/ which is passed in when creating the serializer itself.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70749,"byte_end":70808,"line_start":197,"line_end":197,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":561},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71375,"byte_end":71387,"line_start":228,"line_end":228,"column_start":12,"column_end":24},"name":"SerializeSeq","qualname":"::ser::SerializeSeq","value":"SerializeSeq {  }","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71571,"byte_end":71579,"line_start":237,"line_end":237,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::ser::SerializeTable::Datetime","value":"SerializeTable::Datetime(&'b mut Serializer)","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":574},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71609,"byte_end":71614,"line_start":238,"line_end":238,"column_start":5,"column_end":10},"name":"Table","qualname":"::ser::SerializeTable::Table","value":"SerializeTable::Table { ser, key, first, table_emitted }","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":568},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71542,"byte_end":71556,"line_start":236,"line_end":236,"column_start":10,"column_end":24},"name":"SerializeTable","qualname":"::ser::SerializeTable","value":"pub enum SerializeTable<'a, 'b> {\n    Datetime(&'b mut Serializer),\n    Table {\n        ser: &'b mut Serializer,\n        key: String,\n        first: Cell<bool>,\n        table_emitted: Cell<bool>,\n    },\n}","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":574}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71987,"byte_end":71990,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"pub fn new(&'a mut String) -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new serializer which will emit TOML into the buffer provided.","sig":null,"attributes":[{"value":"/ Creates a new serializer which will emit TOML into the buffer provided.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71777,"byte_end":71852,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71857,"byte_end":71860,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The serializer can then be used to serialize a type after which the data","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71865,"byte_end":71941,"line_start":249,"line_end":249,"column_start":5,"column_end":81}},{"value":"/ will be present in `dst`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71946,"byte_end":71975,"line_start":250,"line_end":250,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72549,"byte_end":72555,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Serializer>::pretty","value":"pub fn pretty(&'a mut String) -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a \"pretty\" formatter","sig":null,"attributes":[{"value":"/ Instantiate a \"pretty\" formatter","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72174,"byte_end":72210,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72215,"byte_end":72218,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ By default this will use:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72223,"byte_end":72252,"line_start":261,"line_end":261,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72257,"byte_end":72260,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ - pretty strings: strings with newlines will use the `'''` syntax. See","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72265,"byte_end":72339,"line_start":263,"line_end":263,"column_start":5,"column_end":79}},{"value":"/   `Serializer::pretty_string`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72344,"byte_end":72377,"line_start":264,"line_end":264,"column_start":5,"column_end":38}},{"value":"/ - pretty arrays: each item in arrays will be on a newline, have an indentation of 4 and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72382,"byte_end":72473,"line_start":265,"line_end":265,"column_start":5,"column_end":96}},{"value":"/   have a trailing comma. See `Serializer::pretty_array`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72478,"byte_end":72537,"line_start":266,"line_end":266,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73384,"byte_end":73397,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"pretty_string","qualname":"<Serializer>::pretty_string","value":"pub fn pretty_string(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable pretty strings","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72854,"byte_end":72890,"line_start":278,"line_end":278,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72895,"byte_end":72898,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72903,"byte_end":72978,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":72983,"byte_end":73053,"line_start":281,"line_end":281,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73058,"byte_end":73061,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73066,"byte_end":73080,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73085,"byte_end":73088,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73093,"byte_end":73108,"line_start":285,"line_end":285,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73113,"byte_end":73116,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73121,"byte_end":73139,"line_start":287,"line_end":287,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73144,"byte_end":73170,"line_start":288,"line_end":288,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73175,"byte_end":73200,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73205,"byte_end":73212,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73217,"byte_end":73220,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73225,"byte_end":73243,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73248,"byte_end":73251,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73256,"byte_end":73274,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/ single = 'no newlines'","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73279,"byte_end":73305,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/ text = '''","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73310,"byte_end":73324,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73329,"byte_end":73336,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73341,"byte_end":73348,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ '''","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73353,"byte_end":73360,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73365,"byte_end":73372,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74293,"byte_end":74314,"line_start":336,"line_end":336,"column_start":12,"column_end":33},"name":"pretty_string_literal","qualname":"<Serializer>::pretty_string_literal","value":"pub fn pretty_string_literal(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable Literal strings for pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable Literal strings for pretty strings","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73618,"byte_end":73674,"line_start":310,"line_end":310,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73679,"byte_end":73682,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73687,"byte_end":73762,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73767,"byte_end":73837,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73842,"byte_end":73845,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ If disabled, literal strings will NEVER be used and strings with one or","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73850,"byte_end":73925,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ more newlines will use `\"\"\"`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73930,"byte_end":73962,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73967,"byte_end":73970,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73975,"byte_end":73989,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":73994,"byte_end":73997,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74002,"byte_end":74017,"line_start":320,"line_end":320,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74022,"byte_end":74025,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74030,"byte_end":74048,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74053,"byte_end":74079,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74084,"byte_end":74109,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74114,"byte_end":74121,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74126,"byte_end":74129,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74134,"byte_end":74152,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74157,"byte_end":74160,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74165,"byte_end":74183,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74188,"byte_end":74214,"line_start":330,"line_end":330,"column_start":5,"column_end":31}},{"value":"/ text = \"\"\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74219,"byte_end":74233,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74238,"byte_end":74245,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74250,"byte_end":74257,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ \"\"\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74262,"byte_end":74269,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74274,"byte_end":74281,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75475,"byte_end":75487,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"pretty_array","qualname":"<Serializer>::pretty_array","value":"pub fn pretty_array(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty arrays","sig":null,"attributes":[{"value":"/ Enable or Disable pretty arrays","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74776,"byte_end":74811,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74816,"byte_end":74819,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If enabled, arrays will always have each item on their own line.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74824,"byte_end":74892,"line_start":354,"line_end":354,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74897,"byte_end":74900,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Some specific features can be controlled via other builder methods:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74905,"byte_end":74976,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74981,"byte_end":74984,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ - `Serializer::pretty_array_indent`: set the indent to a value other","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":74989,"byte_end":75061,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/   than 4.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75066,"byte_end":75079,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/ - `Serializer::pretty_array_trailing_comma`: enable/disable the trailing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75084,"byte_end":75160,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/   comma on the last item.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75165,"byte_end":75194,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75199,"byte_end":75202,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75207,"byte_end":75221,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75226,"byte_end":75229,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75234,"byte_end":75249,"line_start":365,"line_end":365,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75254,"byte_end":75257,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75262,"byte_end":75280,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ array = [\"foo\", \"bar\"]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75285,"byte_end":75311,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75316,"byte_end":75323,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75328,"byte_end":75331,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75336,"byte_end":75354,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75359,"byte_end":75362,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75367,"byte_end":75385,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/ array = [","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75390,"byte_end":75403,"line_start":374,"line_end":374,"column_start":5,"column_end":18}},{"value":"/     \"foo\",","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75408,"byte_end":75422,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/     \"bar\",","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75427,"byte_end":75441,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/ ]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75446,"byte_end":75451,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75456,"byte_end":75463,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75819,"byte_end":75838,"line_start":391,"line_end":391,"column_start":12,"column_end":31},"name":"pretty_array_indent","qualname":"<Serializer>::pretty_array_indent","value":"pub fn pretty_array_indent(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the indent for pretty arrays","sig":null,"attributes":[{"value":"/ Set the indent for pretty arrays","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75706,"byte_end":75742,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75747,"byte_end":75750,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":75755,"byte_end":75807,"line_start":390,"line_end":390,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":76444,"byte_end":76471,"line_start":410,"line_end":410,"column_start":12,"column_end":39},"name":"pretty_array_trailing_comma","qualname":"<Serializer>::pretty_array_trailing_comma","value":"pub fn pretty_array_trailing_comma(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify whether to use a trailing comma when serializing pretty arrays","sig":null,"attributes":[{"value":"/ Specify whether to use a trailing comma when serializing pretty arrays","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":76293,"byte_end":76367,"line_start":407,"line_end":407,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":76372,"byte_end":76375,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":76380,"byte_end":76432,"line_start":409,"line_end":409,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":808},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111683,"byte_end":111694,"line_start":1580,"line_end":1580,"column_start":8,"column_end":19},"name":"tables_last","qualname":"::ser::tables_last","value":"pub fn tables_last<'a, I, K, V, S>(&'a I, S) -> Result<S::Ok, S::Error> where\n&'a I: IntoIterator<Item = (K, V)>, K: ser::Serialize, V: ser::Serialize,\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to serialize items in a map in an order valid with\n TOML.","sig":null,"attributes":[{"value":"/ Convenience function to serialize items in a map in an order valid with","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111027,"byte_end":111102,"line_start":1560,"line_end":1560,"column_start":1,"column_end":76}},{"value":"/ TOML.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111103,"byte_end":111112,"line_start":1561,"line_end":1561,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111113,"byte_end":111116,"line_start":1562,"line_end":1562,"column_start":1,"column_end":4}},{"value":"/ TOML carries the restriction that keys in a table must be serialized last if","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111117,"byte_end":111197,"line_start":1563,"line_end":1563,"column_start":1,"column_end":81}},{"value":"/ their value is a table itself. This isn't always easy to guarantee, so this","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111198,"byte_end":111277,"line_start":1564,"line_end":1564,"column_start":1,"column_end":80}},{"value":"/ helper can be used like so:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111278,"byte_end":111309,"line_start":1565,"line_end":1565,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111310,"byte_end":111313,"line_start":1566,"line_end":1566,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111314,"byte_end":111325,"line_start":1567,"line_end":1567,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111326,"byte_end":111360,"line_start":1568,"line_end":1568,"column_start":1,"column_end":35}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111361,"byte_end":111397,"line_start":1569,"line_end":1569,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111398,"byte_end":111422,"line_start":1570,"line_end":1570,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111423,"byte_end":111444,"line_start":1571,"line_end":1571,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111445,"byte_end":111470,"line_start":1572,"line_end":1572,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111471,"byte_end":111530,"line_start":1573,"line_end":1573,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111531,"byte_end":111581,"line_start":1574,"line_end":1574,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111582,"byte_end":111587,"line_start":1575,"line_end":1575,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111588,"byte_end":111616,"line_start":1576,"line_end":1576,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111617,"byte_end":111648,"line_start":1577,"line_end":1577,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111649,"byte_end":111667,"line_start":1578,"line_end":1578,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":111668,"byte_end":111675,"line_start":1579,"line_end":1579,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":913},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":2385},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":2389},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":1727},{"krate":0,"index":1738},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1729},{"krate":0,"index":1740},{"krate":0,"index":1756},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1747},{"krate":0,"index":1758},{"krate":0,"index":1826},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1817},{"krate":0,"index":941},{"krate":0,"index":947},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":971},{"krate":0,"index":977},{"krate":0,"index":991},{"krate":0,"index":1008},{"krate":0,"index":1021},{"krate":0,"index":1035},{"krate":0,"index":1039},{"krate":0,"index":1043},{"krate":0,"index":1048},{"krate":0,"index":1055},{"krate":0,"index":1059},{"krate":0,"index":1063},{"krate":0,"index":1080},{"krate":0,"index":1085},{"krate":0,"index":1090},{"krate":0,"index":1094},{"krate":0,"index":1101},{"krate":0,"index":1109},{"krate":0,"index":1113},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1127},{"krate":0,"index":1131},{"krate":0,"index":1138},{"krate":0,"index":1142},{"krate":0,"index":1149},{"krate":0,"index":1156},{"krate":0,"index":1159},{"krate":0,"index":1172},{"krate":0,"index":1241},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1269},{"krate":0,"index":1275},{"krate":0,"index":2086},{"krate":0,"index":2091},{"krate":0,"index":2094},{"krate":0,"index":2120},{"krate":0,"index":1280}],"decl_id":null,"docs":" Deserializing TOML into Rust structures.","sig":null,"attributes":[{"value":"/ Deserializing TOML into Rust structures.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":118743,"byte_end":118787,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":118788,"byte_end":118791,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains all the Serde support for deserializing TOML documents","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":118792,"byte_end":118871,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ into Rust structures. Note that some top-level functions here are also","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":118872,"byte_end":118946,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ provided at the top of the crate.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":118947,"byte_end":118984,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":935},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":119637,"byte_end":119647,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::from_slice","value":"pub fn from_slice<'de, T>(&'de [u8]) -> Result<T, Error> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a byte slice into a type.","sig":null,"attributes":[{"value":"/ Deserializes a byte slice into a type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":119455,"byte_end":119497,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":119498,"byte_end":119501,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `bytes` as UTF-8 data and then","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":119502,"byte_end":119576,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ deserialize `T` from the TOML document provided.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":119577,"byte_end":119629,"line_start":31,"line_end":31,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":938},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120559,"byte_end":120567,"line_start":75,"line_end":75,"column_start":8,"column_end":16},"name":"from_str","qualname":"::de::from_str","value":"pub fn from_str<'de, T>(&'de str) -> Result<T, Error> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a string into a type.","sig":null,"attributes":[{"value":"/ Deserializes a string into a type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":119863,"byte_end":119901,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":119902,"byte_end":119905,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `s` as a TOML document and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":119906,"byte_end":119976,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ deserialize `T` from the document.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":119977,"byte_end":120015,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120016,"byte_end":120019,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120020,"byte_end":120034,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120035,"byte_end":120038,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120039,"byte_end":120046,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120047,"byte_end":120081,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120082,"byte_end":120085,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120086,"byte_end":120112,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120113,"byte_end":120132,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     title: String,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120133,"byte_end":120155,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/     owner: Owner,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120156,"byte_end":120177,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120178,"byte_end":120183,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120184,"byte_end":120187,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120188,"byte_end":120214,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/ struct Owner {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120215,"byte_end":120233,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/     name: String,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120234,"byte_end":120255,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120256,"byte_end":120261,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120262,"byte_end":120265,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120266,"byte_end":120281,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"/     let config: Config = toml::from_str(r#\"","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120282,"byte_end":120329,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/         title = 'TOML Example'","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120330,"byte_end":120364,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120365,"byte_end":120368,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/         [owner]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120369,"byte_end":120388,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/         name = 'Lisa'","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120389,"byte_end":120414,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/     \"#).unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120415,"byte_end":120436,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120437,"byte_end":120440,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(config.title, \"TOML Example\");","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120441,"byte_end":120490,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(config.owner.name, \"Lisa\");","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120491,"byte_end":120537,"line_start":72,"line_end":72,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120538,"byte_end":120543,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120544,"byte_end":120551,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1727},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120855,"byte_end":120860,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"Error","qualname":"::de::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1728}],"decl_id":null,"docs":" Errors that can occur when deserializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when deserializing a type.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":120752,"byte_end":120804,"line_start":85,"line_end":85,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":941},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":123846,"byte_end":123858,"line_start":202,"line_end":202,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946}],"decl_id":null,"docs":" Deserialization implementation for TOML.\n","sig":null,"attributes":[{"value":"/ Deserialization implementation for TOML.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":123790,"byte_end":123834,"line_start":201,"line_end":201,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":158784,"byte_end":158787,"line_start":1269,"line_end":1269,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer>::new","value":"pub fn new(&'a str) -> Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new deserializer which will be deserializing the string\n provided.\n","sig":null,"attributes":[{"value":"/ Creates a new deserializer which will be deserializing the string","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":158685,"byte_end":158754,"line_start":1267,"line_end":1267,"column_start":5,"column_end":74}},{"value":"/ provided.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":158759,"byte_end":158772,"line_start":1268,"line_end":1268,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159294,"byte_end":159297,"line_start":1282,"line_end":1282,"column_start":12,"column_end":15},"name":"end","qualname":"<Deserializer>::end","value":"pub fn end(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" The `Deserializer::end` method should be called after a value has been\n fully deserialized.  This allows the `Deserializer` to validate that the\n input stream is at the end or that it only has trailing\n whitespace/comments.\n","sig":null,"attributes":[{"value":"/ The `Deserializer::end` method should be called after a value has been","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159034,"byte_end":159108,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ fully deserialized.  This allows the `Deserializer` to validate that the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159113,"byte_end":159189,"line_start":1279,"line_end":1279,"column_start":5,"column_end":81}},{"value":"/ input stream is at the end or that it only has trailing","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159194,"byte_end":159253,"line_start":1280,"line_end":1280,"column_start":5,"column_end":64}},{"value":"/ whitespace/comments.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159258,"byte_end":159282,"line_start":1281,"line_end":1281,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159711,"byte_end":159742,"line_start":1292,"line_end":1292,"column_start":12,"column_end":43},"name":"set_require_newline_after_table","qualname":"<Deserializer>::set_require_newline_after_table","value":"pub fn set_require_newline_after_table(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Historical versions of toml-rs accidentally allowed a newline after a\n table definition, but the TOML spec requires a newline after a table\n definition header.","sig":null,"attributes":[{"value":"/ Historical versions of toml-rs accidentally allowed a newline after a","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159358,"byte_end":159431,"line_start":1286,"line_end":1286,"column_start":5,"column_end":78}},{"value":"/ table definition, but the TOML spec requires a newline after a table","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159436,"byte_end":159508,"line_start":1287,"line_end":1287,"column_start":5,"column_end":77}},{"value":"/ definition header.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159513,"byte_end":159535,"line_start":1288,"line_end":1288,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159540,"byte_end":159543,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ This option can be set to `false` (the default is `true`) to emulate","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159548,"byte_end":159620,"line_start":1290,"line_end":1290,"column_start":5,"column_end":77}},{"value":"/ this behavior for backwards compatibility with older toml-rs versions.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159625,"byte_end":159699,"line_start":1291,"line_end":1291,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":160211,"byte_end":160249,"line_start":1302,"line_end":1302,"column_start":12,"column_end":50},"name":"set_allow_duplicate_after_longer_table","qualname":"<Deserializer>::set_allow_duplicate_after_longer_table","value":"pub fn set_allow_duplicate_after_longer_table(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Historical versions of toml-rs accidentally allowed a duplicate table\n header after a longer table header was previously defined. This is\n invalid according to the TOML spec, however.","sig":null,"attributes":[{"value":"/ Historical versions of toml-rs accidentally allowed a duplicate table","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159834,"byte_end":159907,"line_start":1296,"line_end":1296,"column_start":5,"column_end":78}},{"value":"/ header after a longer table header was previously defined. This is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159912,"byte_end":159982,"line_start":1297,"line_end":1297,"column_start":5,"column_end":75}},{"value":"/ invalid according to the TOML spec, however.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":159987,"byte_end":160035,"line_start":1298,"line_end":1298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":160040,"byte_end":160043,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ This option can be set to `true` (the default is `false`) to emulate","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":160048,"byte_end":160120,"line_start":1300,"line_end":1300,"column_start":5,"column_end":77}},{"value":"/ this behavior for backwards compatibility with older toml-rs versions.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":160125,"byte_end":160199,"line_start":1301,"line_end":1301,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":185494,"byte_end":185502,"line_start":2029,"line_end":2029,"column_start":12,"column_end":20},"name":"line_col","qualname":"<Error>::line_col","value":"pub fn line_col(&Self) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Produces a (line, column) pair of the position of the error if available","sig":null,"attributes":[{"value":"/ Produces a (line, column) pair of the position of the error if available","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":185365,"byte_end":185441,"line_start":2026,"line_end":2026,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":185446,"byte_end":185449,"line_start":2027,"line_end":2027,"column_start":5,"column_end":8}},{"value":"/ All indexes are 0-based.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":185454,"byte_end":185482,"line_start":2028,"line_end":2028,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2123},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":192993,"byte_end":192997,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Span","qualname":"::tokens::Span","value":"Span { start, end }","parent":null,"children":[{"krate":0,"index":2124},{"krate":0,"index":2125}],"decl_id":null,"docs":" A span, designating a range of bytes where a token is located.\n","sig":null,"attributes":[{"value":"/ A span, designating a range of bytes where a token is located.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":192870,"byte_end":192936,"line_start":9,"line_end":9,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2124},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":193040,"byte_end":193045,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"start","qualname":"::tokens::Span::start","value":"usize","parent":{"krate":0,"index":2123},"children":[],"decl_id":null,"docs":" The start of the range.\n","sig":null,"attributes":[{"value":"/ The start of the range.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":193004,"byte_end":193031,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2125},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":193104,"byte_end":193107,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"end","qualname":"::tokens::Span::end","value":"usize","parent":{"krate":0,"index":2123},"children":[],"decl_id":null,"docs":" The end of the range (exclusive).\n","sig":null,"attributes":[{"value":"/ The end of the range (exclusive).","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":193058,"byte_end":193095,"line_start":14,"line_end":14,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1347},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/macros.rs","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1357},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/macros.rs","byte_start":235832,"byte_end":235843,"line_start":413,"line_end":413,"column_start":8,"column_end":19},"name":"insert_toml","qualname":"::macros::insert_toml","value":"pub fn insert_toml(&mut Value, &[&str], Value)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1358},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/macros.rs","byte_start":236043,"byte_end":236052,"line_start":419,"line_end":419,"column_start":8,"column_end":17},"name":"push_toml","qualname":"::macros::push_toml","value":"pub fn push_toml(&mut Value, &[&str])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2258},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238285,"byte_end":238292,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Spanned","qualname":"::spanned::Spanned","value":"Spanned {  }","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262}],"decl_id":null,"docs":" A spanned value, indicating the range at which it is defined in the source.","sig":null,"attributes":[{"value":"/ A spanned value, indicating the range at which it is defined in the source.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237712,"byte_end":237791,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237792,"byte_end":237795,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237796,"byte_end":237803,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237804,"byte_end":237838,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ use toml::Spanned;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237839,"byte_end":237861,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237862,"byte_end":237865,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237866,"byte_end":237892,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/ struct Value {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237893,"byte_end":237911,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/     s: Spanned<String>,","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237912,"byte_end":237939,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237940,"byte_end":237945,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237946,"byte_end":237949,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237950,"byte_end":237965,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     let t = \"s = \\\"value\\\"\\n\";","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":237966,"byte_end":238000,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238001,"byte_end":238004,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     let u: Value = toml::from_str(t).unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238005,"byte_end":238055,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238056,"byte_end":238059,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(u.s.start(), 4);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238060,"byte_end":238095,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/     assert_eq!(u.s.end(), 11);","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238096,"byte_end":238130,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/     assert_eq!(u.s.get_ref(), \"value\");","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238131,"byte_end":238174,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(u.s.into_inner(), String::from(\"value\"));","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238175,"byte_end":238235,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238236,"byte_end":238241,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238242,"byte_end":238249,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238529,"byte_end":238534,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"start","qualname":"<Spanned<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the start of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the start of the span of the contained value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238461,"byte_end":238517,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238649,"byte_end":238652,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"end","qualname":"<Spanned<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the end of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the end of the span of the contained value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238583,"byte_end":238637,"line_start":50,"line_end":50,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238751,"byte_end":238755,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"span","qualname":"<Spanned<T>>::span","value":"pub fn span(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Get the span of the contained value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238699,"byte_end":238739,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238900,"byte_end":238910,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Spanned<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the spanned value and returns the contained value.\n","sig":null,"attributes":[{"value":"/ Consumes the spanned value and returns the contained value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238825,"byte_end":238888,"line_start":60,"line_end":60,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239013,"byte_end":239020,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Spanned<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238954,"byte_end":239001,"line_start":65,"line_end":65,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239134,"byte_end":239141,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Spanned<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained value.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239067,"byte_end":239122,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6076,"byte_end":6079,"line_start":41,"line_end":41,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10714,"byte_end":10717,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10857,"byte_end":10860,"line_start":212,"line_end":212,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":11009,"byte_end":11012,"line_start":221,"line_end":221,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":11258,"byte_end":11261,"line_start":230,"line_end":230,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":11583,"byte_end":11586,"line_start":244,"line_end":244,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":11801,"byte_end":11804,"line_start":254,"line_end":254,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":11983,"byte_end":11986,"line_start":261,"line_end":261,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":12409,"byte_end":12412,"line_start":277,"line_end":277,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":12623,"byte_end":12630,"line_start":285,"line_end":285,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":13520,"byte_end":13523,"line_start":319,"line_end":319,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":13757,"byte_end":13760,"line_start":330,"line_end":330,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15998,"byte_end":16003,"line_start":407,"line_end":407,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17031,"byte_end":17042,"line_start":439,"line_end":439,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17476,"byte_end":17489,"line_start":455,"line_end":455,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":19967,"byte_end":19970,"line_start":546,"line_end":546,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22562,"byte_end":22567,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":28528,"byte_end":28533,"line_start":234,"line_end":234,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":28712,"byte_end":28717,"line_start":245,"line_end":245,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":28884,"byte_end":28889,"line_start":254,"line_end":254,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":29029,"byte_end":29034,"line_start":261,"line_end":261,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":29211,"byte_end":29216,"line_start":267,"line_end":267,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":29457,"byte_end":29462,"line_start":275,"line_end":275,"column_start":75,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30894,"byte_end":30900,"line_start":326,"line_end":326,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":31747,"byte_end":31753,"line_start":361,"line_end":361,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":32264,"byte_end":32269,"line_start":384,"line_end":384,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":32476,"byte_end":32481,"line_start":392,"line_end":392,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":32632,"byte_end":32637,"line_start":399,"line_end":399,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":34372,"byte_end":34377,"line_start":446,"line_end":446,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":34565,"byte_end":34577,"line_start":453,"line_end":453,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":37810,"byte_end":37815,"line_start":545,"line_end":545,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1573},{"krate":0,"index":1575},{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":40524,"byte_end":40539,"line_start":633,"line_end":633,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":40693,"byte_end":40708,"line_start":641,"line_end":641,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":41353,"byte_end":41368,"line_start":667,"line_end":667,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":41555,"byte_end":41570,"line_start":676,"line_end":676,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":42697,"byte_end":42702,"line_start":714,"line_end":714,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":42844,"byte_end":42854,"line_start":724,"line_end":724,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":48188,"byte_end":48200,"line_start":914,"line_end":914,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":48593,"byte_end":48605,"line_start":931,"line_end":931,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":49001,"byte_end":49013,"line_start":947,"line_end":947,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":49408,"byte_end":49420,"line_start":963,"line_end":963,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":49806,"byte_end":49818,"line_start":979,"line_end":979,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":50827,"byte_end":50839,"line_start":1015,"line_end":1015,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":51400,"byte_end":51415,"line_start":1040,"line_end":1040,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":51661,"byte_end":51676,"line_start":1051,"line_end":1051,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":54215,"byte_end":54223,"line_start":67,"line_end":67,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":54355,"byte_end":54363,"line_start":73,"line_end":73,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":54835,"byte_end":54839,"line_start":91,"line_end":91,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":55008,"byte_end":55012,"line_start":97,"line_end":97,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":55357,"byte_end":55363,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":55620,"byte_end":55628,"line_start":117,"line_end":117,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":61680,"byte_end":61688,"line_start":308,"line_end":308,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":62019,"byte_end":62027,"line_start":321,"line_end":321,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":62221,"byte_end":62236,"line_start":328,"line_end":328,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":63078,"byte_end":63089,"line_start":355,"line_end":355,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":63283,"byte_end":63295,"line_start":362,"line_end":362,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":64005,"byte_end":64023,"line_start":390,"line_end":390,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":64219,"byte_end":64226,"line_start":397,"line_end":397,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":64864,"byte_end":64882,"line_start":419,"line_end":419,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":65021,"byte_end":65039,"line_start":425,"line_end":425,"column_start":23,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69757,"byte_end":69770,"line_start":160,"line_end":160,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70065,"byte_end":70079,"line_start":176,"line_end":176,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71756,"byte_end":71766,"line_start":246,"line_end":246,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":94673,"byte_end":94685,"line_start":970,"line_end":970,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":96182,"byte_end":96194,"line_start":1019,"line_end":1019,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":96565,"byte_end":96577,"line_start":1035,"line_end":1035,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":96945,"byte_end":96957,"line_start":1051,"line_end":1051,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":97317,"byte_end":97331,"line_start":1067,"line_end":1067,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":99265,"byte_end":99279,"line_start":1132,"line_end":1132,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":101007,"byte_end":101021,"line_start":1190,"line_end":1190,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":105499,"byte_end":105514,"line_start":1361,"line_end":1361,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":110057,"byte_end":110062,"line_start":1529,"line_end":1529,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":110835,"byte_end":110840,"line_start":1546,"line_end":1546,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":110865,"byte_end":110870,"line_start":1548,"line_end":1548,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":112496,"byte_end":112506,"line_start":1610,"line_end":1610,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":112624,"byte_end":112634,"line_start":1616,"line_end":1616,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":116728,"byte_end":116738,"line_start":1771,"line_end":1771,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":117044,"byte_end":117054,"line_start":1784,"line_end":1784,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":117367,"byte_end":117377,"line_start":1797,"line_end":1797,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":117687,"byte_end":117697,"line_start":1810,"line_end":1810,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":117999,"byte_end":118009,"line_start":1823,"line_end":1823,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":118432,"byte_end":118442,"line_start":1840,"line_end":1840,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":131048,"byte_end":131058,"line_start":400,"line_end":400,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":136339,"byte_end":136349,"line_start":542,"line_end":542,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":138283,"byte_end":138293,"line_start":602,"line_end":602,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1902},{"krate":0,"index":1904},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1924},{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":141413,"byte_end":141428,"line_start":712,"line_end":712,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":141762,"byte_end":141777,"line_start":724,"line_end":724,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":141928,"byte_end":141943,"line_start":732,"line_end":732,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1928},{"krate":0,"index":1930},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1936},{"krate":0,"index":1938},{"krate":0,"index":1940},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":1946},{"krate":0,"index":1948},{"krate":0,"index":1950},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1962},{"krate":0,"index":1964},{"krate":0,"index":1966},{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":1978},{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":143290,"byte_end":143307,"line_start":779,"line_end":779,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":143629,"byte_end":143646,"line_start":793,"line_end":793,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1070},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1982},{"krate":0,"index":1984},{"krate":0,"index":1986},{"krate":0,"index":1988},{"krate":0,"index":1990},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1996},{"krate":0,"index":1998},{"krate":0,"index":2000},{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":149329,"byte_end":149339,"line_start":964,"line_end":964,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":149708,"byte_end":149713,"line_start":980,"line_end":980,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":150093,"byte_end":150112,"line_start":995,"line_end":995,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":151459,"byte_end":151479,"line_start":1040,"line_end":1040,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":152078,"byte_end":152103,"line_start":1064,"line_end":1064,"column_start":37,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2054},{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2060},{"krate":0,"index":2062},{"krate":0,"index":2064},{"krate":0,"index":2066},{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2082},{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":152675,"byte_end":152698,"line_start":1086,"line_end":1086,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":153247,"byte_end":153270,"line_start":1105,"line_end":1105,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":153988,"byte_end":154011,"line_start":1129,"line_end":1129,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":154947,"byte_end":154968,"line_start":1160,"line_end":1160,"column_start":38,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":158662,"byte_end":158674,"line_start":1266,"line_end":1266,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1195},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":185353,"byte_end":185358,"line_start":2025,"line_end":2025,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":186967,"byte_end":186972,"line_start":2086,"line_end":2086,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":187114,"byte_end":187119,"line_start":2092,"line_end":2092,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":190591,"byte_end":190596,"line_start":2175,"line_end":2175,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":190620,"byte_end":190625,"line_start":2177,"line_end":2177,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":191022,"byte_end":191028,"line_start":2199,"line_end":2199,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":192313,"byte_end":192314,"line_start":2250,"line_end":2250,"column_start":10,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":194334,"byte_end":194343,"line_start":84,"line_end":84,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":208112,"byte_end":208120,"line_start":488,"line_end":488,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":208545,"byte_end":208556,"line_start":505,"line_end":505,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":209403,"byte_end":209408,"line_start":538,"line_end":538,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238444,"byte_end":238451,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239219,"byte_end":239226,"line_start":76,"line_end":76,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239334,"byte_end":239341,"line_start":82,"line_end":82,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239452,"byte_end":239459,"line_start":88,"line_end":88,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239490,"byte_end":239497,"line_start":90,"line_end":90,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239626,"byte_end":239633,"line_start":96,"line_end":96,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239776,"byte_end":239783,"line_start":102,"line_end":102,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239919,"byte_end":239926,"line_start":108,"line_end":108,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":240196,"byte_end":240210,"line_start":118,"line_end":118,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":241572,"byte_end":241579,"line_start":161,"line_end":161,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4305,"byte_end":4308,"line_start":156,"line_end":156,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4318,"byte_end":4323,"line_start":157,"line_end":157,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":162}},{"kind":"Mod","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4395,"byte_end":4398,"line_start":162,"line_end":162,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":535}},{"kind":"Mod","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4497,"byte_end":4499,"line_start":165,"line_end":165,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":913}},{"kind":"Mod","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/lib.rs","byte_start":4612,"byte_end":4618,"line_start":171,"line_end":171,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1347}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":6076,"byte_end":6079,"line_start":41,"line_end":41,"column_start":6,"column_end":9},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10714,"byte_end":10717,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":10857,"byte_end":10860,"line_start":212,"line_end":212,"column_start":16,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":11009,"byte_end":11012,"line_start":221,"line_end":221,"column_start":20,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":11258,"byte_end":11261,"line_start":230,"line_end":230,"column_start":43,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":2223}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":11583,"byte_end":11586,"line_start":244,"line_end":244,"column_start":46,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":11801,"byte_end":11804,"line_start":254,"line_end":254,"column_start":16,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":11983,"byte_end":11986,"line_start":261,"line_end":261,"column_start":25,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":18},"to":{"krate":18,"index":1679}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":12409,"byte_end":12412,"line_start":277,"line_end":277,"column_start":36,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":18},"to":{"krate":18,"index":1191}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":12623,"byte_end":12630,"line_start":285,"line_end":285,"column_start":40,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":72},"to":{"krate":18,"index":1275}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":13520,"byte_end":13523,"line_start":319,"line_end":319,"column_start":40,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":13757,"byte_end":13760,"line_start":330,"line_end":330,"column_start":34,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":4958}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":15998,"byte_end":16003,"line_start":407,"line_end":407,"column_start":10,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17031,"byte_end":17042,"line_start":439,"line_end":439,"column_start":10,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":17476,"byte_end":17489,"line_start":455,"line_end":455,"column_start":10,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/map.rs","byte_start":19967,"byte_end":19970,"line_start":546,"line_end":546,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":4949}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":22562,"byte_end":22567,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":28528,"byte_end":28533,"line_start":234,"line_end":234,"column_start":27,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":2223}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":28712,"byte_end":28717,"line_start":245,"line_end":245,"column_start":30,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":28884,"byte_end":28889,"line_start":254,"line_end":254,"column_start":28,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":29029,"byte_end":29034,"line_start":261,"line_end":261,"column_start":39,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":29211,"byte_end":29216,"line_start":267,"line_end":267,"column_start":64,"column_end":69},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":29457,"byte_end":29462,"line_start":275,"line_end":275,"column_start":75,"column_end":80},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30487,"byte_end":30493,"line_start":313,"line_end":313,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":242},"to":{"krate":0,"index":237}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":30894,"byte_end":30900,"line_start":326,"line_end":326,"column_start":17,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":5079},"to":{"krate":0,"index":242}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":31747,"byte_end":31753,"line_start":361,"line_end":361,"column_start":16,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":5079},"to":{"krate":0,"index":237}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":32264,"byte_end":32269,"line_start":384,"line_end":384,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":32476,"byte_end":32481,"line_start":392,"line_end":392,"column_start":18,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":7901}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":32632,"byte_end":32637,"line_start":399,"line_end":399,"column_start":25,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1477},"to":{"krate":18,"index":1679}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":34372,"byte_end":34377,"line_start":446,"line_end":446,"column_start":36,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1477},"to":{"krate":18,"index":1191}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":34565,"byte_end":34577,"line_start":453,"line_end":453,"column_start":40,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":288},"to":{"krate":18,"index":1275}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":37810,"byte_end":37815,"line_start":545,"line_end":545,"column_start":37,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1477},"to":{"krate":18,"index":1213}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":40524,"byte_end":40539,"line_start":633,"line_end":633,"column_start":6,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":40693,"byte_end":40708,"line_start":641,"line_end":641,"column_start":34,"column_end":49},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":327},"to":{"krate":18,"index":1331}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":41353,"byte_end":41368,"line_start":667,"line_end":667,"column_start":6,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":41555,"byte_end":41570,"line_start":676,"line_end":676,"column_start":34,"column_end":49},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":337},"to":{"krate":18,"index":1349}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":42697,"byte_end":42702,"line_start":714,"line_end":714,"column_start":59,"column_end":64},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1477},"to":{"krate":18,"index":1407}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":42844,"byte_end":42854,"line_start":724,"line_end":724,"column_start":26,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":355},"to":{"krate":18,"index":1682}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":48188,"byte_end":48200,"line_start":914,"line_end":914,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":399},"to":{"krate":18,"index":1732}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":48593,"byte_end":48605,"line_start":931,"line_end":931,"column_start":30,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":399},"to":{"krate":18,"index":1738}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":49001,"byte_end":49013,"line_start":947,"line_end":947,"column_start":36,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":399},"to":{"krate":18,"index":1744}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":49408,"byte_end":49420,"line_start":963,"line_end":963,"column_start":37,"column_end":49},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":399},"to":{"krate":18,"index":1750}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":49806,"byte_end":49818,"line_start":979,"line_end":979,"column_start":28,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":401},"to":{"krate":18,"index":1756}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":50827,"byte_end":50839,"line_start":1015,"line_end":1015,"column_start":31,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":401},"to":{"krate":18,"index":1767}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":51400,"byte_end":51415,"line_start":1040,"line_end":1040,"column_start":44,"column_end":59},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":442},"to":{"krate":18,"index":1202}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/value.rs","byte_start":51661,"byte_end":51676,"line_start":1051,"line_end":1051,"column_start":36,"column_end":51},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":442},"to":{"krate":18,"index":1275}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":54215,"byte_end":54223,"line_start":67,"line_end":67,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1579},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":54355,"byte_end":54363,"line_start":73,"line_end":73,"column_start":23,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1579},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":54835,"byte_end":54839,"line_start":91,"line_end":91,"column_start":23,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1595},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":55008,"byte_end":55012,"line_start":97,"line_end":97,"column_start":23,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":55357,"byte_end":55363,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1616},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":55620,"byte_end":55628,"line_start":117,"line_end":117,"column_start":18,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1579},"to":{"krate":2,"index":7901}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":61680,"byte_end":61688,"line_start":308,"line_end":308,"column_start":25,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1579},"to":{"krate":18,"index":1679}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":62019,"byte_end":62027,"line_start":321,"line_end":321,"column_start":36,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1579},"to":{"krate":18,"index":1191}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":62221,"byte_end":62236,"line_start":328,"line_end":328,"column_start":40,"column_end":55},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":494},"to":{"krate":18,"index":1275}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":63078,"byte_end":63089,"line_start":355,"line_end":355,"column_start":36,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":504},"to":{"krate":18,"index":1191}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":63283,"byte_end":63295,"line_start":362,"line_end":362,"column_start":40,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":510},"to":{"krate":18,"index":1275}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":64005,"byte_end":64023,"line_start":390,"line_end":390,"column_start":36,"column_end":54},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":518},"to":{"krate":18,"index":1191}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":64219,"byte_end":64226,"line_start":397,"line_end":397,"column_start":40,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":524},"to":{"krate":18,"index":1275}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":64864,"byte_end":64882,"line_start":419,"line_end":419,"column_start":23,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1589},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/datetime.rs","byte_start":65021,"byte_end":65039,"line_start":425,"line_end":425,"column_start":23,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1589},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":69757,"byte_end":69770,"line_start":160,"line_end":160,"column_start":6,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":70065,"byte_end":70079,"line_start":176,"line_end":176,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":71756,"byte_end":71766,"line_start":246,"line_end":246,"column_start":10,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":94673,"byte_end":94685,"line_start":970,"line_end":970,"column_start":36,"column_end":48},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":561},"to":{"krate":18,"index":1732}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":96182,"byte_end":96194,"line_start":1019,"line_end":1019,"column_start":38,"column_end":50},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":561},"to":{"krate":18,"index":1738}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":96565,"byte_end":96577,"line_start":1035,"line_end":1035,"column_start":45,"column_end":57},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":561},"to":{"krate":18,"index":1750}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":96945,"byte_end":96957,"line_start":1051,"line_end":1051,"column_start":44,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":561},"to":{"krate":18,"index":1744}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":97317,"byte_end":97331,"line_start":1067,"line_end":1067,"column_start":36,"column_end":50},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":568},"to":{"krate":18,"index":1756}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":99265,"byte_end":99279,"line_start":1132,"line_end":1132,"column_start":39,"column_end":53},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":568},"to":{"krate":18,"index":1767}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":101007,"byte_end":101021,"line_start":1190,"line_end":1190,"column_start":34,"column_end":48},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":704},"to":{"krate":18,"index":1682}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":105499,"byte_end":105514,"line_start":1361,"line_end":1361,"column_start":26,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":752},"to":{"krate":18,"index":1682}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":110057,"byte_end":110062,"line_start":1529,"line_end":1529,"column_start":23,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1628},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":110835,"byte_end":110840,"line_start":1546,"line_end":1546,"column_start":23,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1628},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":110865,"byte_end":110870,"line_start":1548,"line_end":1548,"column_start":21,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1628},"to":{"krate":18,"index":8703}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":112496,"byte_end":112506,"line_start":1610,"line_end":1610,"column_start":9,"column_end":19},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":112624,"byte_end":112634,"line_start":1616,"line_end":1616,"column_start":41,"column_end":51},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":815},"to":{"krate":18,"index":1682}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":116728,"byte_end":116738,"line_start":1771,"line_end":1771,"column_start":43,"column_end":53},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":815},"to":{"krate":18,"index":1732}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":117044,"byte_end":117054,"line_start":1784,"line_end":1784,"column_start":45,"column_end":55},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":815},"to":{"krate":18,"index":1738}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":117367,"byte_end":117377,"line_start":1797,"line_end":1797,"column_start":52,"column_end":62},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":815},"to":{"krate":18,"index":1750}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":117687,"byte_end":117697,"line_start":1810,"line_end":1810,"column_start":51,"column_end":61},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":815},"to":{"krate":18,"index":1744}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":117999,"byte_end":118009,"line_start":1823,"line_end":1823,"column_start":43,"column_end":53},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":815},"to":{"krate":18,"index":1756}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/ser.rs","byte_start":118432,"byte_end":118442,"line_start":1840,"line_end":1840,"column_start":46,"column_end":56},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":815},"to":{"krate":18,"index":1767}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":131048,"byte_end":131058,"line_start":400,"line_end":400,"column_start":38,"column_end":48},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":977},"to":{"krate":18,"index":1349}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":136339,"byte_end":136349,"line_start":542,"line_end":542,"column_start":38,"column_end":48},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":977},"to":{"krate":18,"index":1331}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":138283,"byte_end":138293,"line_start":602,"line_end":602,"column_start":41,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":977},"to":{"krate":18,"index":1213}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":141413,"byte_end":141428,"line_start":712,"line_end":712,"column_start":10,"column_end":25},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":141762,"byte_end":141777,"line_start":724,"line_end":724,"column_start":50,"column_end":65},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1035},"to":{"krate":18,"index":1407}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":141928,"byte_end":141943,"line_start":732,"line_end":732,"column_start":37,"column_end":52},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1035},"to":{"krate":18,"index":1213}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":143290,"byte_end":143307,"line_start":779,"line_end":779,"column_start":10,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":143629,"byte_end":143646,"line_start":793,"line_end":793,"column_start":37,"column_end":54},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1055},"to":{"krate":18,"index":1213}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":149329,"byte_end":149339,"line_start":964,"line_end":964,"column_start":52,"column_end":62},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":977},"to":{"krate":18,"index":1407}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":149708,"byte_end":149713,"line_start":980,"line_end":980,"column_start":48,"column_end":53},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2086},"to":{"krate":18,"index":1407}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":150093,"byte_end":150112,"line_start":995,"line_end":995,"column_start":37,"column_end":56},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1094},"to":{"krate":18,"index":1349}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":151459,"byte_end":151479,"line_start":1040,"line_end":1040,"column_start":34,"column_end":54},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1109},"to":{"krate":18,"index":1349}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":152078,"byte_end":152103,"line_start":1064,"line_end":1064,"column_start":37,"column_end":62},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1120},"to":{"krate":18,"index":1213}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":152675,"byte_end":152698,"line_start":1086,"line_end":1086,"column_start":35,"column_end":58},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1127},"to":{"krate":18,"index":1387}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":153247,"byte_end":153270,"line_start":1105,"line_end":1105,"column_start":34,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1138},"to":{"krate":18,"index":1349}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":153988,"byte_end":154011,"line_start":1129,"line_end":1129,"column_start":35,"column_end":58},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1138},"to":{"krate":18,"index":1387}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":154947,"byte_end":154968,"line_start":1160,"line_end":1160,"column_start":38,"column_end":59},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1156},"to":{"krate":18,"index":1395}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":158662,"byte_end":158674,"line_start":1266,"line_end":1266,"column_start":10,"column_end":22},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":185353,"byte_end":185358,"line_start":2025,"line_end":2025,"column_start":6,"column_end":11},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":186967,"byte_end":186972,"line_start":2086,"line_end":2086,"column_start":45,"column_end":50},"kind":{"Impl":{"id":105}},"from":{"krate":1,"index":2591},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":187114,"byte_end":187119,"line_start":2092,"line_end":2092,"column_start":23,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1727},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":190591,"byte_end":190596,"line_start":2175,"line_end":2175,"column_start":23,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1727},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":190620,"byte_end":190625,"line_start":2177,"line_end":2177,"column_start":20,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1727},"to":{"krate":18,"index":8089}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":191022,"byte_end":191028,"line_start":2199,"line_end":2199,"column_start":10,"column_end":16},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/de.rs","byte_start":192313,"byte_end":192314,"line_start":2250,"line_end":2250,"column_start":10,"column_end":11},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":194334,"byte_end":194343,"line_start":84,"line_end":84,"column_start":10,"column_end":19},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":208112,"byte_end":208120,"line_start":488,"line_end":488,"column_start":23,"column_end":31},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2243},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":208545,"byte_end":208556,"line_start":505,"line_end":505,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/tokens.rs","byte_start":209403,"byte_end":209408,"line_start":538,"line_end":538,"column_start":10,"column_end":15},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":238444,"byte_end":238451,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239219,"byte_end":239226,"line_start":76,"line_end":76,"column_start":22,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2258},"to":{"krate":2,"index":1647}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239334,"byte_end":239341,"line_start":82,"line_end":82,"column_start":34,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2258},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239452,"byte_end":239459,"line_start":88,"line_end":88,"column_start":20,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2258},"to":{"krate":2,"index":1702}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239490,"byte_end":239497,"line_start":90,"line_end":90,"column_start":24,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2258},"to":{"krate":2,"index":6503}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239626,"byte_end":239633,"line_start":96,"line_end":96,"column_start":36,"column_end":43},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2258},"to":{"krate":2,"index":1734}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239776,"byte_end":239783,"line_start":102,"line_end":102,"column_start":22,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2258},"to":{"krate":2,"index":1723}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":239919,"byte_end":239926,"line_start":108,"line_end":108,"column_start":39,"column_end":46},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2258},"to":{"krate":18,"index":1191}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":240196,"byte_end":240210,"line_start":118,"line_end":118,"column_start":43,"column_end":57},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1405},"to":{"krate":18,"index":1275}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.7/src/spanned.rs","byte_start":241572,"byte_end":241579,"line_start":161,"line_end":161,"column_start":44,"column_end":51},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2258},"to":{"krate":18,"index":1679}}]}