{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1","program":"/home/ratnadeepb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","which","/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=7b76e9fd92b53cd3","-C","extra-filename=-7b76e9fd92b53cd3","--out-dir","/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps","-L","dependency=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps","--extern","libc=/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/liblibc-addf9565c24a62c4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ratnadeepb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ratnadeepb/rust/l2switch/sw-engine/target/rls/debug/deps/libwhich-7b76e9fd92b53cd3.rmeta"},"prelude":{"crate_id":{"name":"which","disambiguator":[1533474015567135412,16934339410655147828]},"crate_root":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src","external_crates":[{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","num":18,"id":{"name":"libc","disambiguator":[10873051686763904907,14496391003897205781]}}],"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":0,"byte_end":7845,"line_start":1,"line_end":271,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":658,"byte_end":659,"line_start":37,"line_end":37,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"Result, ErrorKind","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":0,"byte_end":7845,"line_start":1,"line_end":271,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":33},{"krate":0,"index":49},{"krate":0,"index":85},{"krate":0,"index":225},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":235},{"krate":0,"index":91},{"krate":0,"index":237},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":239},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":181},{"krate":0,"index":187},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":101},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":189},{"krate":0,"index":195},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":126},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153}],"decl_id":null,"docs":" which","sig":null,"attributes":[{"value":"/ which","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":0,"byte_end":9,"line_start":1,"line_end":1,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":10,"byte_end":13,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A Rust equivalent of Unix command `which(1)`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":14,"byte_end":63,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/ # Example:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":64,"byte_end":78,"line_start":4,"line_end":4,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":79,"byte_end":82,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ To find which rustc executable binary is using:","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":83,"byte_end":134,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":135,"byte_end":138,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ``` norun","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":139,"byte_end":152,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/ use which::which;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":153,"byte_end":174,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":175,"byte_end":178,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ let result = which::which(\"rustc\").unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":179,"byte_end":227,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(result, PathBuf::from(\"/usr/bin/rustc\"));","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":228,"byte_end":284,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":285,"byte_end":288,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":289,"byte_end":296,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":155},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":9461,"byte_end":9466,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":156}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":160},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":9787,"byte_end":9802,"line_start":18,"line_end":18,"column_start":5,"column_end":20},"name":"BadAbsolutePath","qualname":"::error::ErrorKind::BadAbsolutePath","value":"ErrorKind::BadAbsolutePath","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":162},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":9808,"byte_end":9823,"line_start":19,"line_end":19,"column_start":5,"column_end":20},"name":"BadRelativePath","qualname":"::error::ErrorKind::BadRelativePath","value":"ErrorKind::BadRelativePath","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":164},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":9829,"byte_end":9849,"line_start":20,"line_end":20,"column_start":5,"column_end":25},"name":"CannotFindBinaryPath","qualname":"::error::ErrorKind::CannotFindBinaryPath","value":"ErrorKind::CannotFindBinaryPath","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":166},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":9855,"byte_end":9874,"line_start":21,"line_end":21,"column_start":5,"column_end":24},"name":"CannotGetCurrentDir","qualname":"::error::ErrorKind::CannotGetCurrentDir","value":"ErrorKind::CannotGetCurrentDir","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":168},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":9880,"byte_end":9898,"line_start":22,"line_end":22,"column_start":5,"column_end":23},"name":"CannotCanonicalize","qualname":"::error::ErrorKind::CannotCanonicalize","value":"ErrorKind::CannotCanonicalize","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":159},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":9771,"byte_end":9780,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n    BadAbsolutePath,\n    BadRelativePath,\n    CannotFindBinaryPath,\n    CannotGetCurrentDir,\n    CannotCanonicalize,\n}","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":10922,"byte_end":10926,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":11555,"byte_end":11561,"line_start":92,"line_end":92,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1311,"byte_end":1316,"line_start":61,"line_end":61,"column_start":8,"column_end":13},"name":"which","qualname":"::which","value":"pub fn which<T: AsRef<OsStr>>(T) -> Result<path::PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Find a exectable binary's path by name.","sig":null,"attributes":[{"value":"/ Find a exectable binary's path by name.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":682,"byte_end":725,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":726,"byte_end":729,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If given an absolute path, returns it if the file exists and is executable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":730,"byte_end":809,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":810,"byte_end":813,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If given a relative path, returns an absolute path to the file if","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":814,"byte_end":883,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ it exists and is executable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":884,"byte_end":916,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":917,"byte_end":920,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ If given a string without path separators, looks for a file named","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":921,"byte_end":990,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ `binary_name` at each directory in `$PATH` and if it finds an executable","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":991,"byte_end":1067,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ file there, returns it.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1068,"byte_end":1095,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1100,"byte_end":1113,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1114,"byte_end":1117,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ``` norun","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1118,"byte_end":1131,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/ use which::which;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1132,"byte_end":1153,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1154,"byte_end":1181,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1182,"byte_end":1185,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let result = which::which(\"rustc\").unwrap();","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1186,"byte_end":1234,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(result, PathBuf::from(\"/usr/bin/rustc\"));","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1235,"byte_end":1291,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1292,"byte_end":1295,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1296,"byte_end":1303,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":97},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1752,"byte_end":1760,"line_start":71,"line_end":71,"column_start":8,"column_end":16},"name":"which_in","qualname":"::which_in","value":"pub fn which_in<T, U, V>(T, Option<U>, V) -> Result<path::PathBuf> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Find `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.\n","sig":null,"attributes":[{"value":"/ Find `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":1657,"byte_end":1744,"line_start":70,"line_end":70,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":181},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2837,"byte_end":2841,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"Path","qualname":"::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":182}],"decl_id":null,"docs":" An owned, immutable wrapper around a `PathBuf` containing the path of an executable.","sig":null,"attributes":[{"value":"/ An owned, immutable wrapper around a `PathBuf` containing the path of an executable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2169,"byte_end":2257,"line_start":86,"line_end":86,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2258,"byte_end":2261,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The constructed `PathBuf` is the output of `which` or `which_in`, but `which::Path` has the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2262,"byte_end":2357,"line_start":88,"line_end":88,"column_start":1,"column_end":96}},{"value":"/ advantage of being a type distinct from `std::path::Path` and `std::path::PathBuf`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2358,"byte_end":2445,"line_start":89,"line_end":89,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2446,"byte_end":2449,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ It can be beneficial to use `which::Path` instead of `std::path::Path` when you want the type","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2450,"byte_end":2547,"line_start":91,"line_end":91,"column_start":1,"column_end":98}},{"value":"/ system to enforce the need for a path that exists and points to a binary that is executable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2548,"byte_end":2644,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2645,"byte_end":2648,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Since `which::Path` implements `Deref` for `std::path::Path`, all methods on `&std::path::Path`","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2649,"byte_end":2748,"line_start":94,"line_end":94,"column_start":1,"column_end":100}},{"value":"/ are also available to `&which::Path` values.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2749,"byte_end":2797,"line_start":95,"line_end":95,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3024,"byte_end":3027,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<T: AsRef<OsStr>>(T) -> Result<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the path of an executable binary by name.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2889,"byte_end":2942,"line_start":102,"line_end":102,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2947,"byte_end":2950,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This calls `which` and maps the result into a `Path`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2955,"byte_end":3012,"line_start":104,"line_end":104,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3388,"byte_end":3394,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"new_in","qualname":"<Path>::new_in","value":"pub fn new_in<T, U, V>(T, Option<U>, V) -> Result<Path> where T: AsRef<OsStr>,\nU: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of an executable binary by name in the path list `paths` and using the\n current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns the path of an executable binary by name in the path list `paths` and using the","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3145,"byte_end":3236,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ current working directory `cwd` to resolve relative paths.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3241,"byte_end":3303,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3308,"byte_end":3311,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in` and maps the result into a `Path`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3316,"byte_end":3376,"line_start":112,"line_end":112,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3698,"byte_end":3705,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Path>::as_path","value":"pub fn as_path(&Self) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `std::path::Path`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `std::path::Path`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3639,"byte_end":3686,"line_start":122,"line_end":122,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3859,"byte_end":3872,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"pub fn into_path_buf(Self) -> path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `which::Path`, yielding its underlying `std::path::PathBuf`.\n","sig":null,"attributes":[{"value":"/ Consumes the `which::Path`, yielding its underlying `std::path::PathBuf`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3770,"byte_end":3847,"line_start":127,"line_end":127,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5477,"byte_end":5490,"line_start":187,"line_end":187,"column_start":12,"column_end":25},"name":"CanonicalPath","qualname":"::CanonicalPath","value":"CanonicalPath {  }","parent":null,"children":[{"krate":0,"index":190}],"decl_id":null,"docs":" An owned, immutable wrapper around a `PathBuf` containing the _canonical_ path of an\n executable.","sig":null,"attributes":[{"value":"/ An owned, immutable wrapper around a `PathBuf` containing the _canonical_ path of an","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4667,"byte_end":4755,"line_start":173,"line_end":173,"column_start":1,"column_end":89}},{"value":"/ executable.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4756,"byte_end":4771,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4772,"byte_end":4775,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The constructed `PathBuf` is the result of `which` or `which_in` followed by","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4776,"byte_end":4856,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ `Path::canonicalize`, but `CanonicalPath` has the advantage of being a type distinct from","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4857,"byte_end":4950,"line_start":177,"line_end":177,"column_start":1,"column_end":94}},{"value":"/ `std::path::Path` and `std::path::PathBuf`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4951,"byte_end":4998,"line_start":178,"line_end":178,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4999,"byte_end":5002,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ It can be beneficial to use `CanonicalPath` instead of `std::path::Path` when you want the type","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5003,"byte_end":5102,"line_start":180,"line_end":180,"column_start":1,"column_end":100}},{"value":"/ system to enforce the need for a path that exists, points to a binary that is executable, is","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5103,"byte_end":5199,"line_start":181,"line_end":181,"column_start":1,"column_end":97}},{"value":"/ absolute, has all components normalized, and has all symbolic links resolved","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5200,"byte_end":5280,"line_start":182,"line_end":182,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5281,"byte_end":5284,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Since `CanonicalPath` implements `Deref` for `std::path::Path`, all methods on","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5285,"byte_end":5367,"line_start":184,"line_end":184,"column_start":1,"column_end":83}},{"value":"/ `&std::path::Path` are also available to `&CanonicalPath` values.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5368,"byte_end":5437,"line_start":185,"line_end":185,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5726,"byte_end":5729,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<CanonicalPath>::new","value":"pub fn new<T: AsRef<OsStr>>(T) -> Result<CanonicalPath>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical path of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the canonical path of an executable binary by name.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5547,"byte_end":5610,"line_start":192,"line_end":192,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5615,"byte_end":5618,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This calls `which` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5623,"byte_end":5714,"line_start":194,"line_end":194,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":6309,"byte_end":6315,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"new_in","qualname":"<CanonicalPath>::new_in","value":"pub fn new_in<T, U, V>(T, Option<U>, V) -> Result<CanonicalPath> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical path of an executable binary by name in the path list `paths` and\n using the current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns the canonical path of an executable binary by name in the path list `paths` and","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":6025,"byte_end":6116,"line_start":204,"line_end":204,"column_start":5,"column_end":96}},{"value":"/ using the current working directory `cwd` to resolve relative paths.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":6121,"byte_end":6193,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":6198,"byte_end":6201,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This calls `which` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":6206,"byte_end":6297,"line_start":207,"line_end":207,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":6797,"byte_end":6804,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"as_path","qualname":"<CanonicalPath>::as_path","value":"pub fn as_path(&Self) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `std::path::Path`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `std::path::Path`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":6738,"byte_end":6785,"line_start":222,"line_end":222,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":6967,"byte_end":6980,"line_start":228,"line_end":228,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<CanonicalPath>::into_path_buf","value":"pub fn into_path_buf(Self) -> path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `which::CanonicalPath`, yielding its underlying `std::path::PathBuf`.\n","sig":null,"attributes":[{"value":"/ Consumes the `which::CanonicalPath`, yielding its underlying `std::path::PathBuf`.","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":6869,"byte_end":6955,"line_start":227,"line_end":227,"column_start":5,"column_end":91}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":8045,"byte_end":8062,"line_start":13,"line_end":13,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":8157,"byte_end":8174,"line_start":19,"line_end":19,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":8533,"byte_end":8547,"line_start":35,"line_end":35,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":8636,"byte_end":8650,"line_start":41,"line_end":41,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":8888,"byte_end":8904,"line_start":53,"line_end":53,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":9182,"byte_end":9198,"line_start":66,"line_end":66,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":9976,"byte_end":9985,"line_start":28,"line_end":28,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":10758,"byte_end":10763,"line_start":53,"line_end":53,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":10785,"byte_end":10790,"line_start":55,"line_end":55,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":10903,"byte_end":10908,"line_start":61,"line_end":61,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":11161,"byte_end":11166,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/finder.rs","byte_start":12013,"byte_end":12020,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/finder.rs","byte_start":12417,"byte_end":12423,"line_start":44,"line_end":44,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2878,"byte_end":2882,"line_start":101,"line_end":101,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3946,"byte_end":3950,"line_start":133,"line_end":133,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4086,"byte_end":4090,"line_start":139,"line_end":139,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4224,"byte_end":4228,"line_start":147,"line_end":147,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4323,"byte_end":4327,"line_start":153,"line_end":153,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4409,"byte_end":4413,"line_start":159,"line_end":159,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4452,"byte_end":4456,"line_start":161,"line_end":161,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4578,"byte_end":4585,"line_start":167,"line_end":167,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5527,"byte_end":5540,"line_start":191,"line_end":191,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":132},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7054,"byte_end":7067,"line_start":233,"line_end":233,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7203,"byte_end":7216,"line_start":239,"line_end":239,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7350,"byte_end":7363,"line_start":247,"line_end":247,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7458,"byte_end":7471,"line_start":253,"line_end":253,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7553,"byte_end":7566,"line_start":259,"line_end":259,"column_start":13,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7605,"byte_end":7618,"line_start":261,"line_end":261,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7749,"byte_end":7756,"line_start":267,"line_end":267,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":8045,"byte_end":8062,"line_start":13,"line_end":13,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":8157,"byte_end":8174,"line_start":19,"line_end":19,"column_start":18,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":11},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":8533,"byte_end":8547,"line_start":35,"line_end":35,"column_start":6,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":8636,"byte_end":8650,"line_start":41,"line_end":41,"column_start":18,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":18},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":8888,"byte_end":8904,"line_start":53,"line_end":53,"column_start":6,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":25},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/checker.rs","byte_start":9182,"byte_end":9198,"line_start":66,"line_end":66,"column_start":18,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":25},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":9976,"byte_end":9985,"line_start":28,"line_end":28,"column_start":18,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":10758,"byte_end":10763,"line_start":53,"line_end":53,"column_start":28,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":155},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":10785,"byte_end":10790,"line_start":55,"line_end":55,"column_start":18,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":10903,"byte_end":10908,"line_start":61,"line_end":61,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/error.rs","byte_start":11161,"byte_end":11166,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/finder.rs","byte_start":12013,"byte_end":12020,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":1,"index":7465},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/finder.rs","byte_start":12417,"byte_end":12423,"line_start":44,"line_end":44,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":2878,"byte_end":2882,"line_start":101,"line_end":101,"column_start":6,"column_end":10},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":3946,"byte_end":3950,"line_start":133,"line_end":133,"column_start":21,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4086,"byte_end":4090,"line_start":139,"line_end":139,"column_start":26,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4224,"byte_end":4228,"line_start":147,"line_end":147,"column_start":28,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4323,"byte_end":4327,"line_start":153,"line_end":153,"column_start":23,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4409,"byte_end":4413,"line_start":159,"line_end":159,"column_start":13,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":1702}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4452,"byte_end":4456,"line_start":161,"line_end":161,"column_start":35,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":4578,"byte_end":4585,"line_start":167,"line_end":167,"column_start":32,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":7465},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":5527,"byte_end":5540,"line_start":191,"line_end":191,"column_start":6,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7054,"byte_end":7067,"line_start":233,"line_end":233,"column_start":21,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7203,"byte_end":7216,"line_start":239,"line_end":239,"column_start":26,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7350,"byte_end":7363,"line_start":247,"line_end":247,"column_start":28,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7458,"byte_end":7471,"line_start":253,"line_end":253,"column_start":23,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7553,"byte_end":7566,"line_start":259,"line_end":259,"column_start":13,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1702}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7605,"byte_end":7618,"line_start":261,"line_end":261,"column_start":35,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/ratnadeepb/.cargo/registry/src/github.com-1ecc6299db9ec823/which-3.1.1/src/lib.rs","byte_start":7749,"byte_end":7756,"line_start":267,"line_end":267,"column_start":41,"column_end":48},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":7465},"to":{"krate":2,"index":1697}}]}